var THREE={REVISION:"67"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},function(){for(var t=0,e=["ms","moz","webkit","o"],i=0;i<e.length&&!self.requestAnimationFrame;++i)self.requestAnimationFrame=self[e[i]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[e[i]+"CancelAnimationFrame"]||self[e[i]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(e){var i=Date.now(),r=Math.max(0,16-(i-t)),n=self.setTimeout(function(){e(i+r)},r);return t=i+r,n}),void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(t){self.clearTimeout(t)})}(),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(t){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(t)},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(t){return t instanceof THREE.Color?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,i){return this.r=t,this.g=e,this.b=i,this},setHSL:function(t,e,i){if(0===e)this.r=this.g=this.b=i;else{var r=function(t,e,i){return 0>i&&(i+=1),i>1&&(i-=1),1/6>i?t+6*(e-t)*i:.5>i?e:2/3>i?t+6*(e-t)*(2/3-i):t},n=.5>=i?i*(1+e):i+e-i*e,o=2*i-n;this.r=r(o,n,t+1/3),this.g=r(o,n,t),this.b=r(o,n,t-1/3)}return this},setStyle:function(t){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(t)){var e=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(t);return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,this}if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(t)){var e=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(t);return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(t)){var e=/^\#([0-9a-f]{6})$/i.exec(t);return this.setHex(parseInt(e[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(t)){var e=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(t);return this.setHex(parseInt(e[1]+e[1]+e[2]+e[2]+e[3]+e[3],16)),this}return/^(\w+)$/i.test(t)?(this.setHex(THREE.ColorKeywords[t]),this):void 0},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t){return this.r=t.r*t.r,this.g=t.g*t.g,this.b=t.b*t.b,this},copyLinearToGamma:function(t){return this.r=Math.sqrt(t.r),this.g=Math.sqrt(t.g),this.b=Math.sqrt(t.b),this},convertGammaToLinear:function(){var t=this.r,e=this.g,i=this.b;return this.r=t*t,this.g=e*e,this.b=i*i,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){var e,i,r=t||{h:0,s:0,l:0},n=this.r,o=this.g,a=this.b,s=Math.max(n,o,a),h=Math.min(n,o,a),l=(h+s)/2;if(h===s)e=0,i=0;else{var c=s-h;switch(i=.5>=l?c/(s+h):c/(2-s-h),s){case n:e=(o-a)/c+(a>o?6:0);break;case o:e=(a-n)/c+2;break;case a:e=(n-o)/c+4}e/=6}return r.h=e,r.s=i,r.l=l,r},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,e,i){var r=this.getHSL();return r.h+=t,r.s+=e,r.l+=i,this.setHSL(r.h,r.s,r.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t){return this.r=t[0],this.g=t[1],this.b=t[2],this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(t,e,i,r){this._x=t||0,this._y=e||0,this._z=i||0,this._w=void 0!==r?r:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(t){this._x=t,this.onChangeCallback()},get y(){return this._y},set y(t){this._y=t,this.onChangeCallback()},get z(){return this._z},set z(t){this._z=t,this.onChangeCallback()},get w(){return this._w},set w(t){this._w=t,this.onChangeCallback()},set:function(t,e,i,r){return this._x=t,this._y=e,this._z=i,this._w=r,this.onChangeCallback(),this},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._w=t._w,this.onChangeCallback(),this},setFromEuler:function(t,e){if(t instanceof THREE.Euler==!1)throw new Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var i=Math.cos(t._x/2),r=Math.cos(t._y/2),n=Math.cos(t._z/2),o=Math.sin(t._x/2),a=Math.sin(t._y/2),s=Math.sin(t._z/2);return"XYZ"===t.order?(this._x=o*r*n+i*a*s,this._y=i*a*n-o*r*s,this._z=i*r*s+o*a*n,this._w=i*r*n-o*a*s):"YXZ"===t.order?(this._x=o*r*n+i*a*s,this._y=i*a*n-o*r*s,this._z=i*r*s-o*a*n,this._w=i*r*n+o*a*s):"ZXY"===t.order?(this._x=o*r*n-i*a*s,this._y=i*a*n+o*r*s,this._z=i*r*s+o*a*n,this._w=i*r*n-o*a*s):"ZYX"===t.order?(this._x=o*r*n-i*a*s,this._y=i*a*n+o*r*s,this._z=i*r*s-o*a*n,this._w=i*r*n+o*a*s):"YZX"===t.order?(this._x=o*r*n+i*a*s,this._y=i*a*n+o*r*s,this._z=i*r*s-o*a*n,this._w=i*r*n-o*a*s):"XZY"===t.order&&(this._x=o*r*n-i*a*s,this._y=i*a*n-o*r*s,this._z=i*r*s+o*a*n,this._w=i*r*n+o*a*s),e!==!1&&this.onChangeCallback(),this},setFromAxisAngle:function(t,e){var i=e/2,r=Math.sin(i);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(i),this.onChangeCallback(),this},setFromRotationMatrix:function(t){var e,i=t.elements,r=i[0],n=i[4],o=i[8],a=i[1],s=i[5],h=i[9],l=i[2],c=i[6],u=i[10],f=r+s+u;return f>0?(e=.5/Math.sqrt(f+1),this._w=.25/e,this._x=(c-h)*e,this._y=(o-l)*e,this._z=(a-n)*e):r>s&&r>u?(e=2*Math.sqrt(1+r-s-u),this._w=(c-h)/e,this._x=.25*e,this._y=(n+a)/e,this._z=(o+l)/e):s>u?(e=2*Math.sqrt(1+s-r-u),this._w=(o-l)/e,this._x=(n+a)/e,this._y=.25*e,this._z=(h+c)/e):(e=2*Math.sqrt(1+u-r-s),this._w=(a-n)/e,this._x=(o+l)/e,this._y=(h+c)/e,this._z=.25*e),this.onChangeCallback(),this},setFromUnitVectors:function(){var t,e,i=1e-6;return function(r,n){return void 0===t&&(t=new THREE.Vector3),e=r.dot(n)+1,i>e?(e=0,Math.abs(r.x)>Math.abs(r.z)?t.set(-r.y,r.x,0):t.set(0,-r.z,r.y)):t.crossVectors(r,n),this._x=t.x,this._y=t.y,this._z=t.z,this._w=e,this.normalize(),this}}(),inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},multiply:function(t,e){return void 0!==e?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},multiplyQuaternions:function(t,e){var i=t._x,r=t._y,n=t._z,o=t._w,a=e._x,s=e._y,h=e._z,l=e._w;return this._x=i*l+o*a+r*h-n*s,this._y=r*l+o*s+n*a-i*h,this._z=n*l+o*h+i*s-r*a,this._w=o*l-i*a-r*s-n*h,this.onChangeCallback(),this},multiplyVector3:function(t){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},slerp:function(t,e){var i=this._x,r=this._y,n=this._z,o=this._w,a=o*t._w+i*t._x+r*t._y+n*t._z;if(0>a?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=i,this._y=r,this._z=n,this;var s=Math.acos(a),h=Math.sqrt(1-a*a);if(Math.abs(h)<.001)return this._w=.5*(o+this._w),this._x=.5*(i+this._x),this._y=.5*(r+this._y),this._z=.5*(n+this._z),this;var l=Math.sin((1-e)*s)/h,c=Math.sin(e*s)/h;return this._w=o*l+this._w*c,this._x=i*l+this._x*c,this._y=r*l+this._y*c,this._z=n*l+this._z*c,this.onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],this._w=t[3],this.onChangeCallback(),this},toArray:function(){return[this._x,this._y,this._z,this._w]},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(t,e,i,r){return i.copy(t).slerp(e,r)},THREE.Vector2=function(t,e){this.x=t||0,this.y=e||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(t,e){return this.x=t,this.y=e,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScalar:function(t){return this.x+=t,this.y+=t,this},sub:function(t,e){return void 0!==e?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){if(0!==t){var e=1/t;this.x*=e,this.y*=e}else this.x=0,this.y=0;return this},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this},clampScalar:function(){var t,e;return function(i,r){return void 0===t&&(t=new THREE.Vector2,e=new THREE.Vector2),t.set(i,i),e.set(r,r),this.clamp(t,e)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(t){return this.x*t.x+this.y*t.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,i=this.y-t.y;return e*e+i*i},setLength:function(t){var e=this.length();return 0!==e&&t!==e&&this.multiplyScalar(t/e),this},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t){return this.x=t[0],this.y=t[1],this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(t,e,i){this.x=t||0,this.y=e||0,this.z=i||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(t,e,i){return this.x=t,this.y=e,this.z=i,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},sub:function(t,e){return void 0!==e?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(){var t;return function(e){return e instanceof THREE.Euler==!1&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code."),void 0===t&&(t=new THREE.Quaternion),this.applyQuaternion(t.setFromEuler(e)),this}}(),applyAxisAngle:function(){var t;return function(e,i){return void 0===t&&(t=new THREE.Quaternion),this.applyQuaternion(t.setFromAxisAngle(e,i)),this}}(),applyMatrix3:function(t){var e=this.x,i=this.y,r=this.z,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6]*r,this.y=n[1]*e+n[4]*i+n[7]*r,this.z=n[2]*e+n[5]*i+n[8]*r,this},applyMatrix4:function(t){var e=this.x,i=this.y,r=this.z,n=t.elements;return this.x=n[0]*e+n[4]*i+n[8]*r+n[12],this.y=n[1]*e+n[5]*i+n[9]*r+n[13],this.z=n[2]*e+n[6]*i+n[10]*r+n[14],this},applyProjection:function(t){var e=this.x,i=this.y,r=this.z,n=t.elements,o=1/(n[3]*e+n[7]*i+n[11]*r+n[15]);return this.x=(n[0]*e+n[4]*i+n[8]*r+n[12])*o,this.y=(n[1]*e+n[5]*i+n[9]*r+n[13])*o,this.z=(n[2]*e+n[6]*i+n[10]*r+n[14])*o,this},applyQuaternion:function(t){var e=this.x,i=this.y,r=this.z,n=t.x,o=t.y,a=t.z,s=t.w,h=s*e+o*r-a*i,l=s*i+a*e-n*r,c=s*r+n*i-o*e,u=-n*e-o*i-a*r;return this.x=h*s+u*-n+l*-a-c*-o,this.y=l*s+u*-o+c*-n-h*-a,this.z=c*s+u*-a+h*-o-l*-n,this},transformDirection:function(t){var e=this.x,i=this.y,r=this.z,n=t.elements;return this.x=n[0]*e+n[4]*i+n[8]*r,this.y=n[1]*e+n[5]*i+n[9]*r,this.z=n[2]*e+n[6]*i+n[10]*r,this.normalize(),this},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){if(0!==t){var e=1/t;this.x*=e,this.y*=e,this.z*=e}else this.x=0,this.y=0,this.z=0;return this},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this.z>t.z&&(this.z=t.z),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this.z<t.z&&(this.z=t.z),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this.z<t.z?this.z=t.z:this.z>e.z&&(this.z=e.z),this},clampScalar:function(){var t,e;return function(i,r){return void 0===t&&(t=new THREE.Vector3,e=new THREE.Vector3),t.set(i,i,i),e.set(r,r,r),this.clamp(t,e)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(t){var e=this.length();return 0!==e&&t!==e&&this.multiplyScalar(t/e),this},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},cross:function(t,e){if(void 0!==e)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e);var i=this.x,r=this.y,n=this.z;return this.x=r*t.z-n*t.y,this.y=n*t.x-i*t.z,this.z=i*t.y-r*t.x,this},crossVectors:function(t,e){var i=t.x,r=t.y,n=t.z,o=e.x,a=e.y,s=e.z;return this.x=r*s-n*a,this.y=n*o-i*s,this.z=i*a-r*o,this},projectOnVector:function(){var t,e;return function(i){return void 0===t&&(t=new THREE.Vector3),t.copy(i).normalize(),e=this.dot(t),this.copy(t).multiplyScalar(e)}}(),projectOnPlane:function(){var t;return function(e){return void 0===t&&(t=new THREE.Vector3),t.copy(this).projectOnVector(e),this.sub(t)}}(),reflect:function(){var t;return function(e){return void 0===t&&(t=new THREE.Vector3),this.sub(t.copy(e).multiplyScalar(2*this.dot(e)))}}(),angleTo:function(t){var e=this.dot(t)/(this.length()*t.length());return Math.acos(THREE.Math.clamp(e,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,i=this.y-t.y,r=this.z-t.z;return e*e+i*i+r*r},setEulerFromRotationMatrix:function(){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(t){return console.warn("DEPRECATED: Vector3's .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("DEPRECATED: Vector3's .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("DEPRECATED: Vector3's .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code."),this.setFromMatrixColumn(t,e)},setFromMatrixPosition:function(t){return this.x=t.elements[12],this.y=t.elements[13],this.z=t.elements[14],this},setFromMatrixScale:function(t){var e=this.set(t.elements[0],t.elements[1],t.elements[2]).length(),i=this.set(t.elements[4],t.elements[5],t.elements[6]).length(),r=this.set(t.elements[8],t.elements[9],t.elements[10]).length();return this.x=e,this.y=i,this.z=r,this},setFromMatrixColumn:function(t,e){var i=4*t,r=e.elements;return this.x=r[i],this.y=r[i+1],this.z=r[i+2],this},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t){return this.x=t[0],this.y=t[1],this.z=t[2],this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(t,e,i,r){this.x=t||0,this.y=e||0,this.z=i||0,this.w=void 0!==r?r:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(t,e,i,r){return this.x=t,this.y=e,this.z=i,this.w=r,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},sub:function(t,e){return void 0!==e?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var e=this.x,i=this.y,r=this.z,n=this.w,o=t.elements;return this.x=o[0]*e+o[4]*i+o[8]*r+o[12]*n,this.y=o[1]*e+o[5]*i+o[9]*r+o[13]*n,this.z=o[2]*e+o[6]*i+o[10]*r+o[14]*n,this.w=o[3]*e+o[7]*i+o[11]*r+o[15]*n,this},divideScalar:function(t){if(0!==t){var e=1/t;this.x*=e,this.y*=e,this.z*=e,this.w*=e}else this.x=0,this.y=0,this.z=0,this.w=1;return this},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return 1e-4>e?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e,i,r,n,o=.01,a=.1,s=t.elements,h=s[0],l=s[4],c=s[8],u=s[1],f=s[5],d=s[9],p=s[2],E=s[6],m=s[10];if(Math.abs(l-u)<o&&Math.abs(c-p)<o&&Math.abs(d-E)<o){if(Math.abs(l+u)<a&&Math.abs(c+p)<a&&Math.abs(d+E)<a&&Math.abs(h+f+m-3)<a)return this.set(1,0,0,0),this;e=Math.PI;var y=(h+1)/2,v=(f+1)/2,g=(m+1)/2,x=(l+u)/4,T=(c+p)/4,R=(d+E)/4;return y>v&&y>g?o>y?(i=0,r=.707106781,n=.707106781):(i=Math.sqrt(y),r=x/i,n=T/i):v>g?o>v?(i=.707106781,r=0,n=.707106781):(r=Math.sqrt(v),i=x/r,n=R/r):o>g?(i=.707106781,r=.707106781,n=0):(n=Math.sqrt(g),i=T/n,r=R/n),this.set(i,r,n,e),this}var _=Math.sqrt((E-d)*(E-d)+(c-p)*(c-p)+(u-l)*(u-l));return Math.abs(_)<.001&&(_=1),this.x=(E-d)/_,this.y=(c-p)/_,this.z=(u-l)/_,this.w=Math.acos((h+f+m-1)/2),this},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this.z>t.z&&(this.z=t.z),this.w>t.w&&(this.w=t.w),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this.z<t.z&&(this.z=t.z),this.w<t.w&&(this.w=t.w),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this.z<t.z?this.z=t.z:this.z>e.z&&(this.z=e.z),this.w<t.w?this.w=t.w:this.w>e.w&&(this.w=e.w),this},clampScalar:function(){var t,e;return function(i,r){return void 0===t&&(t=new THREE.Vector4,e=new THREE.Vector4),t.set(i,i,i,i),e.set(r,r,r,r),this.clamp(t,e)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(t){var e=this.length();return 0!==e&&t!==e&&this.multiplyScalar(t/e),this},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t){return this.x=t[0],this.y=t[1],this.z=t[2],this.w=t[3],this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Euler=function(t,e,i,r){this._x=t||0,this._y=e||0,this._z=i||0,this._order=r||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(t){this._x=t,this.onChangeCallback()},get y(){return this._y},set y(t){this._y=t,this.onChangeCallback()},get z(){return this._z},set z(t){this._z=t,this.onChangeCallback()},get order(){return this._order},set order(t){this._order=t,this.onChangeCallback()},set:function(t,e,i,r){return this._x=t,this._y=e,this._z=i,this._order=r||this._order,this.onChangeCallback(),this},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,e){var i=THREE.Math.clamp,r=t.elements,n=r[0],o=r[4],a=r[8],s=r[1],h=r[5],l=r[9],c=r[2],u=r[6],f=r[10];return e=e||this._order,"XYZ"===e?(this._y=Math.asin(i(a,-1,1)),Math.abs(a)<.99999?(this._x=Math.atan2(-l,f),this._z=Math.atan2(-o,n)):(this._x=Math.atan2(u,h),this._z=0)):"YXZ"===e?(this._x=Math.asin(-i(l,-1,1)),Math.abs(l)<.99999?(this._y=Math.atan2(a,f),this._z=Math.atan2(s,h)):(this._y=Math.atan2(-c,n),this._z=0)):"ZXY"===e?(this._x=Math.asin(i(u,-1,1)),Math.abs(u)<.99999?(this._y=Math.atan2(-c,f),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(s,n))):"ZYX"===e?(this._y=Math.asin(-i(c,-1,1)),Math.abs(c)<.99999?(this._x=Math.atan2(u,f),this._z=Math.atan2(s,n)):(this._x=0,this._z=Math.atan2(-o,h))):"YZX"===e?(this._z=Math.asin(i(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(a,f))):"XZY"===e?(this._z=Math.asin(-i(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(u,h),this._y=Math.atan2(a,n)):(this._x=Math.atan2(-l,f),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+e),this._order=e,this.onChangeCallback(),this},setFromQuaternion:function(t,e,i){var r=THREE.Math.clamp,n=t.x*t.x,o=t.y*t.y,a=t.z*t.z,s=t.w*t.w;return e=e||this._order,"XYZ"===e?(this._x=Math.atan2(2*(t.x*t.w-t.y*t.z),s-n-o+a),this._y=Math.asin(r(2*(t.x*t.z+t.y*t.w),-1,1)),this._z=Math.atan2(2*(t.z*t.w-t.x*t.y),s+n-o-a)):"YXZ"===e?(this._x=Math.asin(r(2*(t.x*t.w-t.y*t.z),-1,1)),this._y=Math.atan2(2*(t.x*t.z+t.y*t.w),s-n-o+a),this._z=Math.atan2(2*(t.x*t.y+t.z*t.w),s-n+o-a)):"ZXY"===e?(this._x=Math.asin(r(2*(t.x*t.w+t.y*t.z),-1,1)),this._y=Math.atan2(2*(t.y*t.w-t.z*t.x),s-n-o+a),this._z=Math.atan2(2*(t.z*t.w-t.x*t.y),s-n+o-a)):"ZYX"===e?(this._x=Math.atan2(2*(t.x*t.w+t.z*t.y),s-n-o+a),this._y=Math.asin(r(2*(t.y*t.w-t.x*t.z),-1,1)),this._z=Math.atan2(2*(t.x*t.y+t.z*t.w),s+n-o-a)):"YZX"===e?(this._x=Math.atan2(2*(t.x*t.w-t.z*t.y),s-n+o-a),this._y=Math.atan2(2*(t.y*t.w-t.x*t.z),s+n-o-a),this._z=Math.asin(r(2*(t.x*t.y+t.z*t.w),-1,1))):"XZY"===e?(this._x=Math.atan2(2*(t.x*t.w+t.y*t.z),s-n+o-a),this._y=Math.atan2(2*(t.x*t.z+t.y*t.w),s+n-o-a),this._z=Math.asin(r(2*(t.z*t.w-t.x*t.y),-1,1))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+e),this._order=e,i!==!1&&this.onChangeCallback(),this
},reorder:function(){var t=new THREE.Quaternion;return function(e){t.setFromEuler(this),this.setFromQuaternion(t,e)}}(),equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this.onChangeCallback(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Box3=function(t,e){this.min=void 0!==t?t:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==e?e:new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},addPoint:function(t){return t.x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y),t.z<this.min.z?this.min.z=t.z:t.z>this.max.z&&(this.max.z=t.z),this},setFromPoints:function(t){if(t.length>0){var e=t[0];this.min.copy(e),this.max.copy(e);for(var i=1,r=t.length;r>i;i++)this.addPoint(t[i])}else this.makeEmpty();return this},setFromCenterAndSize:function(){var t=new THREE.Vector3;return function(e,i){var r=t.copy(i).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this}}(),setFromObject:function(){var t=new THREE.Vector3;return function(e){var i=this;return e.updateMatrixWorld(!0),this.makeEmpty(),e.traverse(function(e){if(void 0!==e.geometry&&void 0!==e.geometry.vertices)for(var r=e.geometry.vertices,n=0,o=r.length;o>n;n++)t.copy(r[n]),t.applyMatrix4(e.matrixWorld),i.expandByPoint(t)}),this}}(),copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(t){var e=t||new THREE.Vector3;return e.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(t){var e=t||new THREE.Vector3;return e.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z?!1:!0},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z?!0:!1},getParameter:function(t,e){var i=e||new THREE.Vector3;return i.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(t){return t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z?!1:!0},clampPoint:function(t,e){var i=e||new THREE.Vector3;return i.copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new THREE.Vector3;return function(e){var i=t.copy(e).clamp(this.min,this.max);return i.sub(e).length()}}(),getBoundingSphere:function(){var t=new THREE.Vector3;return function(e){var i=e||new THREE.Sphere;return i.center=this.center(),i.radius=.5*this.size(t).length(),i}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(){var t=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(e){return t[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),t[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),t[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),t[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),t[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),t[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),t[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),t[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.makeEmpty(),this.setFromPoints(t),this}}(),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Matrix3=function(t,e,i,r,n,o,a,s,h){this.elements=new Float32Array(9);var l=this.elements;l[0]=void 0!==t?t:1,l[3]=e||0,l[6]=i||0,l[1]=r||0,l[4]=void 0!==n?n:1,l[7]=o||0,l[2]=a||0,l[5]=s||0,l[8]=void 0!==h?h:1},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(t,e,i,r,n,o,a,s,h){var l=this.elements;return l[0]=t,l[3]=e,l[6]=i,l[1]=r,l[4]=n,l[7]=o,l[2]=a,l[5]=s,l[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(t){var e=t.elements;return this.set(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]),this},multiplyVector3:function(t){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(t){return console.warn("DEPRECATED: Matrix3's .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(t)},applyToVector3Array:function(){var t=new THREE.Vector3;return function(e,i,r){void 0===i&&(i=0),void 0===r&&(r=e.length);for(var n=0,o=i;r>n;n+=3,o+=3)t.x=e[o],t.y=e[o+1],t.z=e[o+2],t.applyMatrix3(this),e[o]=t.x,e[o+1]=t.y,e[o+2]=t.z;return e}}(),multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],i=t[1],r=t[2],n=t[3],o=t[4],a=t[5],s=t[6],h=t[7],l=t[8];return e*o*l-e*a*h-i*n*l+i*a*s+r*n*h-r*o*s},getInverse:function(t,e){var i=t.elements,r=this.elements;r[0]=i[10]*i[5]-i[6]*i[9],r[1]=-i[10]*i[1]+i[2]*i[9],r[2]=i[6]*i[1]-i[2]*i[5],r[3]=-i[10]*i[4]+i[6]*i[8],r[4]=i[10]*i[0]-i[2]*i[8],r[5]=-i[6]*i[0]+i[2]*i[4],r[6]=i[9]*i[4]-i[5]*i[8],r[7]=-i[9]*i[0]+i[1]*i[8],r[8]=i[5]*i[0]-i[1]*i[4];var n=i[0]*r[0]+i[1]*r[3]+i[2]*r[6];if(0===n){var o="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(e)throw new Error(o);return console.warn(o),this.identity(),this}return this.multiplyScalar(1/n),this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},flattenToArrayOffset:function(t,e){var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t},getNormalMatrix:function(t){return this.getInverse(t).transpose(),this},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},fromArray:function(t){return this.elements.set(t),this},toArray:function(){var t=this.elements;return[t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8]]},clone:function(){var t=this.elements;return new THREE.Matrix3(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8])}},THREE.Matrix4=function(t,e,i,r,n,o,a,s,h,l,c,u,f,d,p,E){this.elements=new Float32Array(16);var m=this.elements;m[0]=void 0!==t?t:1,m[4]=e||0,m[8]=i||0,m[12]=r||0,m[1]=n||0,m[5]=void 0!==o?o:1,m[9]=a||0,m[13]=s||0,m[2]=h||0,m[6]=l||0,m[10]=void 0!==c?c:1,m[14]=u||0,m[3]=f||0,m[7]=d||0,m[11]=p||0,m[15]=void 0!==E?E:1},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(t,e,i,r,n,o,a,s,h,l,c,u,f,d,p,E){var m=this.elements;return m[0]=t,m[4]=e,m[8]=i,m[12]=r,m[1]=n,m[5]=o,m[9]=a,m[13]=s,m[2]=h,m[6]=l,m[10]=c,m[14]=u,m[3]=f,m[7]=d,m[11]=p,m[15]=E,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(t){return this.elements.set(t.elements),this},extractPosition:function(t){return console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},copyPosition:function(t){var e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this},extractRotation:function(){var t=new THREE.Vector3;return function(e){var i=this.elements,r=e.elements,n=1/t.set(r[0],r[1],r[2]).length(),o=1/t.set(r[4],r[5],r[6]).length(),a=1/t.set(r[8],r[9],r[10]).length();return i[0]=r[0]*n,i[1]=r[1]*n,i[2]=r[2]*n,i[4]=r[4]*o,i[5]=r[5]*o,i[6]=r[6]*o,i[8]=r[8]*a,i[9]=r[9]*a,i[10]=r[10]*a,this}}(),makeRotationFromEuler:function(t){t instanceof THREE.Euler==!1&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var e=this.elements,i=t.x,r=t.y,n=t.z,o=Math.cos(i),a=Math.sin(i),s=Math.cos(r),h=Math.sin(r),l=Math.cos(n),c=Math.sin(n);if("XYZ"===t.order){var u=o*l,f=o*c,d=a*l,p=a*c;e[0]=s*l,e[4]=-s*c,e[8]=h,e[1]=f+d*h,e[5]=u-p*h,e[9]=-a*s,e[2]=p-u*h,e[6]=d+f*h,e[10]=o*s}else if("YXZ"===t.order){var E=s*l,m=s*c,y=h*l,v=h*c;e[0]=E+v*a,e[4]=y*a-m,e[8]=o*h,e[1]=o*c,e[5]=o*l,e[9]=-a,e[2]=m*a-y,e[6]=v+E*a,e[10]=o*s}else if("ZXY"===t.order){var E=s*l,m=s*c,y=h*l,v=h*c;e[0]=E-v*a,e[4]=-o*c,e[8]=y+m*a,e[1]=m+y*a,e[5]=o*l,e[9]=v-E*a,e[2]=-o*h,e[6]=a,e[10]=o*s}else if("ZYX"===t.order){var u=o*l,f=o*c,d=a*l,p=a*c;e[0]=s*l,e[4]=d*h-f,e[8]=u*h+p,e[1]=s*c,e[5]=p*h+u,e[9]=f*h-d,e[2]=-h,e[6]=a*s,e[10]=o*s}else if("YZX"===t.order){var g=o*s,x=o*h,T=a*s,R=a*h;e[0]=s*l,e[4]=R-g*c,e[8]=T*c+x,e[1]=c,e[5]=o*l,e[9]=-a*l,e[2]=-h*l,e[6]=x*c+T,e[10]=g-R*c}else if("XZY"===t.order){var g=o*s,x=o*h,T=a*s,R=a*h;e[0]=s*l,e[4]=-c,e[8]=h*l,e[1]=g*c+R,e[5]=o*l,e[9]=x*c-T,e[2]=T*c-x,e[6]=a*l,e[10]=R*c+g}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},setRotationFromQuaternion:function(t){return console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code."),this.makeRotationFromQuaternion(t)},makeRotationFromQuaternion:function(t){var e=this.elements,i=t.x,r=t.y,n=t.z,o=t.w,a=i+i,s=r+r,h=n+n,l=i*a,c=i*s,u=i*h,f=r*s,d=r*h,p=n*h,E=o*a,m=o*s,y=o*h;return e[0]=1-(f+p),e[4]=c-y,e[8]=u+m,e[1]=c+y,e[5]=1-(l+p),e[9]=d-E,e[2]=u-m,e[6]=d+E,e[10]=1-(l+f),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},lookAt:function(){var t=new THREE.Vector3,e=new THREE.Vector3,i=new THREE.Vector3;return function(r,n,o){var a=this.elements;return i.subVectors(r,n).normalize(),0===i.length()&&(i.z=1),t.crossVectors(o,i).normalize(),0===t.length()&&(i.x+=1e-4,t.crossVectors(o,i).normalize()),e.crossVectors(i,t),a[0]=t.x,a[4]=e.x,a[8]=i.x,a[1]=t.y,a[5]=e.y,a[9]=i.y,a[2]=t.z,a[6]=e.z,a[10]=i.z,this}}(),multiply:function(t,e){return void 0!==e?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},multiplyMatrices:function(t,e){var i=t.elements,r=e.elements,n=this.elements,o=i[0],a=i[4],s=i[8],h=i[12],l=i[1],c=i[5],u=i[9],f=i[13],d=i[2],p=i[6],E=i[10],m=i[14],y=i[3],v=i[7],g=i[11],x=i[15],T=r[0],R=r[4],_=r[8],b=r[12],w=r[1],H=r[5],M=r[9],S=r[13],A=r[2],C=r[6],z=r[10],D=r[14],F=r[3],P=r[7],L=r[11],V=r[15];return n[0]=o*T+a*w+s*A+h*F,n[4]=o*R+a*H+s*C+h*P,n[8]=o*_+a*M+s*z+h*L,n[12]=o*b+a*S+s*D+h*V,n[1]=l*T+c*w+u*A+f*F,n[5]=l*R+c*H+u*C+f*P,n[9]=l*_+c*M+u*z+f*L,n[13]=l*b+c*S+u*D+f*V,n[2]=d*T+p*w+E*A+m*F,n[6]=d*R+p*H+E*C+m*P,n[10]=d*_+p*M+E*z+m*L,n[14]=d*b+p*S+E*D+m*V,n[3]=y*T+v*w+g*A+x*F,n[7]=y*R+v*H+g*C+x*P,n[11]=y*_+v*M+g*z+x*L,n[15]=y*b+v*S+g*D+x*V,this},multiplyToArray:function(t,e,i){var r=this.elements;return this.multiplyMatrices(t,e),i[0]=r[0],i[1]=r[1],i[2]=r[2],i[3]=r[3],i[4]=r[4],i[5]=r[5],i[6]=r[6],i[7]=r[7],i[8]=r[8],i[9]=r[9],i[10]=r[10],i[11]=r[11],i[12]=r[12],i[13]=r[13],i[14]=r[14],i[15]=r[15],this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},multiplyVector3:function(t){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),t.applyProjection(this)},multiplyVector4:function(t){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(t){return console.warn("DEPRECATED: Matrix4's .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(t)},applyToVector3Array:function(){var t=new THREE.Vector3;return function(e,i,r){void 0===i&&(i=0),void 0===r&&(r=e.length);for(var n=0,o=i;r>n;n+=3,o+=3)t.x=e[o],t.y=e[o+1],t.z=e[o+2],t.applyMatrix4(this),e[o]=t.x,e[o+1]=t.y,e[o+2]=t.z;return e}}(),rotateAxis:function(t){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},determinant:function(){var t=this.elements,e=t[0],i=t[4],r=t[8],n=t[12],o=t[1],a=t[5],s=t[9],h=t[13],l=t[2],c=t[6],u=t[10],f=t[14],d=t[3],p=t[7],E=t[11],m=t[15];return d*(+n*s*c-r*h*c-n*a*u+i*h*u+r*a*f-i*s*f)+p*(+e*s*f-e*h*u+n*o*u-r*o*f+r*h*l-n*s*l)+E*(+e*h*c-e*a*f-n*o*c+i*o*f+n*a*l-i*h*l)+m*(-r*a*l-e*s*c+e*a*u+r*o*c-i*o*u+i*s*l)},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},flattenToArrayOffset:function(t,e){var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t},getPosition:function(){var t=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var e=this.elements;return t.set(e[12],e[13],e[14])}}(),setPosition:function(t){var e=this.elements;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){var i=this.elements,r=t.elements,n=r[0],o=r[4],a=r[8],s=r[12],h=r[1],l=r[5],c=r[9],u=r[13],f=r[2],d=r[6],p=r[10],E=r[14],m=r[3],y=r[7],v=r[11],g=r[15];i[0]=c*E*y-u*p*y+u*d*v-l*E*v-c*d*g+l*p*g,i[4]=s*p*y-a*E*y-s*d*v+o*E*v+a*d*g-o*p*g,i[8]=a*u*y-s*c*y+s*l*v-o*u*v-a*l*g+o*c*g,i[12]=s*c*d-a*u*d-s*l*p+o*u*p+a*l*E-o*c*E,i[1]=u*p*m-c*E*m-u*f*v+h*E*v+c*f*g-h*p*g,i[5]=a*E*m-s*p*m+s*f*v-n*E*v-a*f*g+n*p*g,i[9]=s*c*m-a*u*m-s*h*v+n*u*v+a*h*g-n*c*g,i[13]=a*u*f-s*c*f+s*h*p-n*u*p-a*h*E+n*c*E,i[2]=l*E*m-u*d*m+u*f*y-h*E*y-l*f*g+h*d*g,i[6]=s*d*m-o*E*m-s*f*y+n*E*y+o*f*g-n*d*g,i[10]=o*u*m-s*l*m+s*h*y-n*u*y-o*h*g+n*l*g,i[14]=s*l*f-o*u*f-s*h*d+n*u*d+o*h*E-n*l*E,i[3]=c*d*m-l*p*m-c*f*y+h*p*y+l*f*v-h*d*v,i[7]=o*p*m-a*d*m+a*f*y-n*p*y-o*f*v+n*d*v,i[11]=a*l*m-o*c*m-a*h*y+n*c*y+o*h*v-n*l*v,i[15]=o*c*f-a*l*f+a*h*d-n*c*d-o*h*p+n*l*p;var x=n*i[0]+h*i[4]+f*i[8]+m*i[12];if(0==x){var T="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(e)throw new Error(T);return console.warn(T),this.identity(),this}return this.multiplyScalar(1/x),this},translate:function(){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(t){var e=this.elements,i=t.x,r=t.y,n=t.z;return e[0]*=i,e[4]*=r,e[8]*=n,e[1]*=i,e[5]*=r,e[9]*=n,e[2]*=i,e[6]*=r,e[10]*=n,e[3]*=i,e[7]*=r,e[11]*=n,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,Math.max(i,r)))},makeTranslation:function(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var i=Math.cos(e),r=Math.sin(e),n=1-i,o=t.x,a=t.y,s=t.z,h=n*o,l=n*a;return this.set(h*o+i,h*a-r*s,h*s+r*a,0,h*a+r*s,l*a+i,l*s-r*o,0,h*s-r*a,l*s+r*o,n*s*s+i,0,0,0,0,1),this},makeScale:function(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this},compose:function(t,e,i){return this.makeRotationFromQuaternion(e),this.scale(i),this.setPosition(t),this},decompose:function(){var t=new THREE.Vector3,e=new THREE.Matrix4;return function(i,r,n){var o=this.elements,a=t.set(o[0],o[1],o[2]).length(),s=t.set(o[4],o[5],o[6]).length(),h=t.set(o[8],o[9],o[10]).length(),l=this.determinant();0>l&&(a=-a),i.x=o[12],i.y=o[13],i.z=o[14],e.elements.set(this.elements);var c=1/a,u=1/s,f=1/h;return e.elements[0]*=c,e.elements[1]*=c,e.elements[2]*=c,e.elements[4]*=u,e.elements[5]*=u,e.elements[6]*=u,e.elements[8]*=f,e.elements[9]*=f,e.elements[10]*=f,r.setFromRotationMatrix(e),n.x=a,n.y=s,n.z=h,this}}(),makeFrustum:function(t,e,i,r,n,o){var a=this.elements,s=2*n/(e-t),h=2*n/(r-i),l=(e+t)/(e-t),c=(r+i)/(r-i),u=-(o+n)/(o-n),f=-2*o*n/(o-n);return a[0]=s,a[4]=0,a[8]=l,a[12]=0,a[1]=0,a[5]=h,a[9]=c,a[13]=0,a[2]=0,a[6]=0,a[10]=u,a[14]=f,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(t,e,i,r){var n=i*Math.tan(THREE.Math.degToRad(.5*t)),o=-n,a=o*e,s=n*e;return this.makeFrustum(a,s,o,n,i,r)},makeOrthographic:function(t,e,i,r,n,o){var a=this.elements,s=e-t,h=i-r,l=o-n,c=(e+t)/s,u=(i+r)/h,f=(o+n)/l;return a[0]=2/s,a[4]=0,a[8]=0,a[12]=-c,a[1]=0,a[5]=2/h,a[9]=0,a[13]=-u,a[2]=0,a[6]=0,a[10]=-2/l,a[14]=-f,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},fromArray:function(t){return this.elements.set(t),this},toArray:function(){var t=this.elements;return[t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15]]},clone:function(){var t=this.elements;return new THREE.Matrix4(t[0],t[4],t[8],t[12],t[1],t[5],t[9],t[13],t[2],t[6],t[10],t[14],t[3],t[7],t[11],t[15])}},THREE.Ray=function(t,e){this.origin=void 0!==t?t:new THREE.Vector3,this.direction=void 0!==e?e:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){var i=e||new THREE.Vector3;return i.copy(this.direction).multiplyScalar(t).add(this.origin)},recast:function(){var t=new THREE.Vector3;return function(e){return this.origin.copy(this.at(e,t)),this}}(),closestPointToPoint:function(t,e){var i=e||new THREE.Vector3;i.subVectors(t,this.origin);var r=i.dot(this.direction);return 0>r?i.copy(this.origin):i.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(){var t=new THREE.Vector3;return function(e){var i=t.subVectors(e,this.origin).dot(this.direction);return 0>i?this.origin.distanceTo(e):(t.copy(this.direction).multiplyScalar(i).add(this.origin),t.distanceTo(e))}}(),distanceSqToSegment:function(t,e,i,r){var n,o,a,s,h=t.clone().add(e).multiplyScalar(.5),l=e.clone().sub(t).normalize(),c=.5*t.distanceTo(e),u=this.origin.clone().sub(h),f=-this.direction.dot(l),d=u.dot(this.direction),p=-u.dot(l),E=u.lengthSq(),m=Math.abs(1-f*f);if(m>=0)if(n=f*p-d,o=f*d-p,s=c*m,n>=0)if(o>=-s)if(s>=o){var y=1/m;n*=y,o*=y,a=n*(n+f*o+2*d)+o*(f*n+o+2*p)+E}else o=c,n=Math.max(0,-(f*o+d)),a=-n*n+o*(o+2*p)+E;else o=-c,n=Math.max(0,-(f*o+d)),a=-n*n+o*(o+2*p)+E;else-s>=o?(n=Math.max(0,-(-f*c+d)),o=n>0?-c:Math.min(Math.max(-c,-p),c),a=-n*n+o*(o+2*p)+E):s>=o?(n=0,o=Math.min(Math.max(-c,-p),c),a=o*(o+2*p)+E):(n=Math.max(0,-(f*c+d)),o=n>0?c:Math.min(Math.max(-c,-p),c),a=-n*n+o*(o+2*p)+E);else o=f>0?-c:c,n=Math.max(0,-(f*o+d)),a=-n*n+o*(o+2*p)+E;return i&&i.copy(this.direction.clone().multiplyScalar(n).add(this.origin)),r&&r.copy(l.clone().multiplyScalar(o).add(h)),a},isIntersectionSphere:function(t){return this.distanceToPoint(t.center)<=t.radius},isIntersectionPlane:function(t){var e=t.distanceToPoint(this.origin);if(0===e)return!0;var i=t.normal.dot(this.direction);return 0>i*e?!0:!1},distanceToPlane:function(t){var e=t.normal.dot(this.direction);if(0==e)return 0==t.distanceToPoint(this.origin)?0:null;var i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null},intersectPlane:function(t,e){var i=this.distanceToPlane(t);return null===i?null:this.at(i,e)},isIntersectionBox:function(){var t=new THREE.Vector3;return function(e){return null!==this.intersectBox(e,t)}}(),intersectBox:function(t,e){var i,r,n,o,a,s,h=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,u=this.origin;return h>=0?(i=(t.min.x-u.x)*h,r=(t.max.x-u.x)*h):(i=(t.max.x-u.x)*h,r=(t.min.x-u.x)*h),l>=0?(n=(t.min.y-u.y)*l,o=(t.max.y-u.y)*l):(n=(t.max.y-u.y)*l,o=(t.min.y-u.y)*l),i>o||n>r?null:((n>i||i!==i)&&(i=n),(r>o||r!==r)&&(r=o),c>=0?(a=(t.min.z-u.z)*c,s=(t.max.z-u.z)*c):(a=(t.max.z-u.z)*c,s=(t.min.z-u.z)*c),i>s||a>r?null:((a>i||i!==i)&&(i=a),(r>s||r!==r)&&(r=s),0>r?null:this.at(i>=0?i:r,e)))},intersectTriangle:function(){var t=new THREE.Vector3,e=new THREE.Vector3,i=new THREE.Vector3,r=new THREE.Vector3;return function(n,o,a,s,h){e.subVectors(o,n),i.subVectors(a,n),r.crossVectors(e,i);var l,c=this.direction.dot(r);if(c>0){if(s)return null;l=1}else{if(!(0>c))return null;l=-1,c=-c}t.subVectors(this.origin,n);var u=l*this.direction.dot(i.crossVectors(t,i));if(0>u)return null;var f=l*this.direction.dot(e.cross(t));if(0>f)return null;if(u+f>c)return null;var d=-l*t.dot(r);return 0>d?null:this.at(d/c,h)}}(),applyMatrix4:function(t){return this.direction.add(this.origin).applyMatrix4(t),this.origin.applyMatrix4(t),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Sphere=function(t,e){this.center=void 0!==t?t:new THREE.Vector3,this.radius=void 0!==e?e:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(){var t=new THREE.Box3;return function(e,i){var r=this.center;void 0!==i?r.copy(i):t.setFromPoints(e).center(r);for(var n=0,o=0,a=e.length;a>o;o++)n=Math.max(n,r.distanceToSquared(e[o]));return this.radius=Math.sqrt(n),this}}(),copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},clampPoint:function(t,e){var i=this.center.distanceToSquared(t),r=e||new THREE.Vector3;return r.copy(t),i>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center)),r},getBoundingBox:function(t){var e=t||new THREE.Box3;return e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(t,e,i,r,n,o){this.planes=[void 0!==t?t:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==o?o:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(t,e,i,r,n,o){var a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(i),a[3].copy(r),a[4].copy(n),a[5].copy(o),this},copy:function(t){for(var e=this.planes,i=0;6>i;i++)e[i].copy(t.planes[i]);return this},setFromMatrix:function(t){var e=this.planes,i=t.elements,r=i[0],n=i[1],o=i[2],a=i[3],s=i[4],h=i[5],l=i[6],c=i[7],u=i[8],f=i[9],d=i[10],p=i[11],E=i[12],m=i[13],y=i[14],v=i[15];return e[0].setComponents(a-r,c-s,p-u,v-E).normalize(),e[1].setComponents(a+r,c+s,p+u,v+E).normalize(),e[2].setComponents(a+n,c+h,p+f,v+m).normalize(),e[3].setComponents(a-n,c-h,p-f,v-m).normalize(),e[4].setComponents(a-o,c-l,p-d,v-y).normalize(),e[5].setComponents(a+o,c+l,p+d,v+y).normalize(),this},intersectsObject:function(){var t=new THREE.Sphere;return function(e){var i=e.geometry;return null===i.boundingSphere&&i.computeBoundingSphere(),t.copy(i.boundingSphere),t.applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSphere:function(t){for(var e=this.planes,i=t.center,r=-t.radius,n=0;6>n;n++){var o=e[n].distanceToPoint(i);if(r>o)return!1}return!0},intersectsBox:function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(i){for(var r=this.planes,n=0;6>n;n++){var o=r[n];t.x=o.normal.x>0?i.min.x:i.max.x,e.x=o.normal.x>0?i.max.x:i.min.x,t.y=o.normal.y>0?i.min.y:i.max.y,e.y=o.normal.y>0?i.max.y:i.min.y,t.z=o.normal.z>0?i.min.z:i.max.z,e.z=o.normal.z>0?i.max.z:i.min.z;var a=o.distanceToPoint(t),s=o.distanceToPoint(e);if(0>a&&0>s)return!1}return!0}}(),containsPoint:function(t){for(var e=this.planes,i=0;6>i;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(t,e){this.normal=void 0!==t?t:new THREE.Vector3(1,0,0),this.constant=void 0!==e?e:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,i,r){return this.normal.set(t,e,i),this.constant=r,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(i,r,n){var o=t.subVectors(n,r).cross(e.subVectors(i,r)).normalize();return this.setFromNormalAndCoplanarPoint(o,i),this}}(),copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return this.orthoPoint(t,e).sub(t).negate()},orthoPoint:function(t,e){var i=this.distanceToPoint(t),r=e||new THREE.Vector3;return r.copy(this.normal).multiplyScalar(i)},isIntersectionLine:function(t){var e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return 0>e&&i>0||0>i&&e>0},intersectLine:function(){var t=new THREE.Vector3;return function(e,i){var r=i||new THREE.Vector3,n=e.delta(t),o=this.normal.dot(n);if(0==o)return 0==this.distanceToPoint(e.start)?r.copy(e.start):void 0;var a=-(e.start.dot(this.normal)+this.constant)/o;return 0>a||a>1?void 0:r.copy(n).multiplyScalar(a).add(e.start)}}(),coplanarPoint:function(t){var e=t||new THREE.Vector3;return e.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var t=new THREE.Vector3,e=new THREE.Vector3,i=new THREE.Matrix3;return function(r,n){var o=n||i.getNormalMatrix(r),a=t.copy(this.normal).applyMatrix3(o),s=this.coplanarPoint(e);return s.applyMatrix4(r),this.setFromNormalAndCoplanarPoint(a,s),this}}(),translate:function(t){return this.constant=this.constant-t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Math={generateUUID:function(){var t,e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),i=new Array(36),r=0;return function(){for(var n=0;36>n;n++)8==n||13==n||18==n||23==n?i[n]="-":14==n?i[n]="4":(2>=r&&(r=33554432+16777216*Math.random()|0),t=15&r,r>>=4,i[n]=e[19==n?3&t|8:t]);return i.join("")}}(),clamp:function(t,e,i){return e>t?e:t>i?i:t},clampBottom:function(t,e){return e>t?e:t},mapLinear:function(t,e,i,r,n){return r+(t-e)*(n-r)/(i-e)},smoothstep:function(t,e,i){return e>=t?0:t>=i?1:(t=(t-e)/(i-e),t*t*(3-2*t))},smootherstep:function(t,e,i){return e>=t?0:t>=i?1:(t=(t-e)/(i-e),t*t*t*(t*(6*t-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},sign:function(t){return 0>t?-1:t>0?1:0},degToRad:function(){var t=Math.PI/180;return function(e){return e*t}}(),radToDeg:function(){var t=180/Math.PI;return function(e){return e*t}}(),isPowerOfTwo:function(t){return 0===(t&t-1)&&0!==t}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(t){t.addEventListener=THREE.EventDispatcher.prototype.addEventListener,t.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,t.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,t.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)?!0:!1},removeEventListener:function(t,e){if(void 0!==this._listeners){var i=this._listeners,r=i[t];if(void 0!==r){var n=r.indexOf(e);-1!==n&&r.splice(n,1)}}},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners,i=e[t.type];if(void 0!==i){t.target=this;for(var r=[],n=i.length,o=0;n>o;o++)r[o]=i[o];for(var o=0;n>o;o++)r[o].call(this,t)}}}},function(t){t.Raycaster=function(e,i,r,n){this.ray=new t.Ray(e,i),this.near=r||0,this.far=n||1/0};var e=new t.Sphere,i=new t.Ray,r=(new t.Plane,new t.Vector3,new t.Vector3),n=new t.Matrix4,o=function(t,e){return t.distance-e.distance},a=new t.Vector3,s=new t.Vector3,h=new t.Vector3,l=function(o,c,u){if(o instanceof t.Sprite){r.setFromMatrixPosition(o.matrixWorld);var f=c.ray.distanceToPoint(r);if(f>o.scale.x)return u;u.push({distance:f,point:o.position,face:null,object:o})}else if(o instanceof t.LOD){r.setFromMatrixPosition(o.matrixWorld);var f=c.ray.origin.distanceTo(r);l(o.getObjectForDistance(f),c,u)}else if(o instanceof t.Mesh){var d=o.geometry;if(null===d.boundingSphere&&d.computeBoundingSphere(),e.copy(d.boundingSphere),e.applyMatrix4(o.matrixWorld),c.ray.isIntersectionSphere(e)===!1)return u;if(n.getInverse(o.matrixWorld),i.copy(c.ray).applyMatrix4(n),null!==d.boundingBox&&i.isIntersectionBox(d.boundingBox)===!1)return u;if(d instanceof t.BufferGeometry){var p=o.material;if(void 0===p)return u;var E,m,y,v=d.attributes,g=c.precision;if(void 0!==v.index){var x=v.index.array,T=v.position.array,R=d.offsets;0===R.length&&(R=[{start:0,count:T.length,index:0}]);for(var _=0,b=R.length;b>_;++_)for(var w=R[_].start,H=R[_].count,M=R[_].index,S=w,A=w+H;A>S;S+=3){if(E=M+x[S],m=M+x[S+1],y=M+x[S+2],a.set(T[3*E],T[3*E+1],T[3*E+2]),s.set(T[3*m],T[3*m+1],T[3*m+2]),h.set(T[3*y],T[3*y+1],T[3*y+2]),p.side===t.BackSide)var C=i.intersectTriangle(h,s,a,!0);else var C=i.intersectTriangle(a,s,h,p.side!==t.DoubleSide);if(null!==C){C.applyMatrix4(o.matrixWorld);var f=c.ray.origin.distanceTo(C);g>f||f<c.near||f>c.far||u.push({distance:f,point:C,indices:[E,m,y],face:null,faceIndex:null,object:o})
}}}else for(var R=d.offsets,T=v.position.array,S=0,A=v.position.array.length;A>S;S+=3){if(E=S,m=S+1,y=S+2,a.set(T[3*E],T[3*E+1],T[3*E+2]),s.set(T[3*m],T[3*m+1],T[3*m+2]),h.set(T[3*y],T[3*y+1],T[3*y+2]),p.side===t.BackSide)var C=i.intersectTriangle(h,s,a,!0);else var C=i.intersectTriangle(a,s,h,p.side!==t.DoubleSide);if(null!==C){C.applyMatrix4(o.matrixWorld);var f=c.ray.origin.distanceTo(C);g>f||f<c.near||f>c.far||u.push({distance:f,point:C,indices:[E,m,y],face:null,faceIndex:null,object:o})}}}else if(d instanceof t.Geometry)for(var E,m,y,z=o.material instanceof t.MeshFaceMaterial,D=z===!0?o.material.materials:null,g=c.precision,F=d.vertices,P=0,L=d.faces.length;L>P;P++){var V=d.faces[P],p=z===!0?D[V.materialIndex]:o.material;if(void 0!==p){if(E=F[V.a],m=F[V.b],y=F[V.c],p.morphTargets===!0){var U=d.morphTargets,O=o.morphTargetInfluences;a.set(0,0,0),s.set(0,0,0),h.set(0,0,0);for(var B=0,N=U.length;N>B;B++){var k=O[B];if(0!==k){var j=U[B].vertices;a.x+=(j[V.a].x-E.x)*k,a.y+=(j[V.a].y-E.y)*k,a.z+=(j[V.a].z-E.z)*k,s.x+=(j[V.b].x-m.x)*k,s.y+=(j[V.b].y-m.y)*k,s.z+=(j[V.b].z-m.z)*k,h.x+=(j[V.c].x-y.x)*k,h.y+=(j[V.c].y-y.y)*k,h.z+=(j[V.c].z-y.z)*k}}a.add(E),s.add(m),h.add(y),E=a,m=s,y=h}if(p.side===t.BackSide)var C=i.intersectTriangle(y,m,E,!0);else var C=i.intersectTriangle(E,m,y,p.side!==t.DoubleSide);if(null!==C){C.applyMatrix4(o.matrixWorld);var f=c.ray.origin.distanceTo(C);g>f||f<c.near||f>c.far||u.push({distance:f,point:C,face:V,faceIndex:P,object:o})}}}}else if(o instanceof t.Line){var g=c.linePrecision,I=g*g,d=o.geometry;if(null===d.boundingSphere&&d.computeBoundingSphere(),e.copy(d.boundingSphere),e.applyMatrix4(o.matrixWorld),c.ray.isIntersectionSphere(e)===!1)return u;if(n.getInverse(o.matrixWorld),i.copy(c.ray).applyMatrix4(n),d instanceof t.Geometry)for(var F=d.vertices,W=F.length,G=new t.Vector3,X=new t.Vector3,q=o.type===t.LineStrip?1:2,S=0;W-1>S;S+=q){var Y=i.distanceSqToSegment(F[S],F[S+1],X,G);if(!(Y>I)){var f=i.origin.distanceTo(X);f<c.near||f>c.far||u.push({distance:f,point:G.clone().applyMatrix4(o.matrixWorld),face:null,faceIndex:null,object:o})}}}},c=function(t,e,i){for(var r=t.getDescendants(),n=0,o=r.length;o>n;n++)l(r[n],e,i)};t.Raycaster.prototype.precision=1e-4,t.Raycaster.prototype.linePrecision=1,t.Raycaster.prototype.set=function(t,e){this.ray.set(t,e)},t.Raycaster.prototype.intersectObject=function(t,e){var i=[];return e===!0&&c(t,this,i),l(t,this,i),i.sort(o),i},t.Raycaster.prototype.intersectObjects=function(t,e){for(var i=[],r=0,n=t.length;n>r;r++)l(t[r],this,i),e===!0&&c(t[r],this,i);return i.sort(o),i}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3;var t=this;Object.defineProperties(this,{rotation:{enumerable:!0,value:(new THREE.Euler).onChange(function(){t.quaternion.setFromEuler(t.rotation,!1)})},quaternion:{enumerable:!0,value:(new THREE.Quaternion).onChange(function(){t.rotation.setFromQuaternion(t.quaternion,void 0,!1)})},scale:{enumerable:!0,value:new THREE.Vector3(1,1,1)}}),this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.userData={}},THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){return console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order},set eulerOrder(t){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order=t},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(t){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(t){this.matrix.multiplyMatrices(t,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(){var t=new THREE.Quaternion;return function(e,i){return t.setFromAxisAngle(e,i),this.quaternion.multiply(t),this}}(),rotateX:function(){var t=new THREE.Vector3(1,0,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateY:function(){var t=new THREE.Vector3(0,1,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateZ:function(){var t=new THREE.Vector3(0,0,1);return function(e){return this.rotateOnAxis(t,e)}}(),translateOnAxis:function(){var t=new THREE.Vector3;return function(e,i){return t.copy(e),t.applyQuaternion(this.quaternion),this.position.add(t.multiplyScalar(i)),this}}(),translate:function(t,e){return console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed."),this.translateOnAxis(e,t)},translateX:function(){var t=new THREE.Vector3(1,0,0);return function(e){return this.translateOnAxis(t,e)}}(),translateY:function(){var t=new THREE.Vector3(0,1,0);return function(e){return this.translateOnAxis(t,e)}}(),translateZ:function(){var t=new THREE.Vector3(0,0,1);return function(e){return this.translateOnAxis(t,e)}}(),localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var t=new THREE.Matrix4;return function(e){return e.applyMatrix4(t.getInverse(this.matrixWorld))}}(),lookAt:function(){var t=new THREE.Matrix4;return function(e){t.lookAt(e,this.position,this.up),this.quaternion.setFromRotationMatrix(t)}}(),add:function(t){if(t===this)return void console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");if(t instanceof THREE.Object3D){void 0!==t.parent&&t.parent.remove(t),t.parent=this,t.dispatchEvent({type:"added"}),this.children.push(t);for(var e=this;void 0!==e.parent;)e=e.parent;void 0!==e&&e instanceof THREE.Scene&&e.__addObject(t)}},remove:function(t){var e=this.children.indexOf(t);if(-1!==e){t.parent=void 0,t.dispatchEvent({type:"removed"}),this.children.splice(e,1);for(var i=this;void 0!==i.parent;)i=i.parent;void 0!==i&&i instanceof THREE.Scene&&i.__removeObject(t)}},traverse:function(t){t(this);for(var e=0,i=this.children.length;i>e;e++)this.children[e].traverse(t)},getObjectById:function(t,e){for(var i=0,r=this.children.length;r>i;i++){var n=this.children[i];if(n.id===t)return n;if(e===!0&&(n=n.getObjectById(t,e),void 0!==n))return n}return void 0},getObjectByName:function(t,e){for(var i=0,r=this.children.length;r>i;i++){var n=this.children[i];if(n.name===t)return n;if(e===!0&&(n=n.getObjectByName(t,e),void 0!==n))return n}return void 0},getChildByName:function(t,e){return console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t,e)},getDescendants:function(t){void 0===t&&(t=[]),Array.prototype.push.apply(t,this.children);for(var e=0,i=this.children.length;i>e;e++)this.children[e].getDescendants(t);return t},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate===!0&&this.updateMatrix(),(this.matrixWorldNeedsUpdate===!0||t===!0)&&(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=0,i=this.children.length;i>e;e++)this.children[e].updateMatrixWorld(t)},clone:function(t,e){if(void 0===t&&(t=new THREE.Object3D),void 0===e&&(e=!0),t.name=this.name,t.up.copy(this.up),t.position.copy(this.position),t.quaternion.copy(this.quaternion),t.scale.copy(this.scale),t.renderDepth=this.renderDepth,t.rotationAutoUpdate=this.rotationAutoUpdate,t.matrix.copy(this.matrix),t.matrixWorld.copy(this.matrixWorld),t.matrixAutoUpdate=this.matrixAutoUpdate,t.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,t.visible=this.visible,t.castShadow=this.castShadow,t.receiveShadow=this.receiveShadow,t.frustumCulled=this.frustumCulled,t.userData=JSON.parse(JSON.stringify(this.userData)),e===!0)for(var i=0;i<this.children.length;i++){var r=this.children[i];t.add(r.clone())}return t}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Projector=function(){function t(){if(h===g){var t=new THREE.RenderableObject;return v.push(t),g++,h++,t}return v[h++]}function e(){if(c===T){var t=new THREE.RenderableVertex;return x.push(t),T++,c++,t}return x[c++]}function i(){if(f===_){var t=new THREE.RenderableFace;return R.push(t),_++,f++,t}return R[f++]}function r(){if(p===w){var t=new THREE.RenderableLine;return b.push(t),w++,p++,t}return b[p++]}function n(){if(m===M){var t=new THREE.RenderableSprite;return H.push(t),M++,m++,t}return H[m++]}function o(t,e){return t.z!==e.z?e.z-t.z:t.id!==e.id?t.id-e.id:0}function a(t,e){var i=0,r=1,n=t.z+t.w,o=e.z+e.w,a=-t.z+t.w,s=-e.z+e.w;return n>=0&&o>=0&&a>=0&&s>=0?!0:0>n&&0>o||0>a&&0>s?!1:(0>n?i=Math.max(i,n/(n-o)):0>o&&(r=Math.min(r,n/(n-o))),0>a?i=Math.max(i,a/(a-s)):0>s&&(r=Math.min(r,a/(a-s))),i>r?!1:(t.lerp(e,i),e.lerp(t,1-r),!0))}var s,h,l,c,u,f,d,p,E,m,y,v=[],g=0,x=[],T=0,R=[],_=0,b=[],w=0,H=[],M=0,S={objects:[],lights:[],elements:[]},A=new THREE.Vector3,C=new THREE.Vector3,z=new THREE.Vector3,D=new THREE.Vector3,F=new THREE.Vector4,P=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),L=new THREE.Box3,V=new Array(3),U=(new Array(4),new THREE.Matrix4),O=new THREE.Matrix4,B=new THREE.Matrix4,N=new THREE.Matrix3,k=new THREE.Frustum,j=new THREE.Vector4,I=new THREE.Vector4;this.projectVector=function(t,e){return e.matrixWorldInverse.getInverse(e.matrixWorld),O.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),t.applyProjection(O)},this.unprojectVector=function(){var t=new THREE.Matrix4;return function(e,i){return t.getInverse(i.projectionMatrix),O.multiplyMatrices(i.matrixWorld,t),e.applyProjection(O)}}(),this.pickingRay=function(t,e){t.z=-1;var i=new THREE.Vector3(t.x,t.y,1);return this.unprojectVector(t,e),this.unprojectVector(i,e),i.sub(t).normalize(),new THREE.Raycaster(t,i)};var W=function(e){if(e.visible!==!1){e instanceof THREE.Light?S.lights.push(e):(e instanceof THREE.Mesh||e instanceof THREE.Line||e instanceof THREE.Sprite)&&(e.frustumCulled===!1||k.intersectsObject(e)===!0)&&(s=t(),s.id=e.id,s.object=e,null!==e.renderDepth?s.z=e.renderDepth:(D.setFromMatrixPosition(e.matrixWorld),D.applyProjection(O),s.z=D.z),S.objects.push(s));for(var i=0,r=e.children.length;r>i;i++)W(e.children[i])}},G=function(t,e){h=0,S.objects.length=0,S.lights.length=0,W(t),e===!0&&S.objects.sort(o)},X=function(){var t=[],n=[],o=null,a=null,s=new THREE.Matrix3,h=function(e){o=e,a=o.material,s.getNormalMatrix(o.matrixWorld),t.length=0,n.length=0},c=function(t){var e=t.position,i=t.positionWorld,r=t.positionScreen;i.copy(e).applyMatrix4(y),r.copy(i).applyMatrix4(O);var n=1/r.w;r.x*=n,r.y*=n,r.z*=n,t.visible=r.x>=-1&&r.x<=1&&r.y>=-1&&r.y<=1&&r.z>=-1&&r.z<=1},f=function(t,i,r){l=e(),l.position.set(t,i,r),c(l)},p=function(e,i,r){t.push(e,i,r)},E=function(t,e){n.push(t,e)},m=function(t,e,i){return t.visible===!0||e.visible===!0||i.visible===!0?!0:(V[0]=t.positionScreen,V[1]=e.positionScreen,V[2]=i.positionScreen,P.isIntersectionBox(L.setFromPoints(V)))},v=function(t,e,i){return(i.positionScreen.x-t.positionScreen.x)*(e.positionScreen.y-t.positionScreen.y)-(i.positionScreen.y-t.positionScreen.y)*(e.positionScreen.x-t.positionScreen.x)<0},g=function(t,e){var i=x[t],n=x[e];d=r(),d.id=o.id,d.v1.copy(i),d.v2.copy(n),d.z=(i.positionScreen.z+n.positionScreen.z)/2,d.material=o.material,S.elements.push(d)},T=function(e,r,h){var l=x[e],c=x[r],f=x[h];if(m(l,c,f)!==!1&&(a.side===THREE.DoubleSide||v(l,c,f)===!0)){u=i(),u.id=o.id,u.v1.copy(l),u.v2.copy(c),u.v3.copy(f),u.z=(l.positionScreen.z+c.positionScreen.z+f.positionScreen.z)/3;for(var d=0;3>d;d++){var p=3*arguments[d],E=u.vertexNormalsModel[d];E.set(t[p],t[p+1],t[p+2]),E.applyMatrix3(s).normalize();var y=2*arguments[d],g=u.uvs[d];g.set(n[y],n[y+1])}u.vertexNormalsLength=3,u.material=o.material,S.elements.push(u)}};return{setObject:h,projectVertex:c,checkTriangleVisibility:m,checkBackfaceCulling:v,pushVertex:f,pushNormal:p,pushUv:E,pushLine:g,pushTriangle:T}},q=new X;this.projectScene=function(t,s,h,l){var v,g,T,R,_,b,w,H,M;f=0,p=0,m=0,S.elements.length=0,t.autoUpdate===!0&&t.updateMatrixWorld(),void 0===s.parent&&s.updateMatrixWorld(),U.copy(s.matrixWorldInverse.getInverse(s.matrixWorld)),O.multiplyMatrices(s.projectionMatrix,U),k.setFromMatrix(O),G(t,h);for(var D=0,P=S.objects.length;P>D;D++)if(v=S.objects[D].object,g=v.geometry,q.setObject(v),y=v.matrixWorld,c=0,v instanceof THREE.Mesh){if(g instanceof THREE.BufferGeometry){var L=g.attributes,V=g.offsets;if(void 0===L.position)continue;for(var W=L.position.array,X=0,Y=W.length;Y>X;X+=3)q.pushVertex(W[X],W[X+1],W[X+2]);if(void 0!==L.normal)for(var Z=L.normal.array,X=0,Y=Z.length;Y>X;X+=3)q.pushNormal(Z[X],Z[X+1],Z[X+2]);if(void 0!==L.uv)for(var Q=L.uv.array,X=0,Y=Q.length;Y>X;X+=2)q.pushUv(Q[X],Q[X+1]);if(void 0!==L.index){var K=L.index.array;if(V.length>0)for(var D=0;D<V.length;D++)for(var $=V[D],J=$.index,X=$.start,Y=$.start+$.count;Y>X;X+=3)q.pushTriangle(K[X]+J,K[X+1]+J,K[X+2]+J);else for(var X=0,Y=K.length;Y>X;X+=3)q.pushTriangle(K[X],K[X+1],K[X+2])}else for(var X=0,Y=W.length/3;Y>X;X+=3)q.pushTriangle(X,X+1,X+2)}else if(g instanceof THREE.Geometry){T=g.vertices,R=g.faces,w=g.faceVertexUvs[0],N.getNormalMatrix(y),H=v.material instanceof THREE.MeshFaceMaterial,M=H===!0?v.material:null;for(var te=0,ee=T.length;ee>te;te++){var ie=T[te];q.pushVertex(ie.x,ie.y,ie.z)}for(var re=0,ne=R.length;ne>re;re++){_=R[re];var oe=H===!0?M.materials[_.materialIndex]:v.material;if(void 0!==oe){var ae=oe.side,se=x[_.a],he=x[_.b],le=x[_.c];if(oe.morphTargets===!0){var ce=g.morphTargets,ue=v.morphTargetInfluences,fe=se.position,de=he.position,pe=le.position;A.set(0,0,0),C.set(0,0,0),z.set(0,0,0);for(var Ee=0,me=ce.length;me>Ee;Ee++){var ye=ue[Ee];if(0!==ye){var ve=ce[Ee].vertices;A.x+=(ve[_.a].x-fe.x)*ye,A.y+=(ve[_.a].y-fe.y)*ye,A.z+=(ve[_.a].z-fe.z)*ye,C.x+=(ve[_.b].x-de.x)*ye,C.y+=(ve[_.b].y-de.y)*ye,C.z+=(ve[_.b].z-de.z)*ye,z.x+=(ve[_.c].x-pe.x)*ye,z.y+=(ve[_.c].y-pe.y)*ye,z.z+=(ve[_.c].z-pe.z)*ye}}se.position.add(A),he.position.add(C),le.position.add(z),q.projectVertex(se),q.projectVertex(he),q.projectVertex(le)}if(q.checkTriangleVisibility(se,he,le)!==!1){var ge=q.checkBackfaceCulling(se,he,le);if(ae!==THREE.DoubleSide){if(ae===THREE.FrontSide&&ge===!1)continue;if(ae===THREE.BackSide&&ge===!0)continue}u=i(),u.id=v.id,u.v1.copy(se),u.v2.copy(he),u.v3.copy(le),u.normalModel.copy(_.normal),ge!==!1||ae!==THREE.BackSide&&ae!==THREE.DoubleSide||u.normalModel.negate(),u.normalModel.applyMatrix3(N).normalize(),b=_.vertexNormals;for(var xe=0,Te=Math.min(b.length,3);Te>xe;xe++){var Re=u.vertexNormalsModel[xe];Re.copy(b[xe]),ge!==!1||ae!==THREE.BackSide&&ae!==THREE.DoubleSide||Re.negate(),Re.applyMatrix3(N).normalize()}u.vertexNormalsLength=b.length;var _e=w[re];if(void 0!==_e)for(var be=0;3>be;be++)u.uvs[be].copy(_e[be]);u.color=_.color,u.material=oe,u.z=(se.positionScreen.z+he.positionScreen.z+le.positionScreen.z)/3,S.elements.push(u)}}}}}else if(v instanceof THREE.Line){if(g instanceof THREE.BufferGeometry){var L=g.attributes;if(void 0!==L.position){for(var W=L.position.array,X=0,Y=W.length;Y>X;X+=3)q.pushVertex(W[X],W[X+1],W[X+2]);if(void 0!==L.index)for(var K=L.index.array,X=0,Y=K.length;Y>X;X+=2)q.pushLine(K[X],K[X+1]);else for(var X=0,Y=W.length/3-1;Y>X;X++)q.pushLine(X,X+1)}}else if(g instanceof THREE.Geometry){if(B.multiplyMatrices(O,y),T=v.geometry.vertices,0===T.length)continue;se=e(),se.positionScreen.copy(T[0]).applyMatrix4(B);for(var we=v.type===THREE.LinePieces?2:1,te=1,ee=T.length;ee>te;te++)se=e(),se.positionScreen.copy(T[te]).applyMatrix4(B),(te+1)%we>0||(he=x[c-2],j.copy(se.positionScreen),I.copy(he.positionScreen),a(j,I)===!0&&(j.multiplyScalar(1/j.w),I.multiplyScalar(1/I.w),d=r(),d.id=v.id,d.v1.positionScreen.copy(j),d.v2.positionScreen.copy(I),d.z=Math.max(j.z,I.z),d.material=v.material,v.material.vertexColors===THREE.VertexColors&&(d.vertexColors[0].copy(v.geometry.colors[te]),d.vertexColors[1].copy(v.geometry.colors[te-1])),S.elements.push(d)))}}else if(v instanceof THREE.Sprite){F.set(y.elements[12],y.elements[13],y.elements[14],1),F.applyMatrix4(O);var He=1/F.w;F.z*=He,F.z>=-1&&F.z<=1&&(E=n(),E.id=v.id,E.x=F.x*He,E.y=F.y*He,E.z=F.z,E.object=v,E.rotation=v.rotation,E.scale.x=v.scale.x*Math.abs(E.x-(F.x+s.projectionMatrix.elements[0])/(F.w+s.projectionMatrix.elements[12])),E.scale.y=v.scale.y*Math.abs(E.y-(F.y+s.projectionMatrix.elements[5])/(F.w+s.projectionMatrix.elements[13])),E.material=v.material,S.elements.push(E))}return l===!0&&S.elements.sort(o),S}},THREE.Face3=function(t,e,i,r,n,o){this.a=t,this.b=e,this.c=i,this.normal=r instanceof THREE.Vector3?r:new THREE.Vector3,this.vertexNormals=r instanceof Array?r:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=n instanceof Array?n:[],this.vertexTangents=[],this.materialIndex=void 0!==o?o:0},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var t=new THREE.Face3(this.a,this.b,this.c);t.normal.copy(this.normal),t.color.copy(this.color),t.materialIndex=this.materialIndex;var e,i;for(e=0,i=this.vertexNormals.length;i>e;e++)t.vertexNormals[e]=this.vertexNormals[e].clone();for(e=0,i=this.vertexColors.length;i>e;e++)t.vertexColors[e]=this.vertexColors[e].clone();for(e=0,i=this.vertexTangents.length;i>e;e++)t.vertexTangents[e]=this.vertexTangents[e].clone();return t}},THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.attributes={},this.drawcalls=[],this.offsets=this.drawcalls,this.boundingBox=null,this.boundingSphere=null},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(t,e){return e instanceof THREE.BufferAttribute==!1?(console.warn("DEPRECATED: BufferGeometry's addAttribute() now expects ( name, attribute )."),void(this.attributes[t]={array:arguments[1],itemSize:arguments[2]})):void(this.attributes[t]=e)},getAttribute:function(t){return this.attributes[t]},addDrawCall:function(t,e,i){this.drawcalls.push({start:t,count:e,index:void 0!==i?i:0})},applyMatrix:function(t){var e=this.attributes.position;void 0!==e&&(t.applyToVector3Array(e.array),e.needsUpdate=!0);var i=this.attributes.normal;if(void 0!==i){var r=(new THREE.Matrix3).getNormalMatrix(t);r.applyToVector3Array(i.array),i.needsUpdate=!0}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var t=this.attributes.position.array;if(t){var e=this.boundingBox;t.length>=3&&(e.min.x=e.max.x=t[0],e.min.y=e.max.y=t[1],e.min.z=e.max.z=t[2]);for(var i=3,r=t.length;r>i;i+=3){var n=t[i],o=t[i+1],a=t[i+2];n<e.min.x?e.min.x=n:n>e.max.x&&(e.max.x=n),o<e.min.y?e.min.y=o:o>e.max.y&&(e.max.y=o),a<e.min.z?e.min.z=a:a>e.max.z&&(e.max.z=a)}}(void 0===t||0===t.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){var t=new THREE.Box3,e=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var i=this.attributes.position.array;if(i){t.makeEmpty();for(var r=this.boundingSphere.center,n=0,o=i.length;o>n;n+=3)e.set(i[n],i[n+1],i[n+2]),t.addPoint(e);t.center(r);for(var a=0,n=0,o=i.length;o>n;n+=3)e.set(i[n],i[n+1],i[n+2]),a=Math.max(a,r.distanceToSquared(e));this.boundingSphere.radius=Math.sqrt(a)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){if(this.attributes.position){var t,e,i,r,n=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(n)};else for(t=0,e=this.attributes.normal.array.length;e>t;t++)this.attributes.normal.array[t]=0;var o,a,s,h,l,c,u=this.attributes.position.array,f=this.attributes.normal.array,d=new THREE.Vector3,p=new THREE.Vector3,E=new THREE.Vector3,m=new THREE.Vector3,y=new THREE.Vector3;if(this.attributes.index){var v=this.attributes.index.array,g=this.offsets.length>0?this.offsets:[{start:0,count:v.length,index:0}];for(i=0,r=g.length;r>i;++i){var x=g[i].start,T=g[i].count,R=g[i].index;for(t=x,e=x+T;e>t;t+=3)o=R+v[t],a=R+v[t+1],s=R+v[t+2],h=u[3*o],l=u[3*o+1],c=u[3*o+2],d.set(h,l,c),h=u[3*a],l=u[3*a+1],c=u[3*a+2],p.set(h,l,c),h=u[3*s],l=u[3*s+1],c=u[3*s+2],E.set(h,l,c),m.subVectors(E,p),y.subVectors(d,p),m.cross(y),f[3*o]+=m.x,f[3*o+1]+=m.y,f[3*o+2]+=m.z,f[3*a]+=m.x,f[3*a+1]+=m.y,f[3*a+2]+=m.z,f[3*s]+=m.x,f[3*s+1]+=m.y,f[3*s+2]+=m.z}}else for(t=0,e=u.length;e>t;t+=9)h=u[t],l=u[t+1],c=u[t+2],d.set(h,l,c),h=u[t+3],l=u[t+4],c=u[t+5],p.set(h,l,c),h=u[t+6],l=u[t+7],c=u[t+8],E.set(h,l,c),m.subVectors(E,p),y.subVectors(d,p),m.cross(y),f[t]=m.x,f[t+1]=m.y,f[t+2]=m.z,f[t+3]=m.x,f[t+4]=m.y,f[t+5]=m.z,f[t+6]=m.x,f[t+7]=m.y,f[t+8]=m.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},computeTangents:function(){function t(t,e,i){f=r[3*t],d=r[3*t+1],p=r[3*t+2],E=r[3*e],m=r[3*e+1],y=r[3*e+2],v=r[3*i],g=r[3*i+1],x=r[3*i+2],T=o[2*t],R=o[2*t+1],_=o[2*e],b=o[2*e+1],w=o[2*i],H=o[2*i+1],M=E-f,S=v-f,A=m-d,C=g-d,z=y-p,D=x-p,F=_-T,P=w-T,L=b-R,V=H-R,U=1/(F*V-P*L),G.set((V*M-L*S)*U,(V*A-L*C)*U,(V*z-L*D)*U),X.set((F*S-P*M)*U,(F*C-P*A)*U,(F*D-P*z)*U),l[t].add(G),l[e].add(G),l[i].add(G),c[t].add(X),c[e].add(X),c[i].add(X)}function e(t){ie.x=n[3*t],ie.y=n[3*t+1],ie.z=n[3*t+2],re.copy(ie),$=l[t],te.copy($),te.sub(ie.multiplyScalar(ie.dot($))).normalize(),ee.crossVectors(re,$),J=ee.dot(c[t]),K=0>J?-1:1,h[4*t]=te.x,h[4*t+1]=te.y,h[4*t+2]=te.z,h[4*t+3]=K}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)return void console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");var i=this.attributes.index.array,r=this.attributes.position.array,n=this.attributes.normal.array,o=this.attributes.uv.array,a=r.length/3;if(void 0===this.attributes.tangent){var s=4*a;this.attributes.tangent={itemSize:4,array:new Float32Array(s)}}for(var h=this.attributes.tangent.array,l=[],c=[],u=0;a>u;u++)l[u]=new THREE.Vector3,c[u]=new THREE.Vector3;var f,d,p,E,m,y,v,g,x,T,R,_,b,w,H,M,S,A,C,z,D,F,P,L,V,U,O,B,N,k,j,I,W,G=new THREE.Vector3,X=new THREE.Vector3,q=this.offsets;for(N=0,k=q.length;k>N;++N){var Y=q[N].start,Z=q[N].count,Q=q[N].index;for(O=Y,B=Y+Z;B>O;O+=3)j=Q+i[O],I=Q+i[O+1],W=Q+i[O+2],t(j,I,W)}var K,$,J,te=new THREE.Vector3,ee=new THREE.Vector3,ie=new THREE.Vector3,re=new THREE.Vector3;for(N=0,k=q.length;k>N;++N){var Y=q[N].start,Z=q[N].count,Q=q[N].index;for(O=Y,B=Y+Z;B>O;O+=3)j=Q+i[O],I=Q+i[O+1],W=Q+i[O+2],e(j),e(I),e(W)}},computeOffsets:function(t){var e=t;void 0===t&&(e=65535);for(var i=(Date.now(),this.attributes.index.array),r=this.attributes.position.array,n=(r.length/3,i.length/3),o=new Uint16Array(i.length),a=0,s=0,h=[{start:0,count:0,index:0}],l=h[0],c=0,u=0,f=new Int32Array(6),d=new Int32Array(r.length),p=new Int32Array(r.length),E=0;E<r.length;E++)d[E]=-1,p[E]=-1;for(var m=0;n>m;m++){u=0;for(var y=0;3>y;y++){var v=i[3*m+y];-1==d[v]?(f[2*y]=v,f[2*y+1]=-1,u++):d[v]<l.index?(f[2*y]=v,f[2*y+1]=-1,c++):(f[2*y]=v,f[2*y+1]=d[v])}var g=s+u;if(g>l.index+e){var x={start:a,count:0,index:s};h.push(x),l=x;for(var T=0;6>T;T+=2){var R=f[T+1];R>-1&&R<l.index&&(f[T+1]=-1)}}for(var T=0;6>T;T+=2){var v=f[T],R=f[T+1];-1===R&&(R=s++),d[v]=R,p[R]=v,o[a++]=R-l.index,l.count++}}return this.reorderBuffers(o,p,s),this.offsets=h,h},merge:function(){console.log("BufferGeometry.merge(): TODO")},normalizeNormals:function(){for(var t,e,i,r,n=this.attributes.normal.array,o=0,a=n.length;a>o;o+=3)t=n[o],e=n[o+1],i=n[o+2],r=1/Math.sqrt(t*t+e*e+i*i),n[o]*=r,n[o+1]*=r,n[o+2]*=r},reorderBuffers:function(t,e,i){var r={},n=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(var o in this.attributes)if("index"!=o)for(var a=this.attributes[o].array,s=0,h=n.length;h>s;s++){var l=n[s];if(a instanceof l){r[o]=new l(this.attributes[o].itemSize*i);break}}for(var c=0;i>c;c++){var u=e[c];for(var o in this.attributes)if("index"!=o)for(var f=this.attributes[o].array,d=this.attributes[o].itemSize,p=r[o],E=0;d>E;E++)p[c*d+E]=f[u*d+E]}this.attributes.index.array=t;for(var o in this.attributes)"index"!=o&&(this.attributes[o].array=r[o],this.attributes[o].numItems=this.attributes[o].itemSize*i)},clone:function(){var t=new THREE.BufferGeometry,e=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(var i in this.attributes){for(var r=this.attributes[i],n=r.array,o={itemSize:r.itemSize,array:null},a=0,s=e.length;s>a;a++){var h=e[a];if(n instanceof h){o.array=new h(n);break}}t.attributes[i]=o}for(var a=0,s=this.offsets.length;s>a;a++){var l=this.offsets[a];t.offsets.push({start:l.start,index:l.index,count:l.count})}return t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Geometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.dynamic=!0,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.tangentsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.buffersNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(t){for(var e=(new THREE.Matrix3).getNormalMatrix(t),i=0,r=this.vertices.length;r>i;i++){var n=this.vertices[i];n.applyMatrix4(t)}for(var i=0,r=this.faces.length;r>i;i++){var o=this.faces[i];o.normal.applyMatrix3(e).normalize();for(var a=0,s=o.vertexNormals.length;s>a;a++)o.vertexNormals[a].applyMatrix3(e).normalize()}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox(),this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},computeFaceNormals:function(){for(var t=new THREE.Vector3,e=new THREE.Vector3,i=0,r=this.faces.length;r>i;i++){var n=this.faces[i],o=this.vertices[n.a],a=this.vertices[n.b],s=this.vertices[n.c];t.subVectors(s,a),e.subVectors(o,a),t.cross(e),t.normalize(),n.normal.copy(t)}},computeVertexNormals:function(t){var e,i,r,n,o,a;for(a=new Array(this.vertices.length),e=0,i=this.vertices.length;i>e;e++)a[e]=new THREE.Vector3;if(t){{var s,h,l,c=new THREE.Vector3,u=new THREE.Vector3;new THREE.Vector3,new THREE.Vector3,new THREE.Vector3}for(r=0,n=this.faces.length;n>r;r++)o=this.faces[r],s=this.vertices[o.a],h=this.vertices[o.b],l=this.vertices[o.c],c.subVectors(l,h),u.subVectors(s,h),c.cross(u),a[o.a].add(c),a[o.b].add(c),a[o.c].add(c)}else for(r=0,n=this.faces.length;n>r;r++)o=this.faces[r],a[o.a].add(o.normal),a[o.b].add(o.normal),a[o.c].add(o.normal);for(e=0,i=this.vertices.length;i>e;e++)a[e].normalize();for(r=0,n=this.faces.length;n>r;r++)o=this.faces[r],o.vertexNormals[0]=a[o.a].clone(),o.vertexNormals[1]=a[o.b].clone(),o.vertexNormals[2]=a[o.c].clone()},computeMorphNormals:function(){var t,e,i,r,n;for(i=0,r=this.faces.length;r>i;i++)for(n=this.faces[i],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),t=0,e=n.vertexNormals.length;e>t;t++)n.__originalVertexNormals[t]?n.__originalVertexNormals[t].copy(n.vertexNormals[t]):n.__originalVertexNormals[t]=n.vertexNormals[t].clone();var o=new THREE.Geometry;for(o.faces=this.faces,t=0,e=this.morphTargets.length;e>t;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];var a,s,h=this.morphNormals[t].faceNormals,l=this.morphNormals[t].vertexNormals;for(i=0,r=this.faces.length;r>i;i++)a=new THREE.Vector3,s={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},h.push(a),l.push(s)}var c=this.morphNormals[t];o.vertices=this.morphTargets[t].vertices,o.computeFaceNormals(),o.computeVertexNormals();var a,s;for(i=0,r=this.faces.length;r>i;i++)n=this.faces[i],a=c.faceNormals[i],s=c.vertexNormals[i],a.copy(n.normal),s.a.copy(n.vertexNormals[0]),s.b.copy(n.vertexNormals[1]),s.c.copy(n.vertexNormals[2])}for(i=0,r=this.faces.length;r>i;i++)n=this.faces[i],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){function t(t,e,i,r,n,o,a){l=t.vertices[e],c=t.vertices[i],u=t.vertices[r],f=h[n],d=h[o],p=h[a],E=c.x-l.x,m=u.x-l.x,y=c.y-l.y,v=u.y-l.y,g=c.z-l.z,x=u.z-l.z,T=d.x-f.x,R=p.x-f.x,_=d.y-f.y,b=p.y-f.y,w=1/(T*b-R*_),z.set((b*E-_*m)*w,(b*y-_*v)*w,(b*g-_*x)*w),D.set((T*m-R*E)*w,(T*v-R*y)*w,(T*x-R*g)*w),A[e].add(z),A[i].add(z),A[r].add(z),C[e].add(D),C[i].add(D),C[r].add(D)}var e,i,r,n,o,a,s,h,l,c,u,f,d,p,E,m,y,v,g,x,T,R,_,b,w,H,M,S,A=[],C=[],z=new THREE.Vector3,D=new THREE.Vector3,F=new THREE.Vector3,P=new THREE.Vector3,L=new THREE.Vector3;for(r=0,n=this.vertices.length;n>r;r++)A[r]=new THREE.Vector3,C[r]=new THREE.Vector3;for(e=0,i=this.faces.length;i>e;e++)s=this.faces[e],h=this.faceVertexUvs[0][e],t(this,s.a,s.b,s.c,0,1,2);var V=["a","b","c","d"];for(e=0,i=this.faces.length;i>e;e++)for(s=this.faces[e],o=0;o<Math.min(s.vertexNormals.length,3);o++)L.copy(s.vertexNormals[o]),a=s[V[o]],H=A[a],F.copy(H),F.sub(L.multiplyScalar(L.dot(H))).normalize(),P.crossVectors(s.vertexNormals[o],H),M=P.dot(C[a]),S=0>M?-1:1,s.vertexTangents[o]=new THREE.Vector4(F.x,F.y,F.z,S);this.hasTangents=!0},computeLineDistances:function(){for(var t=0,e=this.vertices,i=0,r=e.length;r>i;i++)i>0&&(t+=e[i].distanceTo(e[i-1])),this.lineDistances[i]=t},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,i){if(t instanceof THREE.Geometry==!1)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t);var r,n=this.vertices.length,o=(this.faceVertexUvs[0].length,this.vertices),a=t.vertices,s=this.faces,h=t.faces,l=this.faceVertexUvs[0],c=t.faceVertexUvs[0];void 0===i&&(i=0),void 0!==e&&(r=(new THREE.Matrix3).getNormalMatrix(e));for(var u=0,f=a.length;f>u;u++){var d=a[u],p=d.clone();void 0!==e&&p.applyMatrix4(e),o.push(p)}for(u=0,f=h.length;f>u;u++){var E,m,y,v=h[u],g=v.vertexNormals,x=v.vertexColors;E=new THREE.Face3(v.a+n,v.b+n,v.c+n),E.normal.copy(v.normal),void 0!==r&&E.normal.applyMatrix3(r).normalize();for(var T=0,R=g.length;R>T;T++)m=g[T].clone(),void 0!==r&&m.applyMatrix3(r).normalize(),E.vertexNormals.push(m);E.color.copy(v.color);for(var T=0,R=x.length;R>T;T++)y=x[T],E.vertexColors.push(y.clone());E.materialIndex=v.materialIndex+i,s.push(E)}for(u=0,f=c.length;f>u;u++){var _=c[u],b=[];if(void 0!==_){for(var T=0,R=_.length;R>T;T++)b.push(new THREE.Vector2(_[T].x,_[T].y));l.push(b)}}},mergeVertices:function(){var t,e,i,r,n,o,a,s,h={},l=[],c=[],u=4,f=Math.pow(10,u);for(i=0,r=this.vertices.length;r>i;i++)t=this.vertices[i],e=Math.round(t.x*f)+"_"+Math.round(t.y*f)+"_"+Math.round(t.z*f),void 0===h[e]?(h[e]=i,l.push(this.vertices[i]),c[i]=l.length-1):c[i]=c[h[e]];var d=[];for(i=0,r=this.faces.length;r>i;i++){n=this.faces[i],n.a=c[n.a],n.b=c[n.b],n.c=c[n.c],o=[n.a,n.b,n.c];for(var p=-1,E=0;3>E;E++)if(o[E]==o[(E+1)%3]){p=E,d.push(i);
break}}for(i=d.length-1;i>=0;i--){var m=d[i];for(this.faces.splice(m,1),a=0,s=this.faceVertexUvs.length;s>a;a++)this.faceVertexUvs[a].splice(m,1)}var y=this.vertices.length-l.length;return this.vertices=l,y},makeGroups:function(){var t=0;return function(e,i){var r,n,o,a,s,h={},l=this.morphTargets.length,c=this.morphNormals.length;for(this.geometryGroups={},r=0,n=this.faces.length;n>r;r++)o=this.faces[r],a=e?o.materialIndex:0,a in h||(h[a]={hash:a,counter:0}),s=h[a].hash+"_"+h[a].counter,s in this.geometryGroups||(this.geometryGroups[s]={faces3:[],materialIndex:a,vertices:0,numMorphTargets:l,numMorphNormals:c}),this.geometryGroups[s].vertices+3>i&&(h[a].counter+=1,s=h[a].hash+"_"+h[a].counter,s in this.geometryGroups||(this.geometryGroups[s]={faces3:[],materialIndex:a,vertices:0,numMorphTargets:l,numMorphNormals:c})),this.geometryGroups[s].faces3.push(r),this.geometryGroups[s].vertices+=3;this.geometryGroupsList=[];for(var u in this.geometryGroups)this.geometryGroups[u].id=t++,this.geometryGroupsList.push(this.geometryGroups[u])}}(),clone:function(){for(var t=new THREE.Geometry,e=this.vertices,i=0,r=e.length;r>i;i++)t.vertices.push(e[i].clone());for(var n=this.faces,i=0,r=n.length;r>i;i++)t.faces.push(n[i].clone());for(var o=this.faceVertexUvs[0],i=0,r=o.length;r>i;i++){for(var a=o[i],s=[],h=0,l=a.length;l>h;h++)s.push(new THREE.Vector2(a[h].x,a[h].y));t.faceVertexUvs[0].push(s)}return t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(){var t=new THREE.Matrix4;return function(e){t.lookAt(this.position,e,this.up),this.quaternion.setFromRotationMatrix(t)}}(),THREE.Camera.prototype.clone=function(t){return void 0===t&&(t=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,t),t.matrixWorldInverse.copy(this.matrixWorldInverse),t.projectionMatrix.copy(this.projectionMatrix),t},THREE.OrthographicCamera=function(t,e,i,r,n,o){THREE.Camera.call(this),this.left=t,this.right=e,this.top=i,this.bottom=r,this.near=void 0!==n?n:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.OrthographicCamera.prototype.clone=function(){var t=new THREE.OrthographicCamera;return THREE.Camera.prototype.clone.call(this,t),t.left=this.left,t.right=this.right,t.top=this.top,t.bottom=this.bottom,t.near=this.near,t.far=this.far,t},THREE.PerspectiveCamera=function(t,e,i,r){THREE.Camera.call(this),this.fov=void 0!==t?t:50,this.aspect=void 0!==e?e:1,this.near=void 0!==i?i:.1,this.far=void 0!==r?r:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(t,e){void 0===e&&(e=24),this.fov=2*THREE.Math.radToDeg(Math.atan(e/(2*t))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(t,e,i,r,n,o){this.fullWidth=t,this.fullHeight=e,this.x=i,this.y=r,this.width=n,this.height=o,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var t=this.fullWidth/this.fullHeight,e=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,i=-e,r=t*i,n=t*e,o=Math.abs(n-r),a=Math.abs(e-i);this.projectionMatrix.makeFrustum(r+this.x*o/this.fullWidth,r+(this.x+this.width)*o/this.fullWidth,e-(this.y+this.height)*a/this.fullHeight,e-this.y*a/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var t=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,t),t.fov=this.fov,t.aspect=this.aspect,t.near=this.near,t.far=this.far,t},THREE.Light=function(t){THREE.Object3D.call(this),this.color=new THREE.Color(t)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.clone=function(t){return void 0===t&&(t=new THREE.Light),THREE.Object3D.prototype.clone.call(this,t),t.color.copy(this.color),t},THREE.AmbientLight=function(t){THREE.Light.call(this,t)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.clone=function(){var t=new THREE.AmbientLight;return THREE.Light.prototype.clone.call(this,t),t},THREE.DirectionalLight=function(t,e){THREE.Light.call(this,t),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==e?e:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.clone=function(){var t=new THREE.DirectionalLight;return THREE.Light.prototype.clone.call(this,t),t.target=this.target.clone(),t.intensity=this.intensity,t.castShadow=this.castShadow,t.onlyShadow=this.onlyShadow,t.shadowCameraNear=this.shadowCameraNear,t.shadowCameraFar=this.shadowCameraFar,t.shadowCameraLeft=this.shadowCameraLeft,t.shadowCameraRight=this.shadowCameraRight,t.shadowCameraTop=this.shadowCameraTop,t.shadowCameraBottom=this.shadowCameraBottom,t.shadowCameraVisible=this.shadowCameraVisible,t.shadowBias=this.shadowBias,t.shadowDarkness=this.shadowDarkness,t.shadowMapWidth=this.shadowMapWidth,t.shadowMapHeight=this.shadowMapHeight,t.shadowCascade=this.shadowCascade,t.shadowCascadeOffset.copy(this.shadowCascadeOffset),t.shadowCascadeCount=this.shadowCascadeCount,t.shadowCascadeBias=this.shadowCascadeBias.slice(0),t.shadowCascadeWidth=this.shadowCascadeWidth.slice(0),t.shadowCascadeHeight=this.shadowCascadeHeight.slice(0),t.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0),t.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0),t},THREE.HemisphereLight=function(t,e,i){THREE.Light.call(this,t),this.position.set(0,100,0),this.groundColor=new THREE.Color(e),this.intensity=void 0!==i?i:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.clone=function(){var t=new THREE.HemisphereLight;return THREE.Light.prototype.clone.call(this,t),t.groundColor.copy(this.groundColor),t.intensity=this.intensity,t},THREE.PointLight=function(t,e,i){THREE.Light.call(this,t),this.intensity=void 0!==e?e:1,this.distance=void 0!==i?i:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.clone=function(){var t=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,t),t.intensity=this.intensity,t.distance=this.distance,t},THREE.SpotLight=function(t,e,i,r,n){THREE.Light.call(this,t),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==e?e:1,this.distance=void 0!==i?i:0,this.angle=void 0!==r?r:Math.PI/3,this.exponent=void 0!==n?n:10,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.clone=function(){var t=new THREE.SpotLight;return THREE.Light.prototype.clone.call(this,t),t.target=this.target.clone(),t.intensity=this.intensity,t.distance=this.distance,t.angle=this.angle,t.exponent=this.exponent,t.castShadow=this.castShadow,t.onlyShadow=this.onlyShadow,t.shadowCameraNear=this.shadowCameraNear,t.shadowCameraFar=this.shadowCameraFar,t.shadowCameraFov=this.shadowCameraFov,t.shadowCameraVisible=this.shadowCameraVisible,t.shadowBias=this.shadowBias,t.shadowDarkness=this.shadowDarkness,t.shadowMapWidth=this.shadowMapWidth,t.shadowMapHeight=this.shadowMapHeight,t},THREE.Material=function(){this.id=THREE.MaterialIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthTest=!0,this.depthWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=0,this.visible=!0,this.needsUpdate=!0},THREE.Material.prototype={constructor:THREE.Material,setValues:function(t){if(void 0!==t)for(var e in t){var i=t[e];if(void 0!==i){if(e in this){var r=this[e];r instanceof THREE.Color?r.set(i):r instanceof THREE.Vector3&&i instanceof THREE.Vector3?r.copy(i):this[e]="overdraw"==e?Number(i):i}}else console.warn("THREE.Material: '"+e+"' parameter is undefined.")}},clone:function(t){return void 0===t&&(t=new THREE.Material),t.name=this.name,t.side=this.side,t.opacity=this.opacity,t.transparent=this.transparent,t.blending=this.blending,t.blendSrc=this.blendSrc,t.blendDst=this.blendDst,t.blendEquation=this.blendEquation,t.depthTest=this.depthTest,t.depthWrite=this.depthWrite,t.polygonOffset=this.polygonOffset,t.polygonOffsetFactor=this.polygonOffsetFactor,t.polygonOffsetUnits=this.polygonOffsetUnits,t.alphaTest=this.alphaTest,t.overdraw=this.overdraw,t.visible=this.visible,t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=!1,this.fog=!0,this.setValues(t)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var t=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.linewidth=this.linewidth,t.linecap=this.linecap,t.linejoin=this.linejoin,t.vertexColors=this.vertexColors,t.fog=this.fog,t},THREE.LineDashedMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(t)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var t=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.linewidth=this.linewidth,t.scale=this.scale,t.dashSize=this.dashSize,t.gapSize=this.gapSize,t.vertexColors=this.vertexColors,t.fog=this.fog,t},THREE.MeshBasicMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(t)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var t=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.map=this.map,t.lightMap=this.lightMap,t.specularMap=this.specularMap,t.envMap=this.envMap,t.combine=this.combine,t.reflectivity=this.reflectivity,t.refractionRatio=this.refractionRatio,t.fog=this.fog,t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t.wireframeLinecap=this.wireframeLinecap,t.wireframeLinejoin=this.wireframeLinejoin,t.vertexColors=this.vertexColors,t.skinning=this.skinning,t.morphTargets=this.morphTargets,t},THREE.MeshLambertMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var t=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.ambient.copy(this.ambient),t.emissive.copy(this.emissive),t.wrapAround=this.wrapAround,t.wrapRGB.copy(this.wrapRGB),t.map=this.map,t.lightMap=this.lightMap,t.specularMap=this.specularMap,t.envMap=this.envMap,t.combine=this.combine,t.reflectivity=this.reflectivity,t.refractionRatio=this.refractionRatio,t.fog=this.fog,t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t.wireframeLinecap=this.wireframeLinecap,t.wireframeLinejoin=this.wireframeLinejoin,t.vertexColors=this.vertexColors,t.skinning=this.skinning,t.morphTargets=this.morphTargets,t.morphNormals=this.morphNormals,t},THREE.MeshPhongMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var t=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.ambient.copy(this.ambient),t.emissive.copy(this.emissive),t.specular.copy(this.specular),t.shininess=this.shininess,t.metal=this.metal,t.wrapAround=this.wrapAround,t.wrapRGB.copy(this.wrapRGB),t.map=this.map,t.lightMap=this.lightMap,t.bumpMap=this.bumpMap,t.bumpScale=this.bumpScale,t.normalMap=this.normalMap,t.normalScale.copy(this.normalScale),t.specularMap=this.specularMap,t.envMap=this.envMap,t.combine=this.combine,t.reflectivity=this.reflectivity,t.refractionRatio=this.refractionRatio,t.fog=this.fog,t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t.wireframeLinecap=this.wireframeLinecap,t.wireframeLinejoin=this.wireframeLinejoin,t.vertexColors=this.vertexColors,t.skinning=this.skinning,t.morphTargets=this.morphTargets,t.morphNormals=this.morphNormals,t},THREE.MeshDepthMaterial=function(t){THREE.Material.call(this),this.morphTargets=!1,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var t=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,t),t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t},THREE.MeshNormalMaterial=function(t){THREE.Material.call(this,t),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(t)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var t=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,t),t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t},THREE.MeshFaceMaterial=function(t){this.materials=t instanceof Array?t:[]},THREE.MeshFaceMaterial.prototype.clone=function(){for(var t=new THREE.MeshFaceMaterial,e=0;e<this.materials.length;e++)t.materials.push(this.materials[e].clone());return t},THREE.ParticleSystemMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(t)},THREE.ParticleSystemMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleSystemMaterial.prototype.clone=function(){var t=new THREE.ParticleSystemMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.map=this.map,t.size=this.size,t.sizeAttenuation=this.sizeAttenuation,t.vertexColors=this.vertexColors,t.fog=this.fog,t},THREE.ParticleBasicMaterial=THREE.ParticleSystemMaterial,THREE.ShaderMaterial=function(t){THREE.Material.call(this),this.fragmentShader="void main() {}",this.vertexShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.setValues(t)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var t=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,t),t.fragmentShader=this.fragmentShader,t.vertexShader=this.vertexShader,t.uniforms=THREE.UniformsUtils.clone(this.uniforms),t.attributes=this.attributes,t.defines=this.defines,t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t.fog=this.fog,t.lights=this.lights,t.vertexColors=this.vertexColors,t.skinning=this.skinning,t.morphTargets=this.morphTargets,t.morphNormals=this.morphNormals,t},THREE.SpriteMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(t)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var t=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.map=this.map,t.rotation=this.rotation,t.fog=this.fog,t},THREE.Texture=function(t,e,i,r,n,o,a,s,h){this.id=THREE.TextureIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.image=t,this.mipmaps=[],this.mapping=void 0!==e?e:new THREE.UVMapping,this.wrapS=void 0!==i?i:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r?r:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:THREE.LinearFilter,this.minFilter=void 0!==o?o:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==a?a:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this._needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(t){t===!0&&this.update(),this._needsUpdate=t},clone:function(t){return void 0===t&&(t=new THREE.Texture),t.image=this.image,t.mipmaps=this.mipmaps.slice(0),t.mapping=this.mapping,t.wrapS=this.wrapS,t.wrapT=this.wrapT,t.magFilter=this.magFilter,t.minFilter=this.minFilter,t.anisotropy=this.anisotropy,t.format=this.format,t.type=this.type,t.offset.copy(this.offset),t.repeat.copy(this.repeat),t.generateMipmaps=this.generateMipmaps,t.premultiplyAlpha=this.premultiplyAlpha,t.flipY=this.flipY,t.unpackAlignment=this.unpackAlignment,t},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CompressedTexture=function(t,e,i,r,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,r,n,c),this.image={width:e,height:i},this.mipmaps=t,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var t=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,t),t},THREE.DataTexture=function(t,e,i,r,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,r,n,c),this.image={data:t,width:e,height:i}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var t=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,t),t},THREE.ParticleSystem=function(t,e){THREE.Object3D.call(this),this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.ParticleSystemMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.frustumCulled=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(t){return void 0===t&&(t=new THREE.ParticleSystem(this.geometry,this.material)),t.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,t),t},THREE.Line=function(t,e,i){THREE.Object3D.call(this),this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==i?i:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(t){return void 0===t&&(t=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,t),t},THREE.Mesh=function(t,e){THREE.Object3D.call(this),this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var t=0,e=this.geometry.morphTargets.length;e>t;t++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[t].name]=t}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(t){return void 0!==this.morphTargetDictionary[t]?this.morphTargetDictionary[t]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+t+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(t,e){return void 0===t&&(t=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,t,e),t},THREE.Bone=function(t){THREE.Object3D.call(this),this.skin=t,this.skinMatrix=new THREE.Matrix4,this.accumulatedRotWeight=0,this.accumulatedPosWeight=0,this.accumulatedSclWeight=0},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(t,e){this.matrixAutoUpdate&&(e|=this.updateMatrix()),(e||this.matrixWorldNeedsUpdate)&&(t?this.skinMatrix.multiplyMatrices(t,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0,this.accumulatedRotWeight=0,this.accumulatedPosWeight=0,this.accumulatedSclWeight=0);for(var i=0,r=this.children.length;r>i;i++)this.children[i].update(this.skinMatrix,e)},THREE.Skeleton=function(t,e){this.useVertexTexture=void 0!==e?e:!0,this.bones=[],this.boneMatrices=[];var i,r,n,o,a;if(void 0!==t){for(var s=0;s<t.length;++s)r=t[s],n=r.pos,o=r.rotq,a=r.scl,i=this.addBone(),i.name=r.name,i.position.set(n[0],n[1],n[2]),i.quaternion.set(o[0],o[1],o[2],o[3]),void 0!==a?i.scale.set(a[0],a[1],a[2]):i.scale.set(1,1,1);for(var s=0;s<t.length;++s)r=t[s],-1!==r.parent&&this.bones[r.parent].add(this.bones[s]);var h=this.bones.length;if(this.useVertexTexture){var l;l=h>256?64:h>64?32:h>16?16:8,this.boneTextureWidth=l,this.boneTextureHeight=l,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1}else this.boneMatrices=new Float32Array(16*h)}},THREE.Skeleton.prototype=Object.create(THREE.Mesh.prototype),THREE.Skeleton.prototype.addBone=function(t){return void 0===t&&(t=new THREE.Bone(this)),this.bones.push(t),t},THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var t=0,e=this.bones.length;e>t;++t){var i=new THREE.Matrix4;i.getInverse(this.bones[t].skinMatrix),this.boneInverses.push(i)}},THREE.SkinnedMesh=function(t,e,i){THREE.Mesh.call(this,t,e),this.skeleton=new THREE.Skeleton(this.geometry&&this.geometry.bones,i);for(var r=0;r<this.skeleton.bones.length;++r){var n=this.skeleton.bones[r];void 0===n.parent&&this.add(n)}this.identityMatrix=new THREE.Matrix4,this.pose()},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var t=new THREE.Matrix4;return function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var i=0,r=this.children.length;r>i;i++){var n=this.children[i];n instanceof THREE.Bone?n.update(this.identityMatrix,!1):n.updateMatrixWorld(!0)}void 0===this.skeleton.boneInverses&&this.skeleton.calculateInverses();for(var o=0,a=this.skeleton.bones.length;a>o;o++)t.multiplyMatrices(this.skeleton.bones[o].skinMatrix,this.skeleton.boneInverses[o]),t.flattenToArrayOffset(this.skeleton.boneMatrices,16*o);this.skeleton.useVertexTexture&&(this.skeleton.boneTexture.needsUpdate=!0)}}(),THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0),this.normalizeSkinWeights()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var t=0;t<this.geometry.skinIndices.length;t++){var e=this.geometry.skinWeights[t],i=1/e.lengthManhattan();1/0!==i?e.multiplyScalar(i):e.set(1)}},THREE.SkinnedMesh.prototype.clone=function(t){return void 0===t&&(t=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,t),t},THREE.LOD=function(){THREE.Object3D.call(this),this.objects=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(t,e){void 0===e&&(e=0),e=Math.abs(e);for(var i=0;i<this.objects.length&&!(e<this.objects[i].distance);i++);this.objects.splice(i,0,{distance:e,object:t}),this.add(t)},THREE.LOD.prototype.getObjectForDistance=function(t){for(var e=1,i=this.objects.length;i>e&&!(t<this.objects[e].distance);e++);return this.objects[e-1].object},THREE.LOD.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(i){if(this.objects.length>1){t.setFromMatrixPosition(i.matrixWorld),e.setFromMatrixPosition(this.matrixWorld);var r=t.distanceTo(e);this.objects[0].object.visible=!0;for(var n=1,o=this.objects.length;o>n&&r>=this.objects[n].distance;n++)this.objects[n-1].object.visible=!1,this.objects[n].object.visible=!0;for(;o>n;n++)this.objects[n].object.visible=!1}}}(),THREE.LOD.prototype.clone=function(t){void 0===t&&(t=new THREE.LOD),THREE.Object3D.prototype.clone.call(this,t);for(var e=0,i=this.objects.length;i>e;e++){var r=this.objects[e].object.clone();r.visible=0===e,t.addLevel(r,this.objects[e].distance)}return t},THREE.Sprite=function(){var t=new THREE.Float32Attribute(3,3);t.set([-.5,-.5,0,.5,-.5,0,.5,.5,0]);var e=new THREE.BufferGeometry;return e.addAttribute("position",t),function(t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.SpriteMaterial}}(),THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(t){return void 0===t&&(t=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,t),t},THREE.Particle=THREE.Sprite,THREE.Scene=function(){THREE.Object3D.call(this),this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,this.matrixAutoUpdate=!1,this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(t){if(t instanceof THREE.Light)-1===this.__lights.indexOf(t)&&this.__lights.push(t),t.target&&void 0===t.target.parent&&this.add(t.target);else if(!(t instanceof THREE.Camera||t instanceof THREE.Bone)){this.__objectsAdded.push(t);var e=this.__objectsRemoved.indexOf(t);-1!==e&&this.__objectsRemoved.splice(e,1)}this.dispatchEvent({type:"objectAdded",object:t}),t.dispatchEvent({type:"addedToScene",scene:this});for(var i=0;i<t.children.length;i++)this.__addObject(t.children[i])},THREE.Scene.prototype.__removeObject=function(t){if(t instanceof THREE.Light){var e=this.__lights.indexOf(t);if(-1!==e&&this.__lights.splice(e,1),t.shadowCascadeArray)for(var i=0;i<t.shadowCascadeArray.length;i++)this.__removeObject(t.shadowCascadeArray[i])}else if(!(t instanceof THREE.Camera)){this.__objectsRemoved.push(t);var e=this.__objectsAdded.indexOf(t);-1!==e&&this.__objectsAdded.splice(e,1)}this.dispatchEvent({type:"objectRemoved",object:t}),t.dispatchEvent({type:"removedFromScene",scene:this});for(var r=0;r<t.children.length;r++)this.__removeObject(t.children[r])},THREE.Scene.prototype.clone=function(t){return void 0===t&&(t=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,t),null!==this.fog&&(t.fog=this.fog.clone()),null!==this.overrideMaterial&&(t.overrideMaterial=this.overrideMaterial.clone()),t.autoUpdate=this.autoUpdate,t.matrixAutoUpdate=this.matrixAutoUpdate,t},THREE.Fog=function(t,e,i){this.name="",this.color=new THREE.Color(t),this.near=void 0!==e?e:1,this.far=void 0!==i?i:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(t,e){this.name="",this.color=new THREE.Color(t),this.density=void 0!==e?e:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.ShaderChunk={fog_pars_fragment:["#ifdef USE_FOG","	uniform vec3 fogColor;","	#ifdef FOG_EXP2","		uniform float fogDensity;","	#else","		uniform float fogNear;","		uniform float fogFar;","	#endif","#endif"].join("\n"),fog_fragment:["#ifdef USE_FOG","	#ifdef USE_LOGDEPTHBUF_EXT","		float depth = gl_FragDepthEXT / gl_FragCoord.w;","	#else","		float depth = gl_FragCoord.z / gl_FragCoord.w;","	#endif","	#ifdef FOG_EXP2","		const float LOG2 = 1.442695;","		float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","		fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","	#else","		float fogFactor = smoothstep( fogNear, fogFar, depth );","	#endif","	gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","#endif"].join("\n"),envmap_pars_fragment:["#ifdef USE_ENVMAP","	uniform float reflectivity;","	uniform samplerCube envMap;","	uniform float flipEnvMap;","	uniform int combine;","	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","		uniform bool useRefract;","		uniform float refractionRatio;","	#else","		varying vec3 vReflect;","	#endif","#endif"].join("\n"),envmap_fragment:["#ifdef USE_ENVMAP","	vec3 reflectVec;","	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","		vec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );","		if ( useRefract ) {","			reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );","		} else { ","			reflectVec = reflect( cameraToVertex, worldNormal );","		}","	#else","		reflectVec = vReflect;","	#endif","	#ifdef DOUBLE_SIDED","		float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );","		vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","	#else","		vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","	#endif","	#ifdef GAMMA_INPUT","		cubeColor.xyz *= cubeColor.xyz;","	#endif","	if ( combine == 1 ) {","		gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );","	} else if ( combine == 2 ) {","		gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;","	} else {","		gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );","	}","#endif"].join("\n"),envmap_pars_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","	varying vec3 vReflect;","	uniform float refractionRatio;","	uniform bool useRefract;","#endif"].join("\n"),worldpos_vertex:["#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )","	#ifdef USE_SKINNING","		vec4 worldPosition = modelMatrix * skinned;","	#endif","	#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","		vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );","	#endif","	#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","		vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","	#endif","#endif"].join("\n"),envmap_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","	vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;","	worldNormal = normalize( worldNormal );","	vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );","	if ( useRefract ) {","		vReflect = refract( cameraToVertex, worldNormal, refractionRatio );","	} else {","		vReflect = reflect( cameraToVertex, worldNormal );","	}","#endif"].join("\n"),map_particle_pars_fragment:["#ifdef USE_MAP","	uniform sampler2D map;","#endif"].join("\n"),map_particle_fragment:["#ifdef USE_MAP","	gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );","#endif"].join("\n"),map_pars_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","	varying vec2 vUv;","	uniform vec4 offsetRepeat;","#endif"].join("\n"),map_pars_fragment:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","	varying vec2 vUv;","#endif","#ifdef USE_MAP","	uniform sampler2D map;","#endif"].join("\n"),map_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;","#endif"].join("\n"),map_fragment:["#ifdef USE_MAP","	vec4 texelColor = texture2D( map, vUv );","	#ifdef GAMMA_INPUT","		texelColor.xyz *= texelColor.xyz;","	#endif","	gl_FragColor = gl_FragColor * texelColor;","#endif"].join("\n"),lightmap_pars_fragment:["#ifdef USE_LIGHTMAP","	varying vec2 vUv2;","	uniform sampler2D lightMap;","#endif"].join("\n"),lightmap_pars_vertex:["#ifdef USE_LIGHTMAP","	varying vec2 vUv2;","#endif"].join("\n"),lightmap_fragment:["#ifdef USE_LIGHTMAP","	gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );","#endif"].join("\n"),lightmap_vertex:["#ifdef USE_LIGHTMAP","	vUv2 = uv2;","#endif"].join("\n"),bumpmap_pars_fragment:["#ifdef USE_BUMPMAP","	uniform sampler2D bumpMap;","	uniform float bumpScale;","	vec2 dHdxy_fwd() {","		vec2 dSTdx = dFdx( vUv );","		vec2 dSTdy = dFdy( vUv );","		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;","		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;","		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;","		return vec2( dBx, dBy );","	}","	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {","		vec3 vSigmaX = dFdx( surf_pos );","		vec3 vSigmaY = dFdy( surf_pos );","		vec3 vN = surf_norm;","		vec3 R1 = cross( vSigmaY, vN );","		vec3 R2 = cross( vN, vSigmaX );","		float fDet = dot( vSigmaX, R1 );","		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );","		return normalize( abs( fDet ) * surf_norm - vGrad );","	}","#endif"].join("\n"),normalmap_pars_fragment:["#ifdef USE_NORMALMAP","	uniform sampler2D normalMap;","	uniform vec2 normalScale;","	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {","		vec3 q0 = dFdx( eye_pos.xyz );","		vec3 q1 = dFdy( eye_pos.xyz );","		vec2 st0 = dFdx( vUv.st );","		vec2 st1 = dFdy( vUv.st );","		vec3 S = normalize(  q0 * st1.t - q1 * st0.t );","		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );","		vec3 N = normalize( surf_norm );","		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;","		mapN.xy = normalScale * mapN.xy;","		mat3 tsn = mat3( S, T, N );","		return normalize( tsn * mapN );","	}","#endif"].join("\n"),specularmap_pars_fragment:["#ifdef USE_SPECULARMAP","	uniform sampler2D specularMap;","#endif"].join("\n"),specularmap_fragment:["float specularStrength;","#ifdef USE_SPECULARMAP","	vec4 texelSpecular = texture2D( specularMap, vUv );","	specularStrength = texelSpecular.r;","#else","	specularStrength = 1.0;","#endif"].join("\n"),lights_lambert_pars_vertex:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","	uniform vec3 wrapRGB;","#endif"].join("\n"),lights_lambert_vertex:["vLightFront = vec3( 0.0 );","#ifdef DOUBLE_SIDED","	vLightBack = vec3( 0.0 );","#endif","transformedNormal = normalize( transformedNormal );","#if MAX_DIR_LIGHTS > 0","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","	vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","	vec3 dirVector = normalize( lDirection.xyz );","	float dotProduct = dot( transformedNormal, dirVector );","	vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );","	#ifdef DOUBLE_SIDED","		vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","		#ifdef WRAP_AROUND","			vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","		#endif","	#endif","	#ifdef WRAP_AROUND","		vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","		directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );","		#ifdef DOUBLE_SIDED","			directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );","		#endif","	#endif","	vLightFront += directionalLightColor[ i ] * directionalLightWeighting;","	#ifdef DOUBLE_SIDED","		vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;","	#endif","}","#endif","#if MAX_POINT_LIGHTS > 0","	for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","		vec3 lVector = lPosition.xyz - mvPosition.xyz;","		float lDistance = 1.0;","		if ( pointLightDistance[ i ] > 0.0 )","			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","		lVector = normalize( lVector );","		float dotProduct = dot( transformedNormal, lVector );","		vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );","		#ifdef DOUBLE_SIDED","			vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","			#ifdef WRAP_AROUND","				vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","			#endif","		#endif","		#ifdef WRAP_AROUND","			vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","			pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );","			#ifdef DOUBLE_SIDED","				pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );","			#endif","		#endif","		vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;","		#ifdef DOUBLE_SIDED","			vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;","		#endif","	}","#endif","#if MAX_SPOT_LIGHTS > 0","	for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","		vec3 lVector = lPosition.xyz - mvPosition.xyz;","		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );","		if ( spotEffect > spotLightAngleCos[ i ] ) {","			spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","			float lDistance = 1.0;","			if ( spotLightDistance[ i ] > 0.0 )","				lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","			lVector = normalize( lVector );","			float dotProduct = dot( transformedNormal, lVector );","			vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );","			#ifdef DOUBLE_SIDED","				vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","				#ifdef WRAP_AROUND","					vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","				#endif","			#endif","			#ifdef WRAP_AROUND","				vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","				spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );","				#ifdef DOUBLE_SIDED","					spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );","				#endif","			#endif","			vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;","			#ifdef DOUBLE_SIDED","				vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;","			#endif","		}","	}","#endif","#if MAX_HEMI_LIGHTS > 0","	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","		vec3 lVector = normalize( lDirection.xyz );","		float dotProduct = dot( transformedNormal, lVector );","		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","		float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;","		vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","		#ifdef DOUBLE_SIDED","			vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );","		#endif","	}","#endif","vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;","#ifdef DOUBLE_SIDED","	vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;","#endif"].join("\n"),lights_phong_pars_vertex:["#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )","	varying vec3 vWorldPosition;","#endif"].join("\n"),lights_phong_vertex:["#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )","	vWorldPosition = worldPosition.xyz;","#endif"].join("\n"),lights_phong_pars_fragment:["uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )","	varying vec3 vWorldPosition;","#endif","#ifdef WRAP_AROUND","	uniform vec3 wrapRGB;","#endif","varying vec3 vViewPosition;","varying vec3 vNormal;"].join("\n"),lights_phong_fragment:["vec3 normal = normalize( vNormal );","vec3 viewPosition = normalize( vViewPosition );","#ifdef DOUBLE_SIDED","	normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );","#endif","#ifdef USE_NORMALMAP","	normal = perturbNormal2Arb( -vViewPosition, normal );","#elif defined( USE_BUMPMAP )","	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );","#endif","#if MAX_POINT_LIGHTS > 0","	vec3 pointDiffuse  = vec3( 0.0 );","	vec3 pointSpecular = vec3( 0.0 );","	for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","		vec3 lVector = lPosition.xyz + vViewPosition.xyz;","		float lDistance = 1.0;","		if ( pointLightDistance[ i ] > 0.0 )","			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","		lVector = normalize( lVector );","		float dotProduct = dot( normal, lVector );","		#ifdef WRAP_AROUND","			float pointDiffuseWeightFull = max( dotProduct, 0.0 );","			float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","			vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","		#else","			float pointDiffuseWeight = max( dotProduct, 0.0 );","		#endif","		pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;","		vec3 pointHalfVector = normalize( lVector + viewPosition );","		float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","		float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );","		float specularNormalization = ( shininess + 2.0001 ) / 8.0;","		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );","		pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;","	}","#endif","#if MAX_SPOT_LIGHTS > 0","	vec3 spotDiffuse  = vec3( 0.0 );","	vec3 spotSpecular = vec3( 0.0 );","	for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","		vec3 lVector = lPosition.xyz + vViewPosition.xyz;","		float lDistance = 1.0;","		if ( spotLightDistance[ i ] > 0.0 )","			lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","		lVector = normalize( lVector );","		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","		if ( spotEffect > spotLightAngleCos[ i ] ) {","			spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","			float dotProduct = dot( normal, lVector );","			#ifdef WRAP_AROUND","				float spotDiffuseWeightFull = max( dotProduct, 0.0 );","				float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","				vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","			#else","				float spotDiffuseWeight = max( dotProduct, 0.0 );","			#endif","			spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;","			vec3 spotHalfVector = normalize( lVector + viewPosition );","			float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","			float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );","			float specularNormalization = ( shininess + 2.0001 ) / 8.0;","			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );","			spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;","		}","	}","#endif","#if MAX_DIR_LIGHTS > 0","	vec3 dirDiffuse  = vec3( 0.0 );","	vec3 dirSpecular = vec3( 0.0 );","	for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","		vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","		vec3 dirVector = normalize( lDirection.xyz );","		float dotProduct = dot( normal, dirVector );","		#ifdef WRAP_AROUND","			float dirDiffuseWeightFull = max( dotProduct, 0.0 );","			float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","			vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );","		#else","			float dirDiffuseWeight = max( dotProduct, 0.0 );","		#endif","		dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;","		vec3 dirHalfVector = normalize( dirVector + viewPosition );","		float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","		float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );","		float specularNormalization = ( shininess + 2.0001 ) / 8.0;","		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );","		dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","	}","#endif","#if MAX_HEMI_LIGHTS > 0","	vec3 hemiDiffuse  = vec3( 0.0 );","	vec3 hemiSpecular = vec3( 0.0 );","	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","		vec3 lVector = normalize( lDirection.xyz );","		float dotProduct = dot( normal, lVector );","		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","		vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","		hemiDiffuse += diffuse * hemiColor;","		vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","		float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","		float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );","		vec3 lVectorGround = -lVector;","		vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","		float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","		float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );","		float dotProductGround = dot( normal, lVectorGround );","		float specularNormalization = ( shininess + 2.0001 ) / 8.0;","		vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );","		vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );","		hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","	}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","	totalDiffuse += dirDiffuse;","	totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","	totalDiffuse += hemiDiffuse;","	totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","	totalDiffuse += pointDiffuse;","	totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","	totalDiffuse += spotDiffuse;","	totalSpecular += spotSpecular;","#endif","#ifdef METAL","	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );","#else","	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","#endif"].join("\n"),color_pars_fragment:["#ifdef USE_COLOR","	varying vec3 vColor;","#endif"].join("\n"),color_fragment:["#ifdef USE_COLOR","	gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );","#endif"].join("\n"),color_pars_vertex:["#ifdef USE_COLOR","	varying vec3 vColor;","#endif"].join("\n"),color_vertex:["#ifdef USE_COLOR","	#ifdef GAMMA_INPUT","		vColor = color * color;","	#else","		vColor = color;","	#endif","#endif"].join("\n"),skinning_pars_vertex:["#ifdef USE_SKINNING","	#ifdef BONE_TEXTURE","		uniform sampler2D boneTexture;","		uniform int boneTextureWidth;","		uniform int boneTextureHeight;","		mat4 getBoneMatrix( const in float i ) {","			float j = i * 4.0;","			float x = mod( j, float( boneTextureWidth ) );","			float y = floor( j / float( boneTextureWidth ) );","			float dx = 1.0 / float( boneTextureWidth );","			float dy = 1.0 / float( boneTextureHeight );","			y = dy * ( y + 0.5 );","			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );","			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );","			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );","			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );","			mat4 bone = mat4( v1, v2, v3, v4 );","			return bone;","		}","	#else","		uniform mat4 boneGlobalMatrices[ MAX_BONES ];","		mat4 getBoneMatrix( const in float i ) {","			mat4 bone = boneGlobalMatrices[ int(i) ];","			return bone;","		}","	#endif","#endif"].join("\n"),skinbase_vertex:["#ifdef USE_SKINNING","	mat4 boneMatX = getBoneMatrix( skinIndex.x );","	mat4 boneMatY = getBoneMatrix( skinIndex.y );","	mat4 boneMatZ = getBoneMatrix( skinIndex.z );","	mat4 boneMatW = getBoneMatrix( skinIndex.w );","#endif"].join("\n"),skinning_vertex:["#ifdef USE_SKINNING","	#ifdef USE_MORPHTARGETS","	vec4 skinVertex = vec4( morphed, 1.0 );","	#else","	vec4 skinVertex = vec4( position, 1.0 );","	#endif","	vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","	skinned      += boneMatY * skinVertex * skinWeight.y;","	skinned      += boneMatZ * skinVertex * skinWeight.z;","	skinned      += boneMatW * skinVertex * skinWeight.w;","#endif"].join("\n"),morphtarget_pars_vertex:["#ifdef USE_MORPHTARGETS","	#ifndef USE_MORPHNORMALS","	uniform float morphTargetInfluences[ 8 ];","	#else","	uniform float morphTargetInfluences[ 4 ];","	#endif","#endif"].join("\n"),morphtarget_vertex:["#ifdef USE_MORPHTARGETS","	vec3 morphed = vec3( 0.0 );","	morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];","	morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];","	morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];","	morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];","	#ifndef USE_MORPHNORMALS","	morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];","	morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];","	morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];","	morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];","	#endif","	morphed += position;","#endif"].join("\n"),default_vertex:["vec4 mvPosition;","#ifdef USE_SKINNING","	mvPosition = modelViewMatrix * skinned;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )","	mvPosition = modelViewMatrix * vec4( morphed, 1.0 );","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )","	mvPosition = modelViewMatrix * vec4( position, 1.0 );","#endif","gl_Position = projectionMatrix * mvPosition;"].join("\n"),morphnormal_vertex:["#ifdef USE_MORPHNORMALS","	vec3 morphedNormal = vec3( 0.0 );","	morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];","	morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];","	morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];","	morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];","	morphedNormal += normal;","#endif"].join("\n"),skinnormal_vertex:["#ifdef USE_SKINNING","	mat4 skinMatrix = skinWeight.x * boneMatX;","	skinMatrix 	+= skinWeight.y * boneMatY;","	skinMatrix 	+= skinWeight.z * boneMatZ;","	skinMatrix 	+= skinWeight.w * boneMatW;","	#ifdef USE_MORPHNORMALS","	vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );","	#else","	vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );","	#endif","#endif"].join("\n"),defaultnormal_vertex:["vec3 objectNormal;","#ifdef USE_SKINNING","	objectNormal = skinnedNormal.xyz;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )","	objectNormal = morphedNormal;","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )","	objectNormal = normal;","#endif","#ifdef FLIP_SIDED","	objectNormal = -objectNormal;","#endif","vec3 transformedNormal = normalMatrix * objectNormal;"].join("\n"),shadowmap_pars_fragment:["#ifdef USE_SHADOWMAP","	uniform sampler2D shadowMap[ MAX_SHADOWS ];","	uniform vec2 shadowMapSize[ MAX_SHADOWS ];","	uniform float shadowDarkness[ MAX_SHADOWS ];","	uniform float shadowBias[ MAX_SHADOWS ];","	varying vec4 vShadowCoord[ MAX_SHADOWS ];","	float unpackDepth( const in vec4 rgba_depth ) {","		const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","		float depth = dot( rgba_depth, bit_shift );","		return depth;","	}","#endif"].join("\n"),shadowmap_fragment:["#ifdef USE_SHADOWMAP","	#ifdef SHADOWMAP_DEBUG","		vec3 frustumColors[3];","		frustumColors[0] = vec3( 1.0, 0.5, 0.0 );","		frustumColors[1] = vec3( 0.0, 1.0, 0.8 );","		frustumColors[2] = vec3( 0.0, 0.5, 1.0 );","	#endif","	#ifdef SHADOWMAP_CASCADE","		int inFrustumCount = 0;","	#endif","	float fDepth;","	vec3 shadowColor = vec3( 1.0 );","	for( int i = 0; i < MAX_SHADOWS; i ++ ) {","		vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;","		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );","		bool inFrustum = all( inFrustumVec );","		#ifdef SHADOWMAP_CASCADE","			inFrustumCount += int( inFrustum );","			bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );","		#else","			bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );","		#endif","		bool frustumTest = all( frustumTestVec );","		if ( frustumTest ) {","			shadowCoord.z += shadowBias[ i ];","			#if defined( SHADOWMAP_TYPE_PCF )","				float shadow = 0.0;","				const float shadowDelta = 1.0 / 9.0;","				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","				float dx0 = -1.25 * xPixelOffset;","				float dy0 = -1.25 * yPixelOffset;","				float dx1 = 1.25 * xPixelOffset;","				float dy1 = 1.25 * yPixelOffset;","				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","			#elif defined( SHADOWMAP_TYPE_PCF_SOFT )","				float shadow = 0.0;","				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","				float dx0 = -1.0 * xPixelOffset;","				float dy0 = -1.0 * yPixelOffset;","				float dx1 = 1.0 * xPixelOffset;","				float dy1 = 1.0 * yPixelOffset;","				mat3 shadowKernel;","				mat3 depthKernel;","				depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","				depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","				depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","				depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","				depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","				depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","				depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","				depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","				depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","				vec3 shadowZ = vec3( shadowCoord.z );","				shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));","				shadowKernel[0] *= vec3(0.25);","				shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));","				shadowKernel[1] *= vec3(0.25);","				shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));","				shadowKernel[2] *= vec3(0.25);","				vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );","				shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );","				shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );","				vec4 shadowValues;","				shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );","				shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );","				shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );","				shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );","				shadow = dot( shadowValues, vec4( 1.0 ) );","				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","			#else","				vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );","				float fDepth = unpackDepth( rgbaDepth );","				if ( fDepth < shadowCoord.z )","					shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );","			#endif","		}","		#ifdef SHADOWMAP_DEBUG","			#ifdef SHADOWMAP_CASCADE","				if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];","			#else","				if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];","			#endif","		#endif","	}","	#ifdef GAMMA_OUTPUT","		shadowColor *= shadowColor;","	#endif","	gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;","#endif"].join("\n"),shadowmap_pars_vertex:["#ifdef USE_SHADOWMAP","	varying vec4 vShadowCoord[ MAX_SHADOWS ];","	uniform mat4 shadowMatrix[ MAX_SHADOWS ];","#endif"].join("\n"),shadowmap_vertex:["#ifdef USE_SHADOWMAP","	for( int i = 0; i < MAX_SHADOWS; i ++ ) {","		vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","	}","#endif"].join("\n"),alphatest_fragment:["#ifdef ALPHATEST","	if ( gl_FragColor.a < ALPHATEST ) discard;","#endif"].join("\n"),linear_to_gamma_fragment:["#ifdef GAMMA_OUTPUT","	gl_FragColor.xyz = sqrt( gl_FragColor.xyz );","#endif"].join("\n"),logdepthbuf_pars_vertex:["#ifdef USE_LOGDEPTHBUF","	#ifdef USE_LOGDEPTHBUF_EXT","		varying float vFragDepth;","	#endif","	uniform float logDepthBufFC;","#endif"].join("\n"),logdepthbuf_vertex:["#ifdef USE_LOGDEPTHBUF","	gl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;","	#ifdef USE_LOGDEPTHBUF_EXT","		vFragDepth = 1.0 + gl_Position.w;","#else","		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;","	#endif","#endif"].join("\n"),logdepthbuf_pars_fragment:["#ifdef USE_LOGDEPTHBUF","	uniform float logDepthBufFC;","	#ifdef USE_LOGDEPTHBUF_EXT","		#extension GL_EXT_frag_depth : enable","		varying float vFragDepth;","	#endif","#endif"].join("\n"),logdepthbuf_fragment:["#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)","	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;","#endif"].join("\n")},THREE.UniformsUtils={merge:function(t){var e,i,r,n={};
for(e=0;e<t.length;e++){r=this.clone(t[e]);for(i in r)n[i]=r[i]}return n},clone:function(t){var e,i,r,n={};for(e in t){n[e]={};for(i in t[e])r=t[e][i],n[e][i]=r instanceof THREE.Color||r instanceof THREE.Vector2||r instanceof THREE.Vector3||r instanceof THREE.Vector4||r instanceof THREE.Matrix4||r instanceof THREE.Texture?r.clone():r instanceof Array?r.slice():r}return n}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"	#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"	#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"	#ifdef DOUBLE_SIDED","		if ( gl_FrontFacing )","			gl_FragColor.xyz *= vLightFront;","		else","			gl_FragColor.xyz *= vLightBack;","	#else","		gl_FragColor.xyz *= vLightFront;","	#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"	vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"	vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","	#ifdef USE_SIZEATTENUATION","		gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","	#else","		gl_PointSize = size;","	#endif","	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"	vLineDistance = scale * lineDistance;","	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	if ( mod( vLineDistance, totalSize ) > dashSize ) {","		discard;","	}","	gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT","		float depth = gl_FragDepthEXT / gl_FragCoord.w;","	#else","		float depth = gl_FragCoord.z / gl_FragCoord.w;","	#endif","	float color = 1.0 - smoothstep( mNear, mFar, depth );","	gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:.98},reflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 specular;","uniform float shininess;","uniform float opacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float refractionRatio;","uniform float reflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","	uniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	gl_FragColor = vec4( vec3( 1.0 ), opacity );","	vec3 specularTex = vec3( 1.0 );","	vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","	normalTex.xy *= uNormalScale;","	normalTex = normalize( normalTex );","	if( enableDiffuse ) {","		#ifdef GAMMA_INPUT","			vec4 texelColor = texture2D( tDiffuse, vUv );","			texelColor.xyz *= texelColor.xyz;","			gl_FragColor = gl_FragColor * texelColor;","		#else","			gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","		#endif","	}","	if( enableAO ) {","		#ifdef GAMMA_INPUT","			vec4 aoColor = texture2D( tAO, vUv );","			aoColor.xyz *= aoColor.xyz;","			gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","		#else","			gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","		#endif","	}","	if( enableSpecular )","		specularTex = texture2D( tSpecular, vUv ).xyz;","	mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","	vec3 finalNormal = tsb * normalTex;","	#ifdef FLIP_SIDED","		finalNormal = -finalNormal;","	#endif","	vec3 normal = normalize( finalNormal );","	vec3 viewPosition = normalize( vViewPosition );","	#if MAX_POINT_LIGHTS > 0","		vec3 pointDiffuse = vec3( 0.0 );","		vec3 pointSpecular = vec3( 0.0 );","		for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","			vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","			vec3 pointVector = lPosition.xyz + vViewPosition.xyz;","			float pointDistance = 1.0;","			if ( pointLightDistance[ i ] > 0.0 )","				pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","			pointVector = normalize( pointVector );","			#ifdef WRAP_AROUND","				float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","				float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","				vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","			#else","				float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","			#endif","			pointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;","			vec3 pointHalfVector = normalize( pointVector + viewPosition );","			float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","			float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );","			float specularNormalization = ( shininess + 2.0001 ) / 8.0;","			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );","			pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","		}","	#endif","	#if MAX_SPOT_LIGHTS > 0","		vec3 spotDiffuse = vec3( 0.0 );","		vec3 spotSpecular = vec3( 0.0 );","		for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","			vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","			vec3 spotVector = lPosition.xyz + vViewPosition.xyz;","			float spotDistance = 1.0;","			if ( spotLightDistance[ i ] > 0.0 )","				spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","			spotVector = normalize( spotVector );","			float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","			if ( spotEffect > spotLightAngleCos[ i ] ) {","				spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","				#ifdef WRAP_AROUND","					float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","					float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","					vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","				#else","					float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","				#endif","				spotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;","				vec3 spotHalfVector = normalize( spotVector + viewPosition );","				float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","				float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );","				float specularNormalization = ( shininess + 2.0001 ) / 8.0;","				vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );","				spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","			}","		}","	#endif","	#if MAX_DIR_LIGHTS > 0","		vec3 dirDiffuse = vec3( 0.0 );","		vec3 dirSpecular = vec3( 0.0 );","		for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","			vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","			vec3 dirVector = normalize( lDirection.xyz );","			#ifdef WRAP_AROUND","				float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","				float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","				vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","			#else","				float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","			#endif","			dirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;","			vec3 dirHalfVector = normalize( dirVector + viewPosition );","			float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","			float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );","			float specularNormalization = ( shininess + 2.0001 ) / 8.0;","			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","			dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","		}","	#endif","	#if MAX_HEMI_LIGHTS > 0","		vec3 hemiDiffuse  = vec3( 0.0 );","		vec3 hemiSpecular = vec3( 0.0 );","		for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","			vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","			vec3 lVector = normalize( lDirection.xyz );","			float dotProduct = dot( normal, lVector );","			float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","			vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","			hemiDiffuse += diffuse * hemiColor;","			vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","			float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","			float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );","			vec3 lVectorGround = -lVector;","			vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","			float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","			float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );","			float dotProductGround = dot( normal, lVectorGround );","			float specularNormalization = ( shininess + 2.0001 ) / 8.0;","			vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","			vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","			hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","		}","	#endif","	vec3 totalDiffuse = vec3( 0.0 );","	vec3 totalSpecular = vec3( 0.0 );","	#if MAX_DIR_LIGHTS > 0","		totalDiffuse += dirDiffuse;","		totalSpecular += dirSpecular;","	#endif","	#if MAX_HEMI_LIGHTS > 0","		totalDiffuse += hemiDiffuse;","		totalSpecular += hemiSpecular;","	#endif","	#if MAX_POINT_LIGHTS > 0","		totalDiffuse += pointDiffuse;","		totalSpecular += pointSpecular;","	#endif","	#if MAX_SPOT_LIGHTS > 0","		totalDiffuse += spotDiffuse;","		totalSpecular += spotSpecular;","	#endif","	#ifdef METAL","		gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );","	#else","		gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","	#endif","	if ( enableReflection ) {","		vec3 vReflect;","		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","		if ( useRefract ) {","			vReflect = refract( cameraToVertex, normal, refractionRatio );","		} else {","			vReflect = reflect( cameraToVertex, normal );","		}","		vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","		#ifdef GAMMA_INPUT","			cubeColor.xyz *= cubeColor.xyz;","		#endif","		gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );","	}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","	uniform sampler2D tDisplacement;","	uniform float uDisplacementScale;","	uniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"	#ifdef USE_SKINNING","		vNormal = normalize( normalMatrix * skinnedNormal.xyz );","		vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","		vTangent = normalize( normalMatrix * skinnedTangent.xyz );","	#else","		vNormal = normalize( normalMatrix * normal );","		vTangent = normalize( normalMatrix * tangent.xyz );","	#endif","	vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );","	vUv = uv * uRepeat + uOffset;","	vec3 displacedPosition;","	#ifdef VERTEX_TEXTURES","		if ( enableDisplacement ) {","			vec3 dv = texture2D( tDisplacement, uv ).xyz;","			float df = uDisplacementScale * dv.x + uDisplacementBias;","			displacedPosition = position + normalize( normal ) * df;","		} else {","			#ifdef USE_SKINNING","				vec4 skinVertex = vec4( position, 1.0 );","				vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","				skinned 	  += boneMatY * skinVertex * skinWeight.y;","				skinned 	  += boneMatZ * skinVertex * skinWeight.z;","				skinned 	  += boneMatW * skinVertex * skinWeight.w;","				displacedPosition  = skinned.xyz;","			#else","				displacedPosition = position;","			#endif","		}","	#else","		#ifdef USE_SKINNING","			vec4 skinVertex = vec4( position, 1.0 );","			vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","			skinned 	  += boneMatY * skinVertex * skinWeight.y;","			skinned 	  += boneMatZ * skinVertex * skinWeight.z;","			skinned 	  += boneMatW * skinVertex * skinWeight.w;","			displacedPosition  = skinned.xyz;","		#else","			displacedPosition = position;","		#endif","	#endif","	vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","	vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );","	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"	vWorldPosition = worldPosition.xyz;","	vViewPosition = -mvPosition.xyz;","	#ifdef USE_SHADOWMAP","		for( int i = 0; i < MAX_SHADOWS; i ++ ) {","			vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","		}","	#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","	vWorldPosition = worldPosition.xyz;","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {","	const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","	const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","	vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );","	res -= res.xxyz * bit_mask;","	return res;","}","void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT","		gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );","	#else","		gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","	#endif","}"].join("\n")}},THREE.WebGLRenderer=function(t){function e(t){t.__webglVertexBuffer=ze.createBuffer(),t.__webglColorBuffer=ze.createBuffer(),Be.info.memory.geometries++}function i(t){t.__webglVertexBuffer=ze.createBuffer(),t.__webglColorBuffer=ze.createBuffer(),t.__webglLineDistanceBuffer=ze.createBuffer(),Be.info.memory.geometries++}function r(t){t.__webglVertexBuffer=ze.createBuffer(),t.__webglNormalBuffer=ze.createBuffer(),t.__webglTangentBuffer=ze.createBuffer(),t.__webglColorBuffer=ze.createBuffer(),t.__webglUVBuffer=ze.createBuffer(),t.__webglUV2Buffer=ze.createBuffer(),t.__webglSkinIndicesBuffer=ze.createBuffer(),t.__webglSkinWeightsBuffer=ze.createBuffer(),t.__webglFaceBuffer=ze.createBuffer(),t.__webglLineBuffer=ze.createBuffer();var e,i;if(t.numMorphTargets)for(t.__webglMorphTargetsBuffers=[],e=0,i=t.numMorphTargets;i>e;e++)t.__webglMorphTargetsBuffers.push(ze.createBuffer());if(t.numMorphNormals)for(t.__webglMorphNormalsBuffers=[],e=0,i=t.numMorphNormals;i>e;e++)t.__webglMorphNormalsBuffers.push(ze.createBuffer());Be.info.memory.geometries++}function n(t,e){var i=t.vertices.length,r=e.material;if(r.attributes){void 0===t.__webglCustomAttributesList&&(t.__webglCustomAttributesList=[]);for(var n in r.attributes){var o=r.attributes[n];if(!o.__webglInitialized||o.createUniqueBuffers){o.__webglInitialized=!0;var a=1;"v2"===o.type?a=2:"v3"===o.type?a=3:"v4"===o.type?a=4:"c"===o.type&&(a=3),o.size=a,o.array=new Float32Array(i*a),o.buffer=ze.createBuffer(),o.buffer.belongsToAttribute=n,o.needsUpdate=!0}t.__webglCustomAttributesList.push(o)}}}function o(t,e){var i=t.vertices.length;t.__vertexArray=new Float32Array(3*i),t.__colorArray=new Float32Array(3*i),t.__sortArray=[],t.__webglParticleCount=i,n(t,e)}function a(t,e){var i=t.vertices.length;t.__vertexArray=new Float32Array(3*i),t.__colorArray=new Float32Array(3*i),t.__lineDistanceArray=new Float32Array(1*i),t.__webglLineCount=i,n(t,e)}function s(t,e){var i=e.geometry,r=t.faces3,n=3*r.length,o=1*r.length,a=3*r.length,s=h(e,t),l=f(s),d=c(s),p=u(s);t.__vertexArray=new Float32Array(3*n),d&&(t.__normalArray=new Float32Array(3*n)),i.hasTangents&&(t.__tangentArray=new Float32Array(4*n)),p&&(t.__colorArray=new Float32Array(3*n)),l&&(i.faceVertexUvs.length>0&&(t.__uvArray=new Float32Array(2*n)),i.faceVertexUvs.length>1&&(t.__uv2Array=new Float32Array(2*n))),e.geometry.skinWeights.length&&e.geometry.skinIndices.length&&(t.__skinIndexArray=new Float32Array(4*n),t.__skinWeightArray=new Float32Array(4*n));var E=null!==Ue&&o>21845?Uint32Array:Uint16Array;t.__typeArray=E,t.__faceArray=new E(3*o),t.__lineArray=new E(2*a);var m,y;if(t.numMorphTargets)for(t.__morphTargetsArrays=[],m=0,y=t.numMorphTargets;y>m;m++)t.__morphTargetsArrays.push(new Float32Array(3*n));if(t.numMorphNormals)for(t.__morphNormalsArrays=[],m=0,y=t.numMorphNormals;y>m;m++)t.__morphNormalsArrays.push(new Float32Array(3*n));if(t.__webglFaceCount=3*o,t.__webglLineCount=2*a,s.attributes){void 0===t.__webglCustomAttributesList&&(t.__webglCustomAttributesList=[]);
for(var v in s.attributes){var g=s.attributes[v],x={};for(var T in g)x[T]=g[T];if(!x.__webglInitialized||x.createUniqueBuffers){x.__webglInitialized=!0;var R=1;"v2"===x.type?R=2:"v3"===x.type?R=3:"v4"===x.type?R=4:"c"===x.type&&(R=3),x.size=R,x.array=new Float32Array(n*R),x.buffer=ze.createBuffer(),x.buffer.belongsToAttribute=v,g.needsUpdate=!0,x.__original=g}t.__webglCustomAttributesList.push(x)}}t.__inittedArrays=!0}function h(t,e){return t.material instanceof THREE.MeshFaceMaterial?t.material.materials[e.materialIndex]:t.material}function l(t){return t&&void 0!==t.shading&&t.shading===THREE.SmoothShading}function c(t){return t instanceof THREE.MeshBasicMaterial&&!t.envMap||t instanceof THREE.MeshDepthMaterial?!1:l(t)?THREE.SmoothShading:THREE.FlatShading}function u(t){return t.vertexColors?t.vertexColors:!1}function f(t){return t.map||t.lightMap||t.bumpMap||t.normalMap||t.specularMap||t instanceof THREE.ShaderMaterial?!0:!1}function d(t){for(var e in t.attributes){var i="index"===e?ze.ELEMENT_ARRAY_BUFFER:ze.ARRAY_BUFFER,r=t.attributes[e];r.buffer=ze.createBuffer(),ze.bindBuffer(i,r.buffer),ze.bufferData(i,r.array,ze.STATIC_DRAW)}}function p(t,e,i){var r,n,o,a,s,h,l,c,u,f,d,p,E=t.vertices,m=E.length,y=t.colors,v=y.length,g=t.__vertexArray,x=t.__colorArray,T=t.__sortArray,R=t.verticesNeedUpdate,_=(t.elementsNeedUpdate,t.colorsNeedUpdate),w=t.__webglCustomAttributesList;if(i.sortParticles){for(Ei.copy(pi),Ei.multiply(i.matrixWorld),r=0;m>r;r++)o=E[r],mi.copy(o),mi.applyProjection(Ei),T[r]=[mi.z,r];for(T.sort(b),r=0;m>r;r++)o=E[T[r][1]],a=3*r,g[a]=o.x,g[a+1]=o.y,g[a+2]=o.z;for(n=0;v>n;n++)a=3*n,h=y[T[n][1]],x[a]=h.r,x[a+1]=h.g,x[a+2]=h.b;if(w)for(l=0,c=w.length;c>l;l++)if(p=w[l],void 0===p.boundTo||"vertices"===p.boundTo)if(a=0,f=p.value.length,1===p.size)for(u=0;f>u;u++)s=T[u][1],p.array[u]=p.value[s];else if(2===p.size)for(u=0;f>u;u++)s=T[u][1],d=p.value[s],p.array[a]=d.x,p.array[a+1]=d.y,a+=2;else if(3===p.size)if("c"===p.type)for(u=0;f>u;u++)s=T[u][1],d=p.value[s],p.array[a]=d.r,p.array[a+1]=d.g,p.array[a+2]=d.b,a+=3;else for(u=0;f>u;u++)s=T[u][1],d=p.value[s],p.array[a]=d.x,p.array[a+1]=d.y,p.array[a+2]=d.z,a+=3;else if(4===p.size)for(u=0;f>u;u++)s=T[u][1],d=p.value[s],p.array[a]=d.x,p.array[a+1]=d.y,p.array[a+2]=d.z,p.array[a+3]=d.w,a+=4}else{if(R)for(r=0;m>r;r++)o=E[r],a=3*r,g[a]=o.x,g[a+1]=o.y,g[a+2]=o.z;if(_)for(n=0;v>n;n++)h=y[n],a=3*n,x[a]=h.r,x[a+1]=h.g,x[a+2]=h.b;if(w)for(l=0,c=w.length;c>l;l++)if(p=w[l],p.needsUpdate&&(void 0===p.boundTo||"vertices"===p.boundTo))if(f=p.value.length,a=0,1===p.size)for(u=0;f>u;u++)p.array[u]=p.value[u];else if(2===p.size)for(u=0;f>u;u++)d=p.value[u],p.array[a]=d.x,p.array[a+1]=d.y,a+=2;else if(3===p.size)if("c"===p.type)for(u=0;f>u;u++)d=p.value[u],p.array[a]=d.r,p.array[a+1]=d.g,p.array[a+2]=d.b,a+=3;else for(u=0;f>u;u++)d=p.value[u],p.array[a]=d.x,p.array[a+1]=d.y,p.array[a+2]=d.z,a+=3;else if(4===p.size)for(u=0;f>u;u++)d=p.value[u],p.array[a]=d.x,p.array[a+1]=d.y,p.array[a+2]=d.z,p.array[a+3]=d.w,a+=4}if((R||i.sortParticles)&&(ze.bindBuffer(ze.ARRAY_BUFFER,t.__webglVertexBuffer),ze.bufferData(ze.ARRAY_BUFFER,g,e)),(_||i.sortParticles)&&(ze.bindBuffer(ze.ARRAY_BUFFER,t.__webglColorBuffer),ze.bufferData(ze.ARRAY_BUFFER,x,e)),w)for(l=0,c=w.length;c>l;l++)p=w[l],(p.needsUpdate||i.sortParticles)&&(ze.bindBuffer(ze.ARRAY_BUFFER,p.buffer),ze.bufferData(ze.ARRAY_BUFFER,p.array,e))}function E(t,e){var i,r,n,o,a,s,h,l,c,u,f,d,p=t.vertices,E=t.colors,m=t.lineDistances,y=p.length,v=E.length,g=m.length,x=t.__vertexArray,T=t.__colorArray,R=t.__lineDistanceArray,_=t.verticesNeedUpdate,b=t.colorsNeedUpdate,w=t.lineDistancesNeedUpdate,H=t.__webglCustomAttributesList;if(_){for(i=0;y>i;i++)o=p[i],a=3*i,x[a]=o.x,x[a+1]=o.y,x[a+2]=o.z;ze.bindBuffer(ze.ARRAY_BUFFER,t.__webglVertexBuffer),ze.bufferData(ze.ARRAY_BUFFER,x,e)}if(b){for(r=0;v>r;r++)s=E[r],a=3*r,T[a]=s.r,T[a+1]=s.g,T[a+2]=s.b;ze.bindBuffer(ze.ARRAY_BUFFER,t.__webglColorBuffer),ze.bufferData(ze.ARRAY_BUFFER,T,e)}if(w){for(n=0;g>n;n++)R[n]=m[n];ze.bindBuffer(ze.ARRAY_BUFFER,t.__webglLineDistanceBuffer),ze.bufferData(ze.ARRAY_BUFFER,R,e)}if(H)for(h=0,l=H.length;l>h;h++)if(d=H[h],d.needsUpdate&&(void 0===d.boundTo||"vertices"===d.boundTo)){if(a=0,u=d.value.length,1===d.size)for(c=0;u>c;c++)d.array[c]=d.value[c];else if(2===d.size)for(c=0;u>c;c++)f=d.value[c],d.array[a]=f.x,d.array[a+1]=f.y,a+=2;else if(3===d.size)if("c"===d.type)for(c=0;u>c;c++)f=d.value[c],d.array[a]=f.r,d.array[a+1]=f.g,d.array[a+2]=f.b,a+=3;else for(c=0;u>c;c++)f=d.value[c],d.array[a]=f.x,d.array[a+1]=f.y,d.array[a+2]=f.z,a+=3;else if(4===d.size)for(c=0;u>c;c++)f=d.value[c],d.array[a]=f.x,d.array[a+1]=f.y,d.array[a+2]=f.z,d.array[a+3]=f.w,a+=4;ze.bindBuffer(ze.ARRAY_BUFFER,d.buffer),ze.bufferData(ze.ARRAY_BUFFER,d.array,e)}}function m(t,e,i,r,n){if(t.__inittedArrays){var o,a,s,h,l,d,p,E,m,y,v,g,x,T,R,_,b,w,H,M,S,A,C,z,D,F,P,L,V,U,O,B,N,k,j,I,W,G,X,q,Y,Z,Q=c(n),K=u(n),$=f(n),J=Q===THREE.SmoothShading,te=0,ee=0,ie=0,re=0,ne=0,oe=0,ae=0,se=0,he=0,le=0,ce=0,ue=0,fe=0,de=t.__vertexArray,pe=t.__uvArray,Ee=t.__uv2Array,me=t.__normalArray,ye=t.__tangentArray,ve=t.__colorArray,ge=t.__skinIndexArray,xe=t.__skinWeightArray,Te=t.__morphTargetsArrays,Re=t.__morphNormalsArrays,_e=t.__webglCustomAttributesList,be=t.__faceArray,we=t.__lineArray,He=e.geometry,Me=He.verticesNeedUpdate,Se=He.elementsNeedUpdate,Ae=He.uvsNeedUpdate,Ce=He.normalsNeedUpdate,De=He.tangentsNeedUpdate,Fe=He.colorsNeedUpdate,Pe=He.morphTargetsNeedUpdate,Le=He.vertices,Ve=t.faces3,Ue=He.faces,Oe=He.faceVertexUvs[0],Be=He.faceVertexUvs[1],Ne=(He.colors,He.skinIndices),ke=He.skinWeights,je=He.morphTargets,Ie=He.morphNormals;if(Me){for(o=0,a=Ve.length;a>o;o++)h=Ue[Ve[o]],g=Le[h.a],x=Le[h.b],T=Le[h.c],de[ee]=g.x,de[ee+1]=g.y,de[ee+2]=g.z,de[ee+3]=x.x,de[ee+4]=x.y,de[ee+5]=x.z,de[ee+6]=T.x,de[ee+7]=T.y,de[ee+8]=T.z,ee+=9;ze.bindBuffer(ze.ARRAY_BUFFER,t.__webglVertexBuffer),ze.bufferData(ze.ARRAY_BUFFER,de,i)}if(Pe)for(j=0,I=je.length;I>j;j++){for(ce=0,o=0,a=Ve.length;a>o;o++)X=Ve[o],h=Ue[X],g=je[j].vertices[h.a],x=je[j].vertices[h.b],T=je[j].vertices[h.c],W=Te[j],W[ce]=g.x,W[ce+1]=g.y,W[ce+2]=g.z,W[ce+3]=x.x,W[ce+4]=x.y,W[ce+5]=x.z,W[ce+6]=T.x,W[ce+7]=T.y,W[ce+8]=T.z,n.morphNormals&&(J?(q=Ie[j].vertexNormals[X],w=q.a,H=q.b,M=q.c):(w=Ie[j].faceNormals[X],H=w,M=w),G=Re[j],G[ce]=w.x,G[ce+1]=w.y,G[ce+2]=w.z,G[ce+3]=H.x,G[ce+4]=H.y,G[ce+5]=H.z,G[ce+6]=M.x,G[ce+7]=M.y,G[ce+8]=M.z),ce+=9;ze.bindBuffer(ze.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[j]),ze.bufferData(ze.ARRAY_BUFFER,Te[j],i),n.morphNormals&&(ze.bindBuffer(ze.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[j]),ze.bufferData(ze.ARRAY_BUFFER,Re[j],i))}if(ke.length){for(o=0,a=Ve.length;a>o;o++)h=Ue[Ve[o]],z=ke[h.a],D=ke[h.b],F=ke[h.c],xe[le]=z.x,xe[le+1]=z.y,xe[le+2]=z.z,xe[le+3]=z.w,xe[le+4]=D.x,xe[le+5]=D.y,xe[le+6]=D.z,xe[le+7]=D.w,xe[le+8]=F.x,xe[le+9]=F.y,xe[le+10]=F.z,xe[le+11]=F.w,P=Ne[h.a],L=Ne[h.b],V=Ne[h.c],ge[le]=P.x,ge[le+1]=P.y,ge[le+2]=P.z,ge[le+3]=P.w,ge[le+4]=L.x,ge[le+5]=L.y,ge[le+6]=L.z,ge[le+7]=L.w,ge[le+8]=V.x,ge[le+9]=V.y,ge[le+10]=V.z,ge[le+11]=V.w,le+=12;le>0&&(ze.bindBuffer(ze.ARRAY_BUFFER,t.__webglSkinIndicesBuffer),ze.bufferData(ze.ARRAY_BUFFER,ge,i),ze.bindBuffer(ze.ARRAY_BUFFER,t.__webglSkinWeightsBuffer),ze.bufferData(ze.ARRAY_BUFFER,xe,i))}if(Fe&&K){for(o=0,a=Ve.length;a>o;o++)h=Ue[Ve[o]],p=h.vertexColors,E=h.color,3===p.length&&K===THREE.VertexColors?(S=p[0],A=p[1],C=p[2]):(S=E,A=E,C=E),ve[he]=S.r,ve[he+1]=S.g,ve[he+2]=S.b,ve[he+3]=A.r,ve[he+4]=A.g,ve[he+5]=A.b,ve[he+6]=C.r,ve[he+7]=C.g,ve[he+8]=C.b,he+=9;he>0&&(ze.bindBuffer(ze.ARRAY_BUFFER,t.__webglColorBuffer),ze.bufferData(ze.ARRAY_BUFFER,ve,i))}if(De&&He.hasTangents){for(o=0,a=Ve.length;a>o;o++)h=Ue[Ve[o]],m=h.vertexTangents,R=m[0],_=m[1],b=m[2],ye[ae]=R.x,ye[ae+1]=R.y,ye[ae+2]=R.z,ye[ae+3]=R.w,ye[ae+4]=_.x,ye[ae+5]=_.y,ye[ae+6]=_.z,ye[ae+7]=_.w,ye[ae+8]=b.x,ye[ae+9]=b.y,ye[ae+10]=b.z,ye[ae+11]=b.w,ae+=12;ze.bindBuffer(ze.ARRAY_BUFFER,t.__webglTangentBuffer),ze.bufferData(ze.ARRAY_BUFFER,ye,i)}if(Ce&&Q){for(o=0,a=Ve.length;a>o;o++)if(h=Ue[Ve[o]],l=h.vertexNormals,d=h.normal,3===l.length&&J)for(U=0;3>U;U++)B=l[U],me[oe]=B.x,me[oe+1]=B.y,me[oe+2]=B.z,oe+=3;else for(U=0;3>U;U++)me[oe]=d.x,me[oe+1]=d.y,me[oe+2]=d.z,oe+=3;ze.bindBuffer(ze.ARRAY_BUFFER,t.__webglNormalBuffer),ze.bufferData(ze.ARRAY_BUFFER,me,i)}if(Ae&&Oe&&$){for(o=0,a=Ve.length;a>o;o++)if(s=Ve[o],y=Oe[s],void 0!==y)for(U=0;3>U;U++)N=y[U],pe[ie]=N.x,pe[ie+1]=N.y,ie+=2;ie>0&&(ze.bindBuffer(ze.ARRAY_BUFFER,t.__webglUVBuffer),ze.bufferData(ze.ARRAY_BUFFER,pe,i))}if(Ae&&Be&&$){for(o=0,a=Ve.length;a>o;o++)if(s=Ve[o],v=Be[s],void 0!==v)for(U=0;3>U;U++)k=v[U],Ee[re]=k.x,Ee[re+1]=k.y,re+=2;re>0&&(ze.bindBuffer(ze.ARRAY_BUFFER,t.__webglUV2Buffer),ze.bufferData(ze.ARRAY_BUFFER,Ee,i))}if(Se){for(o=0,a=Ve.length;a>o;o++)be[ne]=te,be[ne+1]=te+1,be[ne+2]=te+2,ne+=3,we[se]=te,we[se+1]=te+1,we[se+2]=te,we[se+3]=te+2,we[se+4]=te+1,we[se+5]=te+2,se+=6,te+=3;ze.bindBuffer(ze.ELEMENT_ARRAY_BUFFER,t.__webglFaceBuffer),ze.bufferData(ze.ELEMENT_ARRAY_BUFFER,be,i),ze.bindBuffer(ze.ELEMENT_ARRAY_BUFFER,t.__webglLineBuffer),ze.bufferData(ze.ELEMENT_ARRAY_BUFFER,we,i)}if(_e)for(U=0,O=_e.length;O>U;U++)if(Z=_e[U],Z.__original.needsUpdate){if(ue=0,fe=0,1===Z.size){if(void 0===Z.boundTo||"vertices"===Z.boundTo)for(o=0,a=Ve.length;a>o;o++)h=Ue[Ve[o]],Z.array[ue]=Z.value[h.a],Z.array[ue+1]=Z.value[h.b],Z.array[ue+2]=Z.value[h.c],ue+=3;else if("faces"===Z.boundTo)for(o=0,a=Ve.length;a>o;o++)Y=Z.value[Ve[o]],Z.array[ue]=Y,Z.array[ue+1]=Y,Z.array[ue+2]=Y,ue+=3}else if(2===Z.size){if(void 0===Z.boundTo||"vertices"===Z.boundTo)for(o=0,a=Ve.length;a>o;o++)h=Ue[Ve[o]],g=Z.value[h.a],x=Z.value[h.b],T=Z.value[h.c],Z.array[ue]=g.x,Z.array[ue+1]=g.y,Z.array[ue+2]=x.x,Z.array[ue+3]=x.y,Z.array[ue+4]=T.x,Z.array[ue+5]=T.y,ue+=6;else if("faces"===Z.boundTo)for(o=0,a=Ve.length;a>o;o++)Y=Z.value[Ve[o]],g=Y,x=Y,T=Y,Z.array[ue]=g.x,Z.array[ue+1]=g.y,Z.array[ue+2]=x.x,Z.array[ue+3]=x.y,Z.array[ue+4]=T.x,Z.array[ue+5]=T.y,ue+=6}else if(3===Z.size){var We;if(We="c"===Z.type?["r","g","b"]:["x","y","z"],void 0===Z.boundTo||"vertices"===Z.boundTo)for(o=0,a=Ve.length;a>o;o++)h=Ue[Ve[o]],g=Z.value[h.a],x=Z.value[h.b],T=Z.value[h.c],Z.array[ue]=g[We[0]],Z.array[ue+1]=g[We[1]],Z.array[ue+2]=g[We[2]],Z.array[ue+3]=x[We[0]],Z.array[ue+4]=x[We[1]],Z.array[ue+5]=x[We[2]],Z.array[ue+6]=T[We[0]],Z.array[ue+7]=T[We[1]],Z.array[ue+8]=T[We[2]],ue+=9;else if("faces"===Z.boundTo)for(o=0,a=Ve.length;a>o;o++)Y=Z.value[Ve[o]],g=Y,x=Y,T=Y,Z.array[ue]=g[We[0]],Z.array[ue+1]=g[We[1]],Z.array[ue+2]=g[We[2]],Z.array[ue+3]=x[We[0]],Z.array[ue+4]=x[We[1]],Z.array[ue+5]=x[We[2]],Z.array[ue+6]=T[We[0]],Z.array[ue+7]=T[We[1]],Z.array[ue+8]=T[We[2]],ue+=9;else if("faceVertices"===Z.boundTo)for(o=0,a=Ve.length;a>o;o++)Y=Z.value[Ve[o]],g=Y[0],x=Y[1],T=Y[2],Z.array[ue]=g[We[0]],Z.array[ue+1]=g[We[1]],Z.array[ue+2]=g[We[2]],Z.array[ue+3]=x[We[0]],Z.array[ue+4]=x[We[1]],Z.array[ue+5]=x[We[2]],Z.array[ue+6]=T[We[0]],Z.array[ue+7]=T[We[1]],Z.array[ue+8]=T[We[2]],ue+=9}else if(4===Z.size)if(void 0===Z.boundTo||"vertices"===Z.boundTo)for(o=0,a=Ve.length;a>o;o++)h=Ue[Ve[o]],g=Z.value[h.a],x=Z.value[h.b],T=Z.value[h.c],Z.array[ue]=g.x,Z.array[ue+1]=g.y,Z.array[ue+2]=g.z,Z.array[ue+3]=g.w,Z.array[ue+4]=x.x,Z.array[ue+5]=x.y,Z.array[ue+6]=x.z,Z.array[ue+7]=x.w,Z.array[ue+8]=T.x,Z.array[ue+9]=T.y,Z.array[ue+10]=T.z,Z.array[ue+11]=T.w,ue+=12;else if("faces"===Z.boundTo)for(o=0,a=Ve.length;a>o;o++)Y=Z.value[Ve[o]],g=Y,x=Y,T=Y,Z.array[ue]=g.x,Z.array[ue+1]=g.y,Z.array[ue+2]=g.z,Z.array[ue+3]=g.w,Z.array[ue+4]=x.x,Z.array[ue+5]=x.y,Z.array[ue+6]=x.z,Z.array[ue+7]=x.w,Z.array[ue+8]=T.x,Z.array[ue+9]=T.y,Z.array[ue+10]=T.z,Z.array[ue+11]=T.w,ue+=12;else if("faceVertices"===Z.boundTo)for(o=0,a=Ve.length;a>o;o++)Y=Z.value[Ve[o]],g=Y[0],x=Y[1],T=Y[2],Z.array[ue]=g.x,Z.array[ue+1]=g.y,Z.array[ue+2]=g.z,Z.array[ue+3]=g.w,Z.array[ue+4]=x.x,Z.array[ue+5]=x.y,Z.array[ue+6]=x.z,Z.array[ue+7]=x.w,Z.array[ue+8]=T.x,Z.array[ue+9]=T.y,Z.array[ue+10]=T.z,Z.array[ue+11]=T.w,ue+=12;ze.bindBuffer(ze.ARRAY_BUFFER,Z.buffer),ze.bufferData(ze.ARRAY_BUFFER,Z.array,i)}r&&(delete t.__inittedArrays,delete t.__colorArray,delete t.__normalArray,delete t.__tangentArray,delete t.__uvArray,delete t.__uv2Array,delete t.__faceArray,delete t.__vertexArray,delete t.__lineArray,delete t.__skinIndexArray,delete t.__skinWeightArray)}}function y(t,e){var i,r,n=t.attributes;for(i in n)r=n[i],r.needsUpdate&&("index"===i?(ze.bindBuffer(ze.ELEMENT_ARRAY_BUFFER,r.buffer),ze.bufferData(ze.ELEMENT_ARRAY_BUFFER,r.array,e)):(ze.bindBuffer(ze.ARRAY_BUFFER,r.buffer),ze.bufferData(ze.ARRAY_BUFFER,r.array,e)),r.needsUpdate=!1)}function v(t,e,i,r){for(var n in e){var o=e[n],a=i[n];if(o>=0)if(a){var s=a.itemSize;ze.bindBuffer(ze.ARRAY_BUFFER,a.buffer),x(o),ze.vertexAttribPointer(o,s,ze.FLOAT,!1,0,r*s*4)}else t.defaultAttributeValues&&(2===t.defaultAttributeValues[n].length?ze.vertexAttrib2fv(o,t.defaultAttributeValues[n]):3===t.defaultAttributeValues[n].length&&ze.vertexAttrib3fv(o,t.defaultAttributeValues[n]))}T()}function g(){for(var t=0,e=ui.length;e>t;t++)ui[t]=0}function x(t){ui[t]=1,0===fi[t]&&(ze.enableVertexAttribArray(t),fi[t]=1)}function T(){for(var t=0,e=fi.length;e>t;t++)fi[t]!==ui[t]&&(ze.disableVertexAttribArray(t),fi[t]=0)}function R(t,e,i){var r=t.program.attributes;if(-1!==i.morphTargetBase&&r.position>=0?(ze.bindBuffer(ze.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[i.morphTargetBase]),x(r.position),ze.vertexAttribPointer(r.position,3,ze.FLOAT,!1,0,0)):r.position>=0&&(ze.bindBuffer(ze.ARRAY_BUFFER,e.__webglVertexBuffer),x(r.position),ze.vertexAttribPointer(r.position,3,ze.FLOAT,!1,0,0)),i.morphTargetForcedOrder.length)for(var n=0,o=i.morphTargetForcedOrder,a=i.morphTargetInfluences;n<t.numSupportedMorphTargets&&n<o.length;)r["morphTarget"+n]>=0&&(ze.bindBuffer(ze.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[o[n]]),x(r["morphTarget"+n]),ze.vertexAttribPointer(r["morphTarget"+n],3,ze.FLOAT,!1,0,0)),r["morphNormal"+n]>=0&&t.morphNormals&&(ze.bindBuffer(ze.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[o[n]]),x(r["morphNormal"+n]),ze.vertexAttribPointer(r["morphNormal"+n],3,ze.FLOAT,!1,0,0)),i.__webglMorphTargetInfluences[n]=a[o[n]],n++;else{var s,h,l=[],a=i.morphTargetInfluences,c=a.length;for(h=0;c>h;h++)s=a[h],s>0&&l.push([s,h]);l.length>t.numSupportedMorphTargets?(l.sort(b),l.length=t.numSupportedMorphTargets):l.length>t.numSupportedMorphNormals?l.sort(b):0===l.length&&l.push([0,0]);for(var u,n=0;n<t.numSupportedMorphTargets;)l[n]?(u=l[n][1],r["morphTarget"+n]>=0&&(ze.bindBuffer(ze.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[u]),x(r["morphTarget"+n]),ze.vertexAttribPointer(r["morphTarget"+n],3,ze.FLOAT,!1,0,0)),r["morphNormal"+n]>=0&&t.morphNormals&&(ze.bindBuffer(ze.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[u]),x(r["morphNormal"+n]),ze.vertexAttribPointer(r["morphNormal"+n],3,ze.FLOAT,!1,0,0)),i.__webglMorphTargetInfluences[n]=a[u]):i.__webglMorphTargetInfluences[n]=0,n++}null!==t.program.uniforms.morphTargetInfluences&&ze.uniform1fv(t.program.uniforms.morphTargetInfluences,i.__webglMorphTargetInfluences)}function _(t,e){return t.z!==e.z?e.z-t.z:t.id-e.id}function b(t,e){return e[0]-t[0]}function w(t,e,i){if(t.length)for(var r=0,n=t.length;n>r;r++)ke=null,Ge=null,Ze=-1,Je=-1,ti=-1,qe=-1,Ye=-1,We=-1,Ie=-1,vi=!0,t[r].render(e,i,li,ci),ke=null,Ge=null,Ze=-1,Je=-1,ti=-1,qe=-1,Ye=-1,We=-1,Ie=-1,vi=!0}function H(t,e,i,r,n,o,a,s){var h,l,c,u,f,d,p;e?(f=t.length-1,d=-1,p=-1):(f=0,d=t.length,p=1);for(var E=f;E!==d;E+=p)if(h=t[E],h.render){if(l=h.object,c=h.buffer,s)u=s;else{if(u=h[i],!u)continue;a&&Be.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst),Be.setDepthTest(u.depthTest),Be.setDepthWrite(u.depthWrite),ne(u.polygonOffset,u.polygonOffsetFactor,u.polygonOffsetUnits)}Be.setMaterialFaces(u),c instanceof THREE.BufferGeometry?Be.renderBufferDirect(r,n,o,u,c,l):Be.renderBuffer(r,n,o,u,c,l)}}function M(t,e,i,r,n,o,a){for(var s,h,l,c=0,u=t.length;u>c;c++)if(s=t[c],h=s.object,h.visible){if(a)l=a;else{if(l=s[e],!l)continue;o&&Be.setBlending(l.blending,l.blendEquation,l.blendSrc,l.blendDst),Be.setDepthTest(l.depthTest),Be.setDepthWrite(l.depthWrite),ne(l.polygonOffset,l.polygonOffsetFactor,l.polygonOffsetUnits)}Be.renderImmediateObject(i,r,n,l,h)}}function S(t){var e=t.object,i=e.material;i.transparent?(t.transparent=i,t.opaque=null):(t.opaque=i,t.transparent=null)}function A(t){var e=t.object,i=t.buffer,r=e.geometry,n=e.material;if(n instanceof THREE.MeshFaceMaterial){var o=r instanceof THREE.BufferGeometry?0:i.materialIndex;n=n.materials[o],n.transparent?(t.transparent=n,t.opaque=null):(t.opaque=n,t.transparent=null)}else n&&(n.transparent?(t.transparent=n,t.opaque=null):(t.opaque=n,t.transparent=null))}function C(t,n){var h,l,c,u;if(void 0===t.__webglInit)if(t.__webglInit=!0,t._modelViewMatrix=new THREE.Matrix4,t._normalMatrix=new THREE.Matrix3,l=t.geometry,void 0===l);else if(void 0===l.__webglInit)if(l.__webglInit=!0,l.addEventListener("dispose",Di),l instanceof THREE.BufferGeometry)d(l);else if(t instanceof THREE.Mesh){c=t.material,void 0===l.geometryGroups&&l.makeGroups(c instanceof THREE.MeshFaceMaterial,Ue?4294967296:65535);for(h in l.geometryGroups)u=l.geometryGroups[h],u.__webglVertexBuffer||(r(u),s(u,t),l.verticesNeedUpdate=!0,l.morphTargetsNeedUpdate=!0,l.elementsNeedUpdate=!0,l.uvsNeedUpdate=!0,l.normalsNeedUpdate=!0,l.tangentsNeedUpdate=!0,l.colorsNeedUpdate=!0)}else t instanceof THREE.Line?l.__webglVertexBuffer||(i(l),a(l,t),l.verticesNeedUpdate=!0,l.colorsNeedUpdate=!0,l.lineDistancesNeedUpdate=!0):t instanceof THREE.ParticleSystem&&(l.__webglVertexBuffer||(e(l),o(l,t),l.verticesNeedUpdate=!0,l.colorsNeedUpdate=!0));if(void 0===t.__webglActive){if(t instanceof THREE.Mesh){if(l=t.geometry,l instanceof THREE.BufferGeometry)z(n.__webglObjects,l,t);else if(l instanceof THREE.Geometry)for(h in l.geometryGroups)u=l.geometryGroups[h],z(n.__webglObjects,u,t)}else t instanceof THREE.Line||t instanceof THREE.ParticleSystem?(l=t.geometry,z(n.__webglObjects,l,t)):t instanceof THREE.ImmediateRenderObject||t.immediateRenderCallback?D(n.__webglObjectsImmediate,t):t instanceof THREE.Sprite?n.__webglSprites.push(t):t instanceof THREE.LensFlare&&n.__webglFlares.push(t);t.__webglActive=!0}}function z(t,e,i){t.push({id:null,buffer:e,object:i,opaque:null,transparent:null,z:0})}function D(t,e){t.push({id:null,object:e,opaque:null,transparent:null,z:0})}function F(t){var e,i,r,n=t.geometry;if(n instanceof THREE.BufferGeometry)y(n,ze.DYNAMIC_DRAW);else if(t instanceof THREE.Mesh){for(var o=0,a=n.geometryGroupsList.length;a>o;o++)e=n.geometryGroupsList[o],r=h(t,e),n.buffersNeedUpdate&&s(e,t),i=r.attributes&&P(r),(n.verticesNeedUpdate||n.morphTargetsNeedUpdate||n.elementsNeedUpdate||n.uvsNeedUpdate||n.normalsNeedUpdate||n.colorsNeedUpdate||n.tangentsNeedUpdate||i)&&m(e,t,ze.DYNAMIC_DRAW,!n.dynamic,r);n.verticesNeedUpdate=!1,n.morphTargetsNeedUpdate=!1,n.elementsNeedUpdate=!1,n.uvsNeedUpdate=!1,n.normalsNeedUpdate=!1,n.colorsNeedUpdate=!1,n.tangentsNeedUpdate=!1,n.buffersNeedUpdate=!1,r.attributes&&L(r)}else t instanceof THREE.Line?(r=h(t,n),i=r.attributes&&P(r),(n.verticesNeedUpdate||n.colorsNeedUpdate||n.lineDistancesNeedUpdate||i)&&E(n,ze.DYNAMIC_DRAW),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1,n.lineDistancesNeedUpdate=!1,r.attributes&&L(r)):t instanceof THREE.ParticleSystem&&(r=h(t,n),i=r.attributes&&P(r),(n.verticesNeedUpdate||n.colorsNeedUpdate||t.sortParticles||i)&&p(n,ze.DYNAMIC_DRAW,t),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1,r.attributes&&L(r))}function P(t){for(var e in t.attributes)if(t.attributes[e].needsUpdate)return!0;return!1}function L(t){for(var e in t.attributes)t.attributes[e].needsUpdate=!1}function V(t,e){t instanceof THREE.Mesh||t instanceof THREE.ParticleSystem||t instanceof THREE.Line?U(e.__webglObjects,t):t instanceof THREE.Sprite?O(e.__webglSprites,t):t instanceof THREE.LensFlare?O(e.__webglFlares,t):(t instanceof THREE.ImmediateRenderObject||t.immediateRenderCallback)&&U(e.__webglObjectsImmediate,t),delete t.__webglActive}function U(t,e){for(var i=t.length-1;i>=0;i--)t[i].object===e&&t.splice(i,1)}function O(t,e){for(var i=t.length-1;i>=0;i--)t[i]===e&&t.splice(i,1)}function B(t,e){t.uniforms=THREE.UniformsUtils.clone(e.uniforms),t.vertexShader=e.vertexShader,t.fragmentShader=e.fragmentShader}function N(t,e,i,r,n){Xe=0,r.needsUpdate&&(r.program&&Ni(r),Be.initMaterial(r,e,i,n),r.needsUpdate=!1),r.morphTargets&&(n.__webglMorphTargetInfluences||(n.__webglMorphTargetInfluences=new Float32Array(Be.maxMorphTargets)));var o=!1,a=r.program,s=a.uniforms,h=r.uniforms;if(a.id!==ke&&(ze.useProgram(a.program),ke=a.id,o=!0),r.id!==Ie&&(Ie=r.id,o=!0),(o||t!==Ge)&&(ze.uniformMatrix4fv(s.projectionMatrix,!1,t.projectionMatrix.elements),Se&&ze.uniform1f(s.logDepthBufFC,2/(Math.log(t.far+1)/Math.LN2)),t!==Ge&&(Ge=t)),r.skinning)if(wi&&n.skeleton.useVertexTexture){if(null!==s.boneTexture){var l=K();ze.uniform1i(s.boneTexture,l),Be.setTexture(n.skeleton.boneTexture,l)}null!==s.boneTextureWidth&&ze.uniform1i(s.boneTextureWidth,n.skeleton.boneTextureWidth),null!==s.boneTextureHeight&&ze.uniform1i(s.boneTextureHeight,n.skeleton.boneTextureHeight)}else null!==s.boneGlobalMatrices&&ze.uniformMatrix4fv(s.boneGlobalMatrices,!1,n.skeleton.boneMatrices);return o&&(i&&r.fog&&G(h,i),(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r.lights)&&(vi&&(ie(a,e),vi=!1),Y(h,gi)),(r instanceof THREE.MeshBasicMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.MeshPhongMaterial)&&k(h,r),r instanceof THREE.LineBasicMaterial?j(h,r):r instanceof THREE.LineDashedMaterial?(j(h,r),I(h,r)):r instanceof THREE.ParticleSystemMaterial?W(h,r):r instanceof THREE.MeshPhongMaterial?X(h,r):r instanceof THREE.MeshLambertMaterial?q(h,r):r instanceof THREE.MeshDepthMaterial?(h.mNear.value=t.near,h.mFar.value=t.far,h.opacity.value=r.opacity):r instanceof THREE.MeshNormalMaterial&&(h.opacity.value=r.opacity),n.receiveShadow&&!r._shadowPass&&Z(h,e),$(a,r.uniformsList),(r instanceof THREE.ShaderMaterial||r instanceof THREE.MeshPhongMaterial||r.envMap)&&null!==s.cameraPosition&&(mi.setFromMatrixPosition(t.matrixWorld),ze.uniform3f(s.cameraPosition,mi.x,mi.y,mi.z)),(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.ShaderMaterial||r.skinning)&&null!==s.viewMatrix&&ze.uniformMatrix4fv(s.viewMatrix,!1,t.matrixWorldInverse.elements)),Q(s,n),null!==s.modelMatrix&&ze.uniformMatrix4fv(s.modelMatrix,!1,n.matrixWorld.elements),a}function k(t,e){t.opacity.value=e.opacity,Be.gammaInput?t.diffuse.value.copyGammaToLinear(e.color):t.diffuse.value=e.color,t.map.value=e.map,t.lightMap.value=e.lightMap,t.specularMap.value=e.specularMap,e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale));var i;if(e.map?i=e.map:e.specularMap?i=e.specularMap:e.normalMap?i=e.normalMap:e.bumpMap&&(i=e.bumpMap),void 0!==i){var r=i.offset,n=i.repeat;t.offsetRepeat.value.set(r.x,r.y,n.x,n.y)}t.envMap.value=e.envMap,t.flipEnvMap.value=e.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,t.reflectivity.value=Be.gammaInput?e.reflectivity:e.reflectivity,t.refractionRatio.value=e.refractionRatio,t.combine.value=e.combine,t.useRefract.value=e.envMap&&e.envMap.mapping instanceof THREE.CubeRefractionMapping}function j(t,e){t.diffuse.value=e.color,t.opacity.value=e.opacity}function I(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}function W(t,e){t.psColor.value=e.color,t.opacity.value=e.opacity,t.size.value=e.size,t.scale.value=ge.height/2,t.map.value=e.map}function G(t,e){t.fogColor.value=e.color,e instanceof THREE.Fog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e instanceof THREE.FogExp2&&(t.fogDensity.value=e.density)}function X(t,e){t.shininess.value=e.shininess,Be.gammaInput?(t.ambient.value.copyGammaToLinear(e.ambient),t.emissive.value.copyGammaToLinear(e.emissive),t.specular.value.copyGammaToLinear(e.specular)):(t.ambient.value=e.ambient,t.emissive.value=e.emissive,t.specular.value=e.specular),e.wrapAround&&t.wrapRGB.value.copy(e.wrapRGB)}function q(t,e){Be.gammaInput?(t.ambient.value.copyGammaToLinear(e.ambient),t.emissive.value.copyGammaToLinear(e.emissive)):(t.ambient.value=e.ambient,t.emissive.value=e.emissive),e.wrapAround&&t.wrapRGB.value.copy(e.wrapRGB)}function Y(t,e){t.ambientLightColor.value=e.ambient,t.directionalLightColor.value=e.directional.colors,t.directionalLightDirection.value=e.directional.positions,t.pointLightColor.value=e.point.colors,t.pointLightPosition.value=e.point.positions,t.pointLightDistance.value=e.point.distances,t.spotLightColor.value=e.spot.colors,t.spotLightPosition.value=e.spot.positions,t.spotLightDistance.value=e.spot.distances,t.spotLightDirection.value=e.spot.directions,t.spotLightAngleCos.value=e.spot.anglesCos,t.spotLightExponent.value=e.spot.exponents,t.hemisphereLightSkyColor.value=e.hemi.skyColors,t.hemisphereLightGroundColor.value=e.hemi.groundColors,t.hemisphereLightDirection.value=e.hemi.positions}function Z(t,e){if(t.shadowMatrix)for(var i=0,r=0,n=e.length;n>r;r++){var o=e[r];o.castShadow&&(o instanceof THREE.SpotLight||o instanceof THREE.DirectionalLight&&!o.shadowCascade)&&(t.shadowMap.value[i]=o.shadowMap,t.shadowMapSize.value[i]=o.shadowMapSize,t.shadowMatrix.value[i]=o.shadowMatrix,t.shadowDarkness.value[i]=o.shadowDarkness,t.shadowBias.value[i]=o.shadowBias,i++)}}function Q(t,e){ze.uniformMatrix4fv(t.modelViewMatrix,!1,e._modelViewMatrix.elements),t.normalMatrix&&ze.uniformMatrix3fv(t.normalMatrix,!1,e._normalMatrix.elements)}function K(){var t=Xe;return t>=xi&&console.warn("WebGLRenderer: trying to use "+t+" texture units while this GPU supports only "+xi),Xe+=1,t}function $(t,e){var i,r,n,o,a,s,h,l,c,u,f;for(c=0,u=e.length;u>c;c++)if(o=t.uniforms[e[c][1]])if(i=e[c][0],n=i.type,r=i.value,"i"===n)ze.uniform1i(o,r);else if("f"===n)ze.uniform1f(o,r);else if("v2"===n)ze.uniform2f(o,r.x,r.y);else if("v3"===n)ze.uniform3f(o,r.x,r.y,r.z);else if("v4"===n)ze.uniform4f(o,r.x,r.y,r.z,r.w);else if("c"===n)ze.uniform3f(o,r.r,r.g,r.b);else if("iv1"===n)ze.uniform1iv(o,r);else if("iv"===n)ze.uniform3iv(o,r);else if("fv1"===n)ze.uniform1fv(o,r);else if("fv"===n)ze.uniform3fv(o,r);else if("v2v"===n){for(void 0===i._array&&(i._array=new Float32Array(2*r.length)),h=0,l=r.length;l>h;h++)f=2*h,i._array[f]=r[h].x,i._array[f+1]=r[h].y;ze.uniform2fv(o,i._array)}else if("v3v"===n){for(void 0===i._array&&(i._array=new Float32Array(3*r.length)),h=0,l=r.length;l>h;h++)f=3*h,i._array[f]=r[h].x,i._array[f+1]=r[h].y,i._array[f+2]=r[h].z;ze.uniform3fv(o,i._array)}else if("v4v"===n){for(void 0===i._array&&(i._array=new Float32Array(4*r.length)),h=0,l=r.length;l>h;h++)f=4*h,i._array[f]=r[h].x,i._array[f+1]=r[h].y,i._array[f+2]=r[h].z,i._array[f+3]=r[h].w;ze.uniform4fv(o,i._array)}else if("m3"===n)ze.uniformMatrix3fv(o,!1,r.elements);else if("m3v"===n){for(void 0===i._array&&(i._array=new Float32Array(9*r.length)),h=0,l=r.length;l>h;h++)r[h].flattenToArrayOffset(i._array,9*h);ze.uniformMatrix3fv(o,!1,i._array)}else if("m4"===n)ze.uniformMatrix4fv(o,!1,r.elements);else if("m4v"===n){for(void 0===i._array&&(i._array=new Float32Array(16*r.length)),h=0,l=r.length;l>h;h++)r[h].flattenToArrayOffset(i._array,16*h);ze.uniformMatrix4fv(o,!1,i._array)}else if("t"===n){if(a=r,s=K(),ze.uniform1i(o,s),!a)continue;a.image instanceof Array&&6===a.image.length?se(a,s):a instanceof THREE.WebGLRenderTargetCube?he(a,s):Be.setTexture(a,s)}else if("tv"===n){for(void 0===i._array&&(i._array=[]),h=0,l=i.value.length;l>h;h++)i._array[h]=K();for(ze.uniform1iv(o,i._array),h=0,l=i.value.length;l>h;h++)a=i.value[h],s=i._array[h],a&&Be.setTexture(a,s)}else console.warn("THREE.WebGLRenderer: Unknown uniform type: "+n)}function J(t,e){t._modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,t.matrixWorld),t._normalMatrix.getNormalMatrix(t._modelViewMatrix)}function te(t,e,i,r){t[e]=i.r*i.r*r,t[e+1]=i.g*i.g*r,t[e+2]=i.b*i.b*r}function ee(t,e,i,r){t[e]=i.r*r,t[e+1]=i.g*r,t[e+2]=i.b*r}function ie(t,e){var i,r,n,o,a,s,h,l,c,u=0,f=0,d=0,p=gi,E=p.directional.colors,m=p.directional.positions,y=p.point.colors,v=p.point.positions,g=p.point.distances,x=p.spot.colors,T=p.spot.positions,R=p.spot.distances,_=p.spot.directions,b=p.spot.anglesCos,w=p.spot.exponents,H=p.hemi.skyColors,M=p.hemi.groundColors,S=p.hemi.positions,A=0,C=0,z=0,D=0,F=0,P=0,L=0,V=0,U=0,O=0,B=0,N=0;for(i=0,r=e.length;r>i;i++)if(n=e[i],!n.onlyShadow)if(o=n.color,h=n.intensity,c=n.distance,n instanceof THREE.AmbientLight){if(!n.visible)continue;Be.gammaInput?(u+=o.r*o.r,f+=o.g*o.g,d+=o.b*o.b):(u+=o.r,f+=o.g,d+=o.b)}else if(n instanceof THREE.DirectionalLight){if(F+=1,!n.visible)continue;if(yi.setFromMatrixPosition(n.matrixWorld),mi.setFromMatrixPosition(n.target.matrixWorld),yi.sub(mi),yi.normalize(),0===yi.x&&0===yi.y&&0===yi.z)continue;U=3*A,m[U]=yi.x,m[U+1]=yi.y,m[U+2]=yi.z,Be.gammaInput?te(E,U,o,h*h):ee(E,U,o,h),A+=1}else if(n instanceof THREE.PointLight){if(P+=1,!n.visible)continue;O=3*C,Be.gammaInput?te(y,O,o,h*h):ee(y,O,o,h),mi.setFromMatrixPosition(n.matrixWorld),v[O]=mi.x,v[O+1]=mi.y,v[O+2]=mi.z,g[C]=c,C+=1}else if(n instanceof THREE.SpotLight){if(L+=1,!n.visible)continue;B=3*z,Be.gammaInput?te(x,B,o,h*h):ee(x,B,o,h),mi.setFromMatrixPosition(n.matrixWorld),T[B]=mi.x,T[B+1]=mi.y,T[B+2]=mi.z,R[z]=c,yi.copy(mi),mi.setFromMatrixPosition(n.target.matrixWorld),yi.sub(mi),yi.normalize(),_[B]=yi.x,_[B+1]=yi.y,_[B+2]=yi.z,b[z]=Math.cos(n.angle),w[z]=n.exponent,z+=1}else if(n instanceof THREE.HemisphereLight){if(V+=1,!n.visible)continue;if(yi.setFromMatrixPosition(n.matrixWorld),yi.normalize(),0===yi.x&&0===yi.y&&0===yi.z)continue;N=3*D,S[N]=yi.x,S[N+1]=yi.y,S[N+2]=yi.z,a=n.color,s=n.groundColor,Be.gammaInput?(l=h*h,te(H,N,a,l),te(M,N,s,l)):(ee(H,N,a,h),ee(M,N,s,h)),D+=1}for(i=3*A,r=Math.max(E.length,3*F);r>i;i++)E[i]=0;for(i=3*C,r=Math.max(y.length,3*P);r>i;i++)y[i]=0;for(i=3*z,r=Math.max(x.length,3*L);r>i;i++)x[i]=0;for(i=3*D,r=Math.max(H.length,3*V);r>i;i++)H[i]=0;for(i=3*D,r=Math.max(M.length,3*V);r>i;i++)M[i]=0;p.directional.length=A,p.point.length=C,p.spot.length=z,p.hemi.length=D,p.ambient[0]=u,p.ambient[1]=f,p.ambient[2]=d}function re(t){t!==ni&&(ze.lineWidth(t),ni=t)}function ne(t,e,i){ei!==t&&(t?ze.enable(ze.POLYGON_OFFSET_FILL):ze.disable(ze.POLYGON_OFFSET_FILL),ei=t),!t||ii===e&&ri===i||(ze.polygonOffset(e,i),ii=e,ri=i)}function oe(t,e,i){i?(ze.texParameteri(t,ze.TEXTURE_WRAP_S,de(e.wrapS)),ze.texParameteri(t,ze.TEXTURE_WRAP_T,de(e.wrapT)),ze.texParameteri(t,ze.TEXTURE_MAG_FILTER,de(e.magFilter)),ze.texParameteri(t,ze.TEXTURE_MIN_FILTER,de(e.minFilter))):(ze.texParameteri(t,ze.TEXTURE_WRAP_S,ze.CLAMP_TO_EDGE),ze.texParameteri(t,ze.TEXTURE_WRAP_T,ze.CLAMP_TO_EDGE),ze.texParameteri(t,ze.TEXTURE_MAG_FILTER,fe(e.magFilter)),ze.texParameteri(t,ze.TEXTURE_MIN_FILTER,fe(e.minFilter))),Le&&e.type!==THREE.FloatType&&(e.anisotropy>1||e.__oldAnisotropy)&&(ze.texParameterf(t,Le.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(e.anisotropy,_i)),e.__oldAnisotropy=e.anisotropy)}function ae(t,e){if(t.width<=e&&t.height<=e)return t;var i=Math.max(t.width,t.height),r=Math.floor(t.width*e/i),n=Math.floor(t.height*e/i),o=document.createElement("canvas");o.width=r,o.height=n;var a=o.getContext("2d");return a.drawImage(t,0,0,t.width,t.height,0,0,r,n),o}function se(t,e){if(6===t.image.length)if(t.needsUpdate){t.image.__webglTextureCube||(t.addEventListener("dispose",Fi),t.image.__webglTextureCube=ze.createTexture(),Be.info.memory.textures++),ze.activeTexture(ze.TEXTURE0+e),ze.bindTexture(ze.TEXTURE_CUBE_MAP,t.image.__webglTextureCube),ze.pixelStorei(ze.UNPACK_FLIP_Y_WEBGL,t.flipY);for(var i=t instanceof THREE.CompressedTexture,r=[],n=0;6>n;n++)r[n]=Be.autoScaleCubemaps&&!i?ae(t.image[n],Ri):t.image[n];var o=r[0],a=THREE.Math.isPowerOfTwo(o.width)&&THREE.Math.isPowerOfTwo(o.height),s=de(t.format),h=de(t.type);oe(ze.TEXTURE_CUBE_MAP,t,a);for(var n=0;6>n;n++)if(i)for(var l,c=r[n].mipmaps,u=0,f=c.length;f>u;u++)l=c[u],t.format!==THREE.RGBAFormat?ze.compressedTexImage2D(ze.TEXTURE_CUBE_MAP_POSITIVE_X+n,u,s,l.width,l.height,0,l.data):ze.texImage2D(ze.TEXTURE_CUBE_MAP_POSITIVE_X+n,u,s,l.width,l.height,0,s,h,l.data);
else ze.texImage2D(ze.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,s,s,h,r[n]);t.generateMipmaps&&a&&ze.generateMipmap(ze.TEXTURE_CUBE_MAP),t.needsUpdate=!1,t.onUpdate&&t.onUpdate()}else ze.activeTexture(ze.TEXTURE0+e),ze.bindTexture(ze.TEXTURE_CUBE_MAP,t.image.__webglTextureCube)}function he(t,e){ze.activeTexture(ze.TEXTURE0+e),ze.bindTexture(ze.TEXTURE_CUBE_MAP,t.__webglTexture)}function le(t,e,i){ze.bindFramebuffer(ze.FRAMEBUFFER,t),ze.framebufferTexture2D(ze.FRAMEBUFFER,ze.COLOR_ATTACHMENT0,i,e.__webglTexture,0)}function ce(t,e){ze.bindRenderbuffer(ze.RENDERBUFFER,t),e.depthBuffer&&!e.stencilBuffer?(ze.renderbufferStorage(ze.RENDERBUFFER,ze.DEPTH_COMPONENT16,e.width,e.height),ze.framebufferRenderbuffer(ze.FRAMEBUFFER,ze.DEPTH_ATTACHMENT,ze.RENDERBUFFER,t)):e.depthBuffer&&e.stencilBuffer?(ze.renderbufferStorage(ze.RENDERBUFFER,ze.DEPTH_STENCIL,e.width,e.height),ze.framebufferRenderbuffer(ze.FRAMEBUFFER,ze.DEPTH_STENCIL_ATTACHMENT,ze.RENDERBUFFER,t)):ze.renderbufferStorage(ze.RENDERBUFFER,ze.RGBA4,e.width,e.height)}function ue(t){t instanceof THREE.WebGLRenderTargetCube?(ze.bindTexture(ze.TEXTURE_CUBE_MAP,t.__webglTexture),ze.generateMipmap(ze.TEXTURE_CUBE_MAP),ze.bindTexture(ze.TEXTURE_CUBE_MAP,null)):(ze.bindTexture(ze.TEXTURE_2D,t.__webglTexture),ze.generateMipmap(ze.TEXTURE_2D),ze.bindTexture(ze.TEXTURE_2D,null))}function fe(t){return t===THREE.NearestFilter||t===THREE.NearestMipMapNearestFilter||t===THREE.NearestMipMapLinearFilter?ze.NEAREST:ze.LINEAR}function de(t){if(t===THREE.RepeatWrapping)return ze.REPEAT;if(t===THREE.ClampToEdgeWrapping)return ze.CLAMP_TO_EDGE;if(t===THREE.MirroredRepeatWrapping)return ze.MIRRORED_REPEAT;if(t===THREE.NearestFilter)return ze.NEAREST;if(t===THREE.NearestMipMapNearestFilter)return ze.NEAREST_MIPMAP_NEAREST;if(t===THREE.NearestMipMapLinearFilter)return ze.NEAREST_MIPMAP_LINEAR;if(t===THREE.LinearFilter)return ze.LINEAR;if(t===THREE.LinearMipMapNearestFilter)return ze.LINEAR_MIPMAP_NEAREST;if(t===THREE.LinearMipMapLinearFilter)return ze.LINEAR_MIPMAP_LINEAR;if(t===THREE.UnsignedByteType)return ze.UNSIGNED_BYTE;if(t===THREE.UnsignedShort4444Type)return ze.UNSIGNED_SHORT_4_4_4_4;if(t===THREE.UnsignedShort5551Type)return ze.UNSIGNED_SHORT_5_5_5_1;if(t===THREE.UnsignedShort565Type)return ze.UNSIGNED_SHORT_5_6_5;if(t===THREE.ByteType)return ze.BYTE;if(t===THREE.ShortType)return ze.SHORT;if(t===THREE.UnsignedShortType)return ze.UNSIGNED_SHORT;if(t===THREE.IntType)return ze.INT;if(t===THREE.UnsignedIntType)return ze.UNSIGNED_INT;if(t===THREE.FloatType)return ze.FLOAT;if(t===THREE.AlphaFormat)return ze.ALPHA;if(t===THREE.RGBFormat)return ze.RGB;if(t===THREE.RGBAFormat)return ze.RGBA;if(t===THREE.LuminanceFormat)return ze.LUMINANCE;if(t===THREE.LuminanceAlphaFormat)return ze.LUMINANCE_ALPHA;if(t===THREE.AddEquation)return ze.FUNC_ADD;if(t===THREE.SubtractEquation)return ze.FUNC_SUBTRACT;if(t===THREE.ReverseSubtractEquation)return ze.FUNC_REVERSE_SUBTRACT;if(t===THREE.ZeroFactor)return ze.ZERO;if(t===THREE.OneFactor)return ze.ONE;if(t===THREE.SrcColorFactor)return ze.SRC_COLOR;if(t===THREE.OneMinusSrcColorFactor)return ze.ONE_MINUS_SRC_COLOR;if(t===THREE.SrcAlphaFactor)return ze.SRC_ALPHA;if(t===THREE.OneMinusSrcAlphaFactor)return ze.ONE_MINUS_SRC_ALPHA;if(t===THREE.DstAlphaFactor)return ze.DST_ALPHA;if(t===THREE.OneMinusDstAlphaFactor)return ze.ONE_MINUS_DST_ALPHA;if(t===THREE.DstColorFactor)return ze.DST_COLOR;if(t===THREE.OneMinusDstColorFactor)return ze.ONE_MINUS_DST_COLOR;if(t===THREE.SrcAlphaSaturateFactor)return ze.SRC_ALPHA_SATURATE;if(void 0!==Ve){if(t===THREE.RGB_S3TC_DXT1_Format)return Ve.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===THREE.RGBA_S3TC_DXT1_Format)return Ve.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===THREE.RGBA_S3TC_DXT3_Format)return Ve.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===THREE.RGBA_S3TC_DXT5_Format)return Ve.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}function pe(t){if(wi&&t&&t.skeleton&&t.skeleton.useVertexTexture)return 1024;var e=ze.getParameter(ze.MAX_VERTEX_UNIFORM_VECTORS),i=Math.floor((e-20)/4),r=i;return void 0!==t&&t instanceof THREE.SkinnedMesh&&(r=Math.min(t.skeleton.bones.length,r),r<t.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+t.skeleton.bones.length+", this GPU supports just "+r+" (try OpenGL instead of ANGLE)")),r}function Ee(t){for(var e=0,i=0,r=0,n=0,o=0,a=t.length;a>o;o++){var s=t[o];s.onlyShadow||s.visible===!1||(s instanceof THREE.DirectionalLight&&e++,s instanceof THREE.PointLight&&i++,s instanceof THREE.SpotLight&&r++,s instanceof THREE.HemisphereLight&&n++)}return{directional:e,point:i,spot:r,hemi:n}}function me(t){for(var e=0,i=0,r=t.length;r>i;i++){var n=t[i];n.castShadow&&(n instanceof THREE.SpotLight&&e++,n instanceof THREE.DirectionalLight&&!n.shadowCascade&&e++)}return e}function ye(){try{var t={alpha:Re,depth:_e,stencil:be,antialias:we,premultipliedAlpha:He,preserveDrawingBuffer:Me};if(ze=xe||ge.getContext("webgl",t)||ge.getContext("experimental-webgl",t),null===ze)throw"Error creating WebGL context."}catch(e){console.error(e)}De=ze.getExtension("OES_texture_float"),Fe=ze.getExtension("OES_texture_float_linear"),Pe=ze.getExtension("OES_standard_derivatives"),Le=ze.getExtension("EXT_texture_filter_anisotropic")||ze.getExtension("MOZ_EXT_texture_filter_anisotropic")||ze.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),Ve=ze.getExtension("WEBGL_compressed_texture_s3tc")||ze.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||ze.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),Ue=ze.getExtension("OES_element_index_uint"),null===De&&console.log("THREE.WebGLRenderer: Float textures not supported."),null===Pe&&console.log("THREE.WebGLRenderer: Standard derivatives not supported."),null===Le&&console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),null===Ve&&console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),null===Ue&&console.log("THREE.WebGLRenderer: elementindex as unsigned integer not supported."),void 0===ze.getShaderPrecisionFormat&&(ze.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),Se&&(Oe=ze.getExtension("EXT_frag_depth"))}function ve(){ze.clearColor(0,0,0,1),ze.clearDepth(1),ze.clearStencil(0),ze.enable(ze.DEPTH_TEST),ze.depthFunc(ze.LEQUAL),ze.frontFace(ze.CCW),ze.cullFace(ze.BACK),ze.enable(ze.CULL_FACE),ze.enable(ze.BLEND),ze.blendEquation(ze.FUNC_ADD),ze.blendFunc(ze.SRC_ALPHA,ze.ONE_MINUS_SRC_ALPHA),ze.viewport(oi,ai,si,hi),ze.clearColor(Ae.r,Ae.g,Ae.b,Ce)}console.log("THREE.WebGLRenderer",THREE.REVISION),t=t||{};var ge=void 0!==t.canvas?t.canvas:document.createElement("canvas"),xe=void 0!==t.context?t.context:null,Te=void 0!==t.precision?t.precision:"highp",Re=void 0!==t.alpha?t.alpha:!1,_e=void 0!==t.depth?t.depth:!0,be=void 0!==t.stencil?t.stencil:!0,we=void 0!==t.antialias?t.antialias:!1,He=void 0!==t.premultipliedAlpha?t.premultipliedAlpha:!0,Me=void 0!==t.preserveDrawingBuffer?t.preserveDrawingBuffer:!1,Se=void 0!==t.logarithmicDepthBuffer?t.logarithmicDepthBuffer:!1,Ae=new THREE.Color(0),Ce=0;this.domElement=ge,this.context=null,this.devicePixelRatio=void 0!==t.devicePixelRatio?t.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.autoUpdateObjects=!0,this.gammaInput=!1,this.gammaOutput=!1,this.shadowMapEnabled=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var ze,De,Fe,Pe,Le,Ve,Ue,Oe,Be=this,Ne=[],ke=null,je=null,Ie=-1,We=null,Ge=null,Xe=0,qe=-1,Ye=-1,Ze=-1,Qe=-1,Ke=-1,$e=-1,Je=-1,ti=-1,ei=null,ii=null,ri=null,ni=null,oi=0,ai=0,si=ge.width,hi=ge.height,li=0,ci=0,ui=new Uint8Array(16),fi=new Uint8Array(16),di=new THREE.Frustum,pi=new THREE.Matrix4,Ei=new THREE.Matrix4,mi=new THREE.Vector3,yi=new THREE.Vector3,vi=!0,gi={ambient:[0,0,0],directional:{length:0,colors:new Array,positions:new Array},point:{length:0,colors:new Array,positions:new Array,distances:new Array},spot:{length:0,colors:new Array,positions:new Array,distances:new Array,directions:new Array,anglesCos:new Array,exponents:new Array},hemi:{length:0,skyColors:new Array,groundColors:new Array,positions:new Array}};ye(),ve(),this.context=ze;var xi=ze.getParameter(ze.MAX_TEXTURE_IMAGE_UNITS),Ti=ze.getParameter(ze.MAX_VERTEX_TEXTURE_IMAGE_UNITS),Ri=(ze.getParameter(ze.MAX_TEXTURE_SIZE),ze.getParameter(ze.MAX_CUBE_MAP_TEXTURE_SIZE)),_i=Le?ze.getParameter(Le.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,bi=Ti>0,wi=bi&&De,Hi=(Ve?ze.getParameter(ze.COMPRESSED_TEXTURE_FORMATS):[],ze.getShaderPrecisionFormat(ze.VERTEX_SHADER,ze.HIGH_FLOAT)),Mi=ze.getShaderPrecisionFormat(ze.VERTEX_SHADER,ze.MEDIUM_FLOAT),Si=(ze.getShaderPrecisionFormat(ze.VERTEX_SHADER,ze.LOW_FLOAT),ze.getShaderPrecisionFormat(ze.FRAGMENT_SHADER,ze.HIGH_FLOAT)),Ai=ze.getShaderPrecisionFormat(ze.FRAGMENT_SHADER,ze.MEDIUM_FLOAT),Ci=(ze.getShaderPrecisionFormat(ze.FRAGMENT_SHADER,ze.LOW_FLOAT),Hi.precision>0&&Si.precision>0),zi=Mi.precision>0&&Ai.precision>0;"highp"!==Te||Ci||(zi?(Te="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(Te="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"!==Te||zi||(Te="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return ze},this.supportsVertexTextures=function(){return bi},this.supportsFloatTextures=function(){return De},this.supportsStandardDerivatives=function(){return Pe},this.supportsCompressedTextureS3TC=function(){return Ve},this.getMaxAnisotropy=function(){return _i},this.getPrecision=function(){return Te},this.setSize=function(t,e,i){ge.width=t*this.devicePixelRatio,ge.height=e*this.devicePixelRatio,i!==!1&&(ge.style.width=t+"px",ge.style.height=e+"px"),this.setViewport(0,0,t,e)},this.setViewport=function(t,e,i,r){oi=t*this.devicePixelRatio,ai=e*this.devicePixelRatio,si=i*this.devicePixelRatio,hi=r*this.devicePixelRatio,ze.viewport(oi,ai,si,hi)},this.setScissor=function(t,e,i,r){ze.scissor(t*this.devicePixelRatio,e*this.devicePixelRatio,i*this.devicePixelRatio,r*this.devicePixelRatio)},this.enableScissorTest=function(t){t?ze.enable(ze.SCISSOR_TEST):ze.disable(ze.SCISSOR_TEST)},this.setClearColor=function(t,e){Ae.set(t),Ce=void 0!==e?e:1,ze.clearColor(Ae.r,Ae.g,Ae.b,Ce)},this.setClearColorHex=function(t,e){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(t,e)},this.getClearColor=function(){return Ae},this.getClearAlpha=function(){return Ce},this.clear=function(t,e,i){var r=0;(void 0===t||t)&&(r|=ze.COLOR_BUFFER_BIT),(void 0===e||e)&&(r|=ze.DEPTH_BUFFER_BIT),(void 0===i||i)&&(r|=ze.STENCIL_BUFFER_BIT),ze.clear(r)},this.clearColor=function(){ze.clear(ze.COLOR_BUFFER_BIT)},this.clearDepth=function(){ze.clear(ze.DEPTH_BUFFER_BIT)},this.clearStencil=function(){ze.clear(ze.STENCIL_BUFFER_BIT)},this.clearTarget=function(t,e,i,r){this.setRenderTarget(t),this.clear(e,i,r)},this.addPostPlugin=function(t){t.init(this),this.renderPluginsPost.push(t)},this.addPrePlugin=function(t){t.init(this),this.renderPluginsPre.push(t)},this.updateShadowMap=function(t,e){ke=null,Ze=-1,Je=-1,ti=-1,We=-1,Ie=-1,vi=!0,qe=-1,Ye=-1,this.shadowMapPlugin.update(t,e)};var Di=function(t){var e=t.target;e.removeEventListener("dispose",Di),Ui(e)},Fi=function(t){var e=t.target;e.removeEventListener("dispose",Fi),Oi(e),Be.info.memory.textures--},Pi=function(t){var e=t.target;e.removeEventListener("dispose",Pi),Bi(e),Be.info.memory.textures--},Li=function(t){var e=t.target;e.removeEventListener("dispose",Li),Ni(e)},Vi=function(t){if(void 0!==t.__webglVertexBuffer&&ze.deleteBuffer(t.__webglVertexBuffer),void 0!==t.__webglNormalBuffer&&ze.deleteBuffer(t.__webglNormalBuffer),void 0!==t.__webglTangentBuffer&&ze.deleteBuffer(t.__webglTangentBuffer),void 0!==t.__webglColorBuffer&&ze.deleteBuffer(t.__webglColorBuffer),void 0!==t.__webglUVBuffer&&ze.deleteBuffer(t.__webglUVBuffer),void 0!==t.__webglUV2Buffer&&ze.deleteBuffer(t.__webglUV2Buffer),void 0!==t.__webglSkinIndicesBuffer&&ze.deleteBuffer(t.__webglSkinIndicesBuffer),void 0!==t.__webglSkinWeightsBuffer&&ze.deleteBuffer(t.__webglSkinWeightsBuffer),void 0!==t.__webglFaceBuffer&&ze.deleteBuffer(t.__webglFaceBuffer),void 0!==t.__webglLineBuffer&&ze.deleteBuffer(t.__webglLineBuffer),void 0!==t.__webglLineDistanceBuffer&&ze.deleteBuffer(t.__webglLineDistanceBuffer),void 0!==t.__webglCustomAttributesList)for(var e in t.__webglCustomAttributesList)ze.deleteBuffer(t.__webglCustomAttributesList[e].buffer);Be.info.memory.geometries--},Ui=function(t){if(t.__webglInit=void 0,t instanceof THREE.BufferGeometry){var e=t.attributes;for(var i in e)void 0!==e[i].buffer&&ze.deleteBuffer(e[i].buffer);Be.info.memory.geometries--}else if(void 0!==t.geometryGroups)for(var r in t.geometryGroups){var n=t.geometryGroups[r];if(void 0!==n.numMorphTargets)for(var o=0,a=n.numMorphTargets;a>o;o++)ze.deleteBuffer(n.__webglMorphTargetsBuffers[o]);if(void 0!==n.numMorphNormals)for(var o=0,a=n.numMorphNormals;a>o;o++)ze.deleteBuffer(n.__webglMorphNormalsBuffers[o]);Vi(n)}else Vi(t)},Oi=function(t){if(t.image&&t.image.__webglTextureCube)ze.deleteTexture(t.image.__webglTextureCube);else{if(!t.__webglInit)return;t.__webglInit=!1,ze.deleteTexture(t.__webglTexture)}},Bi=function(t){if(t&&t.__webglTexture)if(ze.deleteTexture(t.__webglTexture),t instanceof THREE.WebGLRenderTargetCube)for(var e=0;6>e;e++)ze.deleteFramebuffer(t.__webglFramebuffer[e]),ze.deleteRenderbuffer(t.__webglRenderbuffer[e]);else ze.deleteFramebuffer(t.__webglFramebuffer),ze.deleteRenderbuffer(t.__webglRenderbuffer)},Ni=function(t){var e=t.program;if(void 0!==e){t.program=void 0;var i,r,n,o=!1;for(i=0,r=Ne.length;r>i;i++)if(n=Ne[i],n.program===e){n.usedTimes--,0===n.usedTimes&&(o=!0);break}if(o===!0){var a=[];for(i=0,r=Ne.length;r>i;i++)n=Ne[i],n.program!==e&&a.push(n);Ne=a,ze.deleteProgram(e),Be.info.memory.programs--}}};this.renderBufferImmediate=function(t,e,i){if(g(),t.hasPositions&&!t.__webglVertexBuffer&&(t.__webglVertexBuffer=ze.createBuffer()),t.hasNormals&&!t.__webglNormalBuffer&&(t.__webglNormalBuffer=ze.createBuffer()),t.hasUvs&&!t.__webglUvBuffer&&(t.__webglUvBuffer=ze.createBuffer()),t.hasColors&&!t.__webglColorBuffer&&(t.__webglColorBuffer=ze.createBuffer()),t.hasPositions&&(ze.bindBuffer(ze.ARRAY_BUFFER,t.__webglVertexBuffer),ze.bufferData(ze.ARRAY_BUFFER,t.positionArray,ze.DYNAMIC_DRAW),x(e.attributes.position),ze.vertexAttribPointer(e.attributes.position,3,ze.FLOAT,!1,0,0)),t.hasNormals){if(ze.bindBuffer(ze.ARRAY_BUFFER,t.__webglNormalBuffer),i.shading===THREE.FlatShading){var r,n,o,a,s,h,l,c,u,f,d,p,E,m,y=3*t.count;for(m=0;y>m;m+=9)E=t.normalArray,a=E[m],l=E[m+1],f=E[m+2],s=E[m+3],c=E[m+4],d=E[m+5],h=E[m+6],u=E[m+7],p=E[m+8],r=(a+s+h)/3,n=(l+c+u)/3,o=(f+d+p)/3,E[m]=r,E[m+1]=n,E[m+2]=o,E[m+3]=r,E[m+4]=n,E[m+5]=o,E[m+6]=r,E[m+7]=n,E[m+8]=o}ze.bufferData(ze.ARRAY_BUFFER,t.normalArray,ze.DYNAMIC_DRAW),x(e.attributes.normal),ze.vertexAttribPointer(e.attributes.normal,3,ze.FLOAT,!1,0,0)}t.hasUvs&&i.map&&(ze.bindBuffer(ze.ARRAY_BUFFER,t.__webglUvBuffer),ze.bufferData(ze.ARRAY_BUFFER,t.uvArray,ze.DYNAMIC_DRAW),x(e.attributes.uv),ze.vertexAttribPointer(e.attributes.uv,2,ze.FLOAT,!1,0,0)),t.hasColors&&i.vertexColors!==THREE.NoColors&&(ze.bindBuffer(ze.ARRAY_BUFFER,t.__webglColorBuffer),ze.bufferData(ze.ARRAY_BUFFER,t.colorArray,ze.DYNAMIC_DRAW),x(e.attributes.color),ze.vertexAttribPointer(e.attributes.color,3,ze.FLOAT,!1,0,0)),T(),ze.drawArrays(ze.TRIANGLES,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,i,r,n,o){if(r.visible!==!1){var a=N(t,e,i,r,o),s=a.attributes,h=n.attributes,l=!1,c=r.wireframe?1:0,u=16777215*n.id+2*a.id+c;if(u!==We&&(We=u,l=!0),l&&g(),o instanceof THREE.Mesh){var f=h.index;if(f){var d,p;f.array instanceof Uint32Array?(d=ze.UNSIGNED_INT,p=4):(d=ze.UNSIGNED_SHORT,p=2);var E=n.offsets;if(0===E.length)l&&(v(r,s,h,0),ze.bindBuffer(ze.ELEMENT_ARRAY_BUFFER,f.buffer)),ze.drawElements(ze.TRIANGLES,f.array.length,d,0),Be.info.render.calls++,Be.info.render.vertices+=f.array.length,Be.info.render.faces+=f.array.length/3;else{l=!0;for(var m=0,y=E.length;y>m;m++){var x=E[m].index;l&&(v(r,s,h,x),ze.bindBuffer(ze.ELEMENT_ARRAY_BUFFER,f.buffer)),ze.drawElements(ze.TRIANGLES,E[m].count,d,E[m].start*p),Be.info.render.calls++,Be.info.render.vertices+=E[m].count,Be.info.render.faces+=E[m].count/3}}}else{l&&v(r,s,h,0);var T=n.attributes.position;ze.drawArrays(ze.TRIANGLES,0,T.array.length/3),Be.info.render.calls++,Be.info.render.vertices+=T.array.length/3,Be.info.render.faces+=T.array.length/9}}else if(o instanceof THREE.ParticleSystem){l&&v(r,s,h,0);var T=h.position;ze.drawArrays(ze.POINTS,0,T.array.length/3),Be.info.render.calls++,Be.info.render.points+=T.array.length/3}else if(o instanceof THREE.Line){var R=o.type===THREE.LineStrip?ze.LINE_STRIP:ze.LINES;re(r.linewidth);var f=h.index;if(f){var d,p;f.array instanceof Uint32Array?(d=ze.UNSIGNED_INT,p=4):(d=ze.UNSIGNED_SHORT,p=2);var E=n.offsets;if(0===E.length)l&&(v(r,s,h,0),ze.bindBuffer(ze.ELEMENT_ARRAY_BUFFER,f.buffer)),ze.drawElements(ze.LINES,f.array.length,d,0),Be.info.render.calls++,Be.info.render.vertices+=f.array.length;else{E.length>1&&(l=!0);for(var m=0,y=E.length;y>m;m++){var x=E[m].index;l&&(v(r,s,h,x),ze.bindBuffer(ze.ELEMENT_ARRAY_BUFFER,f.buffer)),ze.drawElements(ze.LINES,E[m].count,d,E[m].start*p),Be.info.render.calls++,Be.info.render.vertices+=E[m].count}}}else{l&&v(r,s,h,0);var T=h.position;ze.drawArrays(R,0,T.array.length/3),Be.info.render.calls++,Be.info.render.points+=T.array.length/3}}}},this.renderBuffer=function(t,e,i,r,n,o){if(r.visible!==!1){var a,s,h,l=N(t,e,i,r,o),c=l.attributes,u=!1,f=r.wireframe?1:0,d=16777215*n.id+2*l.id+f;if(d!==We&&(We=d,u=!0),u&&g(),!r.morphTargets&&c.position>=0?u&&(ze.bindBuffer(ze.ARRAY_BUFFER,n.__webglVertexBuffer),x(c.position),ze.vertexAttribPointer(c.position,3,ze.FLOAT,!1,0,0)):o.morphTargetBase&&R(r,n,o),u){if(n.__webglCustomAttributesList)for(s=0,h=n.__webglCustomAttributesList.length;h>s;s++)a=n.__webglCustomAttributesList[s],c[a.buffer.belongsToAttribute]>=0&&(ze.bindBuffer(ze.ARRAY_BUFFER,a.buffer),x(c[a.buffer.belongsToAttribute]),ze.vertexAttribPointer(c[a.buffer.belongsToAttribute],a.size,ze.FLOAT,!1,0,0));c.color>=0&&(o.geometry.colors.length>0||o.geometry.faces.length>0?(ze.bindBuffer(ze.ARRAY_BUFFER,n.__webglColorBuffer),x(c.color),ze.vertexAttribPointer(c.color,3,ze.FLOAT,!1,0,0)):r.defaultAttributeValues&&ze.vertexAttrib3fv(c.color,r.defaultAttributeValues.color)),c.normal>=0&&(ze.bindBuffer(ze.ARRAY_BUFFER,n.__webglNormalBuffer),x(c.normal),ze.vertexAttribPointer(c.normal,3,ze.FLOAT,!1,0,0)),c.tangent>=0&&(ze.bindBuffer(ze.ARRAY_BUFFER,n.__webglTangentBuffer),x(c.tangent),ze.vertexAttribPointer(c.tangent,4,ze.FLOAT,!1,0,0)),c.uv>=0&&(o.geometry.faceVertexUvs[0]?(ze.bindBuffer(ze.ARRAY_BUFFER,n.__webglUVBuffer),x(c.uv),ze.vertexAttribPointer(c.uv,2,ze.FLOAT,!1,0,0)):r.defaultAttributeValues&&ze.vertexAttrib2fv(c.uv,r.defaultAttributeValues.uv)),c.uv2>=0&&(o.geometry.faceVertexUvs[1]?(ze.bindBuffer(ze.ARRAY_BUFFER,n.__webglUV2Buffer),x(c.uv2),ze.vertexAttribPointer(c.uv2,2,ze.FLOAT,!1,0,0)):r.defaultAttributeValues&&ze.vertexAttrib2fv(c.uv2,r.defaultAttributeValues.uv2)),r.skinning&&c.skinIndex>=0&&c.skinWeight>=0&&(ze.bindBuffer(ze.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),x(c.skinIndex),ze.vertexAttribPointer(c.skinIndex,4,ze.FLOAT,!1,0,0),ze.bindBuffer(ze.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),x(c.skinWeight),ze.vertexAttribPointer(c.skinWeight,4,ze.FLOAT,!1,0,0)),c.lineDistance>=0&&(ze.bindBuffer(ze.ARRAY_BUFFER,n.__webglLineDistanceBuffer),x(c.lineDistance),ze.vertexAttribPointer(c.lineDistance,1,ze.FLOAT,!1,0,0))}if(T(),o instanceof THREE.Mesh){var p=n.__typeArray===Uint32Array?ze.UNSIGNED_INT:ze.UNSIGNED_SHORT;r.wireframe?(re(r.wireframeLinewidth),u&&ze.bindBuffer(ze.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer),ze.drawElements(ze.LINES,n.__webglLineCount,p,0)):(u&&ze.bindBuffer(ze.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer),ze.drawElements(ze.TRIANGLES,n.__webglFaceCount,p,0)),Be.info.render.calls++,Be.info.render.vertices+=n.__webglFaceCount,Be.info.render.faces+=n.__webglFaceCount/3}else if(o instanceof THREE.Line){var E=o.type===THREE.LineStrip?ze.LINE_STRIP:ze.LINES;re(r.linewidth),ze.drawArrays(E,0,n.__webglLineCount),Be.info.render.calls++}else o instanceof THREE.ParticleSystem&&(ze.drawArrays(ze.POINTS,0,n.__webglParticleCount),Be.info.render.calls++,Be.info.render.points+=n.__webglParticleCount)}},this.render=function(t,e,i,r){if(e instanceof THREE.Camera==!1)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");var n,o,a,s,h,l=t.__lights,c=t.fog;for(Ie=-1,vi=!0,t.autoUpdate===!0&&t.updateMatrixWorld(),void 0===e.parent&&e.updateMatrixWorld(),e.matrixWorldInverse.getInverse(e.matrixWorld),pi.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),di.setFromMatrix(pi),this.autoUpdateObjects&&this.initWebGLObjects(t),w(this.renderPluginsPre,t,e),Be.info.render.calls=0,Be.info.render.vertices=0,Be.info.render.faces=0,Be.info.render.points=0,this.setRenderTarget(i),(this.autoClear||r)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),h=t.__webglObjects,n=0,o=h.length;o>n;n++)a=h[n],s=a.object,a.id=n,a.render=!1,s.visible&&((s instanceof THREE.Mesh||s instanceof THREE.ParticleSystem)&&s.frustumCulled&&!di.intersectsObject(s)||(J(s,e),A(a),a.render=!0,this.sortObjects===!0&&(null!==s.renderDepth?a.z=s.renderDepth:(mi.setFromMatrixPosition(s.matrixWorld),mi.applyProjection(pi),a.z=mi.z))));for(this.sortObjects&&h.sort(_),h=t.__webglObjectsImmediate,n=0,o=h.length;o>n;n++)a=h[n],s=a.object,s.visible&&(J(s,e),S(a));if(t.overrideMaterial){var u=t.overrideMaterial;this.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst),this.setDepthTest(u.depthTest),this.setDepthWrite(u.depthWrite),ne(u.polygonOffset,u.polygonOffsetFactor,u.polygonOffsetUnits),H(t.__webglObjects,!1,"",e,l,c,!0,u),M(t.__webglObjectsImmediate,"",e,l,c,!1,u)}else{var u=null;this.setBlending(THREE.NoBlending),H(t.__webglObjects,!0,"opaque",e,l,c,!1,u),M(t.__webglObjectsImmediate,"opaque",e,l,c,!1,u),H(t.__webglObjects,!1,"transparent",e,l,c,!0,u),M(t.__webglObjectsImmediate,"transparent",e,l,c,!0,u)}w(this.renderPluginsPost,t,e),i&&i.generateMipmaps&&i.minFilter!==THREE.NearestFilter&&i.minFilter!==THREE.LinearFilter&&ue(i),this.setDepthTest(!0),this.setDepthWrite(!0)},this.renderImmediateObject=function(t,e,i,r,n){var o=N(t,e,i,r,n);We=-1,Be.setMaterialFaces(r),n.immediateRenderCallback?n.immediateRenderCallback(o,ze,di):n.render(function(t){Be.renderBufferImmediate(t,o,r)})},this.initWebGLObjects=function(t){for(t.__webglObjects||(t.__webglObjects=[],t.__webglObjectsImmediate=[],t.__webglSprites=[],t.__webglFlares=[]);t.__objectsAdded.length;)C(t.__objectsAdded[0],t),t.__objectsAdded.splice(0,1);for(;t.__objectsRemoved.length;)V(t.__objectsRemoved[0],t),t.__objectsRemoved.splice(0,1);for(var e=0,i=t.__webglObjects.length;i>e;e++){var r=t.__webglObjects[e].object;void 0===r.__webglInit&&(void 0!==r.__webglActive&&V(r,t),C(r,t)),F(r)}},this.initMaterial=function(t,e,i,r){t.addEventListener("dispose",Li);var n,o,a,s,h,l,c;t instanceof THREE.MeshDepthMaterial?c="depth":t instanceof THREE.MeshNormalMaterial?c="normal":t instanceof THREE.MeshBasicMaterial?c="basic":t instanceof THREE.MeshLambertMaterial?c="lambert":t instanceof THREE.MeshPhongMaterial?c="phong":t instanceof THREE.LineBasicMaterial?c="basic":t instanceof THREE.LineDashedMaterial?c="dashed":t instanceof THREE.ParticleSystemMaterial&&(c="particle_basic"),c&&B(t,THREE.ShaderLib[c]),s=Ee(e),l=me(e),h=pe(r),a={precision:Te,supportsVertexTextures:bi,map:!!t.map,envMap:!!t.envMap,lightMap:!!t.lightMap,bumpMap:!!t.bumpMap,normalMap:!!t.normalMap,specularMap:!!t.specularMap,vertexColors:t.vertexColors,fog:i,useFog:t.fog,fogExp:i instanceof THREE.FogExp2,sizeAttenuation:t.sizeAttenuation,logarithmicDepthBuffer:Se,skinning:t.skinning,maxBones:h,useVertexTexture:wi&&r&&r.skeleton&&r.skeleton.useVertexTexture,morphTargets:t.morphTargets,morphNormals:t.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:s.directional,maxPointLights:s.point,maxSpotLights:s.spot,maxHemiLights:s.hemi,maxShadows:l,shadowMapEnabled:this.shadowMapEnabled&&r.receiveShadow&&l>0,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:t.alphaTest,metal:t.metal,wrapAround:t.wrapAround,doubleSided:t.side===THREE.DoubleSide,flipSided:t.side===THREE.BackSide};var u=[];c?u.push(c):(u.push(t.fragmentShader),u.push(t.vertexShader));for(var f in t.defines)u.push(f),u.push(t.defines[f]);for(var d in a)u.push(d),u.push(a[d]);for(var p,E=u.join(),d=0,m=Ne.length;m>d;d++){var y=Ne[d];if(y.code===E){p=y,p.usedTimes++;break}}void 0===p&&(p=new THREE.WebGLProgram(this,E,t,a),Ne.push(p),Be.info.memory.programs=Ne.length),t.program=p;var v=t.program.attributes;if(t.morphTargets){t.numSupportedMorphTargets=0;var g,x="morphTarget";for(o=0;o<this.maxMorphTargets;o++)g=x+o,v[g]>=0&&t.numSupportedMorphTargets++}if(t.morphNormals){t.numSupportedMorphNormals=0;var g,x="morphNormal";for(o=0;o<this.maxMorphNormals;o++)g=x+o,v[g]>=0&&t.numSupportedMorphNormals++}t.uniformsList=[];for(n in t.uniforms)t.uniformsList.push([t.uniforms[n],n])},this.setFaceCulling=function(t,e){t===THREE.CullFaceNone?ze.disable(ze.CULL_FACE):(ze.frontFace(e===THREE.FrontFaceDirectionCW?ze.CW:ze.CCW),ze.cullFace(t===THREE.CullFaceBack?ze.BACK:t===THREE.CullFaceFront?ze.FRONT:ze.FRONT_AND_BACK),ze.enable(ze.CULL_FACE))},this.setMaterialFaces=function(t){var e=t.side===THREE.DoubleSide,i=t.side===THREE.BackSide;qe!==e&&(e?ze.disable(ze.CULL_FACE):ze.enable(ze.CULL_FACE),qe=e),Ye!==i&&(ze.frontFace(i?ze.CW:ze.CCW),Ye=i)},this.setDepthTest=function(t){Je!==t&&(t?ze.enable(ze.DEPTH_TEST):ze.disable(ze.DEPTH_TEST),Je=t)},this.setDepthWrite=function(t){ti!==t&&(ze.depthMask(t),ti=t)},this.setBlending=function(t,e,i,r){t!==Ze&&(t===THREE.NoBlending?ze.disable(ze.BLEND):t===THREE.AdditiveBlending?(ze.enable(ze.BLEND),ze.blendEquation(ze.FUNC_ADD),ze.blendFunc(ze.SRC_ALPHA,ze.ONE)):t===THREE.SubtractiveBlending?(ze.enable(ze.BLEND),ze.blendEquation(ze.FUNC_ADD),ze.blendFunc(ze.ZERO,ze.ONE_MINUS_SRC_COLOR)):t===THREE.MultiplyBlending?(ze.enable(ze.BLEND),ze.blendEquation(ze.FUNC_ADD),ze.blendFunc(ze.ZERO,ze.SRC_COLOR)):t===THREE.CustomBlending?ze.enable(ze.BLEND):(ze.enable(ze.BLEND),ze.blendEquationSeparate(ze.FUNC_ADD,ze.FUNC_ADD),ze.blendFuncSeparate(ze.SRC_ALPHA,ze.ONE_MINUS_SRC_ALPHA,ze.ONE,ze.ONE_MINUS_SRC_ALPHA)),Ze=t),t===THREE.CustomBlending?(e!==Qe&&(ze.blendEquation(de(e)),Qe=e),(i!==Ke||r!==$e)&&(ze.blendFunc(de(i),de(r)),Ke=i,$e=r)):(Qe=null,Ke=null,$e=null)},this.setTexture=function(t,e){if(t.needsUpdate){t.__webglInit||(t.__webglInit=!0,t.addEventListener("dispose",Fi),t.__webglTexture=ze.createTexture(),Be.info.memory.textures++),ze.activeTexture(ze.TEXTURE0+e),ze.bindTexture(ze.TEXTURE_2D,t.__webglTexture),ze.pixelStorei(ze.UNPACK_FLIP_Y_WEBGL,t.flipY),ze.pixelStorei(ze.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),ze.pixelStorei(ze.UNPACK_ALIGNMENT,t.unpackAlignment);var i=t.image,r=THREE.Math.isPowerOfTwo(i.width)&&THREE.Math.isPowerOfTwo(i.height),n=de(t.format),o=de(t.type);oe(ze.TEXTURE_2D,t,r);var a,s=t.mipmaps;if(t instanceof THREE.DataTexture)if(s.length>0&&r){for(var h=0,l=s.length;l>h;h++)a=s[h],ze.texImage2D(ze.TEXTURE_2D,h,n,a.width,a.height,0,n,o,a.data);t.generateMipmaps=!1}else ze.texImage2D(ze.TEXTURE_2D,0,n,i.width,i.height,0,n,o,i.data);else if(t instanceof THREE.CompressedTexture)for(var h=0,l=s.length;l>h;h++)a=s[h],t.format!==THREE.RGBAFormat?ze.compressedTexImage2D(ze.TEXTURE_2D,h,n,a.width,a.height,0,a.data):ze.texImage2D(ze.TEXTURE_2D,h,n,a.width,a.height,0,n,o,a.data);else if(s.length>0&&r){for(var h=0,l=s.length;l>h;h++)a=s[h],ze.texImage2D(ze.TEXTURE_2D,h,n,n,o,a);t.generateMipmaps=!1}else ze.texImage2D(ze.TEXTURE_2D,0,n,n,o,t.image);t.generateMipmaps&&r&&ze.generateMipmap(ze.TEXTURE_2D),t.needsUpdate=!1,t.onUpdate&&t.onUpdate()}else ze.activeTexture(ze.TEXTURE0+e),ze.bindTexture(ze.TEXTURE_2D,t.__webglTexture)},this.setRenderTarget=function(t){var e=t instanceof THREE.WebGLRenderTargetCube;if(t&&!t.__webglFramebuffer){void 0===t.depthBuffer&&(t.depthBuffer=!0),void 0===t.stencilBuffer&&(t.stencilBuffer=!0),t.addEventListener("dispose",Pi),t.__webglTexture=ze.createTexture(),Be.info.memory.textures++;var i=THREE.Math.isPowerOfTwo(t.width)&&THREE.Math.isPowerOfTwo(t.height),r=de(t.format),n=de(t.type);if(e){t.__webglFramebuffer=[],t.__webglRenderbuffer=[],ze.bindTexture(ze.TEXTURE_CUBE_MAP,t.__webglTexture),oe(ze.TEXTURE_CUBE_MAP,t,i);for(var o=0;6>o;o++)t.__webglFramebuffer[o]=ze.createFramebuffer(),t.__webglRenderbuffer[o]=ze.createRenderbuffer(),ze.texImage2D(ze.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,r,t.width,t.height,0,r,n,null),le(t.__webglFramebuffer[o],t,ze.TEXTURE_CUBE_MAP_POSITIVE_X+o),ce(t.__webglRenderbuffer[o],t);i&&ze.generateMipmap(ze.TEXTURE_CUBE_MAP)}else t.__webglFramebuffer=ze.createFramebuffer(),t.__webglRenderbuffer=t.shareDepthFrom?t.shareDepthFrom.__webglRenderbuffer:ze.createRenderbuffer(),ze.bindTexture(ze.TEXTURE_2D,t.__webglTexture),oe(ze.TEXTURE_2D,t,i),ze.texImage2D(ze.TEXTURE_2D,0,r,t.width,t.height,0,r,n,null),le(t.__webglFramebuffer,t,ze.TEXTURE_2D),t.shareDepthFrom?t.depthBuffer&&!t.stencilBuffer?ze.framebufferRenderbuffer(ze.FRAMEBUFFER,ze.DEPTH_ATTACHMENT,ze.RENDERBUFFER,t.__webglRenderbuffer):t.depthBuffer&&t.stencilBuffer&&ze.framebufferRenderbuffer(ze.FRAMEBUFFER,ze.DEPTH_STENCIL_ATTACHMENT,ze.RENDERBUFFER,t.__webglRenderbuffer):ce(t.__webglRenderbuffer,t),i&&ze.generateMipmap(ze.TEXTURE_2D);e?ze.bindTexture(ze.TEXTURE_CUBE_MAP,null):ze.bindTexture(ze.TEXTURE_2D,null),ze.bindRenderbuffer(ze.RENDERBUFFER,null),ze.bindFramebuffer(ze.FRAMEBUFFER,null)}var a,s,h,l,c;t?(a=e?t.__webglFramebuffer[t.activeCubeFace]:t.__webglFramebuffer,s=t.width,h=t.height,l=0,c=0):(a=null,s=si,h=hi,l=oi,c=ai),a!==je&&(ze.bindFramebuffer(ze.FRAMEBUFFER,a),ze.viewport(l,c,s,h),je=a),li=s,ci=h},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(t,e,i){this.width=t,this.height=e,i=i||{},this.wrapS=void 0!==i.wrapS?i.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i.wrapT?i.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==i.magFilter?i.magFilter:THREE.LinearFilter,this.minFilter=void 0!==i.minFilter?i.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==i.format?i.format:THREE.RGBAFormat,this.type=void 0!==i.type?i.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==i.depthBuffer?i.depthBuffer:!0,this.stencilBuffer=void 0!==i.stencilBuffer?i.stencilBuffer:!0,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(t,e){this.width=t,this.height=e},clone:function(){var t=new THREE.WebGLRenderTarget(this.width,this.height);return t.wrapS=this.wrapS,t.wrapT=this.wrapT,t.magFilter=this.magFilter,t.minFilter=this.minFilter,t.anisotropy=this.anisotropy,t.offset.copy(this.offset),t.repeat.copy(this.repeat),t.format=this.format,t.type=this.type,t.depthBuffer=this.depthBuffer,t.stencilBuffer=this.stencilBuffer,t.generateMipmaps=this.generateMipmaps,t.shareDepthFrom=this.shareDepthFrom,t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(t,e,i){THREE.WebGLRenderTarget.call(this,t,e,i),this.activeCubeFace=0
},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.WebGLProgram=function(){var t=0,e=function(t){var e,i,r=[];for(var n in t)e=t[n],e!==!1&&(i="#define "+n+" "+e,r.push(i));return r.join("\n")},i=function(t,e,i){for(var r={},n=0,o=i.length;o>n;n++){var a=i[n];r[a]=t.getUniformLocation(e,a)}return r},r=function(t,e,i){for(var r={},n=0,o=i.length;o>n;n++){var a=i[n];r[a]=t.getAttribLocation(e,a)}return r};return function(n,o,a,s){var h=n,l=h.context,c=a.fragmentShader,u=a.vertexShader,f=a.uniforms,d=a.attributes,p=a.defines,E=a.index0AttributeName;void 0===E&&s.morphTargets===!0&&(E="position");var m="SHADOWMAP_TYPE_BASIC";s.shadowMapType===THREE.PCFShadowMap?m="SHADOWMAP_TYPE_PCF":s.shadowMapType===THREE.PCFSoftShadowMap&&(m="SHADOWMAP_TYPE_PCF_SOFT");var y,v,g=e(p),x=l.createProgram();a instanceof THREE.RawShaderMaterial?(y="",v=""):(y=["precision "+s.precision+" float;","precision "+s.precision+" int;",g,s.supportsVertexTextures?"#define VERTEX_TEXTURES":"",h.gammaInput?"#define GAMMA_INPUT":"",h.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,"#define MAX_SPOT_LIGHTS "+s.maxSpotLights,"#define MAX_HEMI_LIGHTS "+s.maxHemiLights,"#define MAX_SHADOWS "+s.maxShadows,"#define MAX_BONES "+s.maxBones,s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.lightMap?"#define USE_LIGHTMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.vertexColors?"#define USE_COLOR":"",s.skinning?"#define USE_SKINNING":"",s.useVertexTexture?"#define BONE_TEXTURE":"",s.morphTargets?"#define USE_MORPHTARGETS":"",s.morphNormals?"#define USE_MORPHNORMALS":"",s.wrapAround?"#define WRAP_AROUND":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+m:"",s.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",s.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",s.sizeAttenuation?"#define USE_SIZEATTENUATION":"",s.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",""].join("\n"),v=["precision "+s.precision+" float;","precision "+s.precision+" int;",s.bumpMap||s.normalMap?"#extension GL_OES_standard_derivatives : enable":"",g,"#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,"#define MAX_SPOT_LIGHTS "+s.maxSpotLights,"#define MAX_HEMI_LIGHTS "+s.maxHemiLights,"#define MAX_SHADOWS "+s.maxShadows,s.alphaTest?"#define ALPHATEST "+s.alphaTest:"",h.gammaInput?"#define GAMMA_INPUT":"",h.gammaOutput?"#define GAMMA_OUTPUT":"",s.useFog&&s.fog?"#define USE_FOG":"",s.useFog&&s.fogExp?"#define FOG_EXP2":"",s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.lightMap?"#define USE_LIGHTMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.vertexColors?"#define USE_COLOR":"",s.metal?"#define METAL":"",s.wrapAround?"#define WRAP_AROUND":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+m:"",s.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",s.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",s.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n"));var T=new THREE.WebGLShader(l,l.VERTEX_SHADER,y+u),R=new THREE.WebGLShader(l,l.FRAGMENT_SHADER,v+c);l.attachShader(x,T),l.attachShader(x,R),void 0!==E&&l.bindAttribLocation(x,0,E),l.linkProgram(x),l.getProgramParameter(x,l.LINK_STATUS)===!1&&(console.error("Could not initialise shader"),console.error("gl.VALIDATE_STATUS",l.getProgramParameter(x,l.VALIDATE_STATUS)),console.error("gl.getError()",l.getError())),""!==l.getProgramInfoLog(x)&&console.error("gl.getProgramInfoLog()",l.getProgramInfoLog(x)),l.deleteShader(T),l.deleteShader(R);var _=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences"];s.useVertexTexture?(_.push("boneTexture"),_.push("boneTextureWidth"),_.push("boneTextureHeight")):_.push("boneGlobalMatrices"),s.logarithmicDepthBuffer&&_.push("logDepthBufFC");for(var b in f)_.push(b);this.uniforms=i(l,x,_),_=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"];for(var w=0;w<s.maxMorphTargets;w++)_.push("morphTarget"+w);for(var w=0;w<s.maxMorphNormals;w++)_.push("morphNormal"+w);for(var H in d)_.push(H);return this.attributes=r(l,x,_),this.id=t++,this.code=o,this.usedTimes=1,this.program=x,this.vertexShader=T,this.fragmentShader=R,this}}(),THREE.WebGLShader=function(){var t=function(t){for(var e=t.split("\n"),i=0;i<e.length;i++)e[i]=i+1+": "+e[i];return e.join("\n")};return function(e,i,r){var n=e.createShader(i);return e.shaderSource(n,r),e.compileShader(n),e.getShaderParameter(n,e.COMPILE_STATUS)===!1&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==e.getShaderInfoLog(n)&&(console.error("THREE.WebGLShader:","gl.getShaderInfoLog()",e.getShaderInfoLog(n)),console.error(t(r))),n}}(),THREE.RenderableVertex=function(){this.position=new THREE.Vector3,this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(t){this.positionWorld.copy(t.positionWorld),this.positionScreen.copy(t.positionScreen)},THREE.RenderableFace=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.normalModel=new THREE.Vector3,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.color=null,this.material=null,this.uvs=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2],this.z=0},THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0},THREE.RenderableSprite=function(){this.id=0,this.object=null,this.x=0,this.y=0,this.z=0,this.rotation=0,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=0,i=this.children.length;i>e;e++)this.children[e].updateMatrixWorld(t)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.SphereGeometry=function(t,e,i,r,n,o,a){THREE.Geometry.call(this),this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:r,phiLength:n,thetaStart:o,thetaLength:a},t=t||50,e=Math.max(3,Math.floor(e)||8),i=Math.max(2,Math.floor(i)||6),r=void 0!==r?r:0,n=void 0!==n?n:2*Math.PI,o=void 0!==o?o:0,a=void 0!==a?a:Math.PI;var s,h,l=[],c=[];for(h=0;i>=h;h++){var u=[],f=[];for(s=0;e>=s;s++){var d=s/e,p=h/i,E=new THREE.Vector3;E.x=-t*Math.cos(r+d*n)*Math.sin(o+p*a),E.y=t*Math.cos(o+p*a),E.z=t*Math.sin(r+d*n)*Math.sin(o+p*a),this.vertices.push(E),u.push(this.vertices.length-1),f.push(new THREE.Vector2(d,1-p))}l.push(u),c.push(f)}for(h=0;i>h;h++)for(s=0;e>s;s++){var m=l[h][s+1],y=l[h][s],v=l[h+1][s],g=l[h+1][s+1],x=this.vertices[m].clone().normalize(),T=this.vertices[y].clone().normalize(),R=this.vertices[v].clone().normalize(),_=this.vertices[g].clone().normalize(),b=c[h][s+1].clone(),w=c[h][s].clone(),H=c[h+1][s].clone(),M=c[h+1][s+1].clone();Math.abs(this.vertices[m].y)===t?(b.x=(b.x+w.x)/2,this.faces.push(new THREE.Face3(m,v,g,[x,R,_])),this.faceVertexUvs[0].push([b,H,M])):Math.abs(this.vertices[v].y)===t?(H.x=(H.x+M.x)/2,this.faces.push(new THREE.Face3(m,y,v,[x,T,R])),this.faceVertexUvs[0].push([b,w,H])):(this.faces.push(new THREE.Face3(m,y,g,[x,T,_])),this.faceVertexUvs[0].push([b,w,M]),this.faces.push(new THREE.Face3(y,v,g,[T.clone(),R,_.clone()])),this.faceVertexUvs[0].push([w.clone(),H,M.clone()]))}this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,t)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CameraHelper=function(t){function e(t,e,r){i(t,r),i(e,r)}function i(t,e){r.vertices.push(new THREE.Vector3),r.colors.push(new THREE.Color(e)),void 0===o[t]&&(o[t]=[]),o[t].push(r.vertices.length-1)}var r=new THREE.Geometry,n=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),o={},a=16755200,s=16711680,h=43775,l=16777215,c=3355443;e("n1","n2",a),e("n2","n4",a),e("n4","n3",a),e("n3","n1",a),e("f1","f2",a),e("f2","f4",a),e("f4","f3",a),e("f3","f1",a),e("n1","f1",a),e("n2","f2",a),e("n3","f3",a),e("n4","f4",a),e("p","n1",s),e("p","n2",s),e("p","n3",s),e("p","n4",s),e("u1","u2",h),e("u2","u3",h),e("u3","u1",h),e("c","t",l),e("p","c",c),e("cn1","cn2",c),e("cn3","cn4",c),e("cf1","cf2",c),e("cf3","cf4",c),THREE.Line.call(this,r,n,THREE.LinePieces),this.camera=t,this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Camera,i=new THREE.Projector;return function(){function r(r,o,a,s){t.set(o,a,s),i.unprojectVector(t,e);var h=n.pointMap[r];if(void 0!==h)for(var l=0,c=h.length;c>l;l++)n.geometry.vertices[h[l]].copy(t)}var n=this,o=1,a=1;e.projectionMatrix.copy(this.camera.projectionMatrix),r("c",0,0,-1),r("t",0,0,1),r("n1",-o,-a,-1),r("n2",o,-a,-1),r("n3",-o,a,-1),r("n4",o,a,-1),r("f1",-o,-a,1),r("f2",o,-a,1),r("f3",-o,a,1),r("f4",o,a,1),r("u1",.7*o,1.1*a,-1),r("u2",.7*-o,1.1*a,-1),r("u3",0,2*a,-1),r("cf1",-o,0,1),r("cf2",o,0,1),r("cf3",0,-a,1),r("cf4",0,a,1),r("cn1",-o,0,-1),r("cn2",o,0,-1),r("cn3",0,-a,-1),r("cn4",0,a,-1),this.geometry.verticesNeedUpdate=!0}}(),THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(t,e,i,r,n){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==t&&this.add(t,e,i,r,n)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(t,e,i,r,n,o){void 0===e&&(e=-1),void 0===i&&(i=0),void 0===o&&(o=1),void 0===n&&(n=new THREE.Color(16777215)),void 0===r&&(r=THREE.NormalBlending),i=Math.min(i,Math.max(0,i)),this.lensFlares.push({texture:t,size:e,distance:i,x:0,y:0,z:0,scale:1,rotation:1,opacity:o,color:n,blending:r})},THREE.LensFlare.prototype.updateLensFlares=function(){var t,e,i=this.lensFlares.length,r=2*-this.positionScreen.x,n=2*-this.positionScreen.y;for(t=0;i>t;t++)e=this.lensFlares[t],e.x=this.positionScreen.x+r*e.distance,e.y=this.positionScreen.y+n*e.distance,e.wantedRotation=e.x*Math.PI*.25,e.rotation+=.25*(e.wantedRotation-e.rotation)},THREE.LensFlarePlugin=function(){function t(t,i){var r=e.createProgram(),n=e.createShader(e.FRAGMENT_SHADER),o=e.createShader(e.VERTEX_SHADER),a="precision "+i+" float;\n";return e.shaderSource(n,a+t.fragmentShader),e.shaderSource(o,a+t.vertexShader),e.compileShader(n),e.compileShader(o),e.attachShader(r,n),e.attachShader(r,o),e.linkProgram(r),r}var e,i,r,n={};this.init=function(o){e=o.context,i=o,r=o.getPrecision(),n.vertices=new Float32Array(16),n.faces=new Uint16Array(6);var a=0;n.vertices[a++]=-1,n.vertices[a++]=-1,n.vertices[a++]=0,n.vertices[a++]=0,n.vertices[a++]=1,n.vertices[a++]=-1,n.vertices[a++]=1,n.vertices[a++]=0,n.vertices[a++]=1,n.vertices[a++]=1,n.vertices[a++]=1,n.vertices[a++]=1,n.vertices[a++]=-1,n.vertices[a++]=1,n.vertices[a++]=0,n.vertices[a++]=1,a=0,n.faces[a++]=0,n.faces[a++]=1,n.faces[a++]=2,n.faces[a++]=0,n.faces[a++]=2,n.faces[a++]=3,n.vertexBuffer=e.createBuffer(),n.elementBuffer=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,n.vertexBuffer),e.bufferData(e.ARRAY_BUFFER,n.vertices,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n.elementBuffer),e.bufferData(e.ELEMENT_ARRAY_BUFFER,n.faces,e.STATIC_DRAW),n.tempTexture=e.createTexture(),n.occlusionTexture=e.createTexture(),e.bindTexture(e.TEXTURE_2D,n.tempTexture),e.texImage2D(e.TEXTURE_2D,0,e.RGB,16,16,0,e.RGB,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.bindTexture(e.TEXTURE_2D,n.occlusionTexture),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,16,16,0,e.RGBA,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(n.hasVertexTexture=!1,n.program=t(THREE.ShaderFlares.lensFlare,r)):(n.hasVertexTexture=!0,n.program=t(THREE.ShaderFlares.lensFlareVertexTexture,r)),n.attributes={},n.uniforms={},n.attributes.vertex=e.getAttribLocation(n.program,"position"),n.attributes.uv=e.getAttribLocation(n.program,"uv"),n.uniforms.renderType=e.getUniformLocation(n.program,"renderType"),n.uniforms.map=e.getUniformLocation(n.program,"map"),n.uniforms.occlusionMap=e.getUniformLocation(n.program,"occlusionMap"),n.uniforms.opacity=e.getUniformLocation(n.program,"opacity"),n.uniforms.color=e.getUniformLocation(n.program,"color"),n.uniforms.scale=e.getUniformLocation(n.program,"scale"),n.uniforms.rotation=e.getUniformLocation(n.program,"rotation"),n.uniforms.screenPosition=e.getUniformLocation(n.program,"screenPosition")},this.render=function(t,r,o,a){var s=t.__webglFlares,h=s.length;if(h){var l=new THREE.Vector3,c=a/o,u=.5*o,f=.5*a,d=16/a,p=new THREE.Vector2(d*c,d),E=new THREE.Vector3(1,1,0),m=new THREE.Vector2(1,1),y=n.uniforms,v=n.attributes;e.useProgram(n.program),e.enableVertexAttribArray(n.attributes.vertex),e.enableVertexAttribArray(n.attributes.uv),e.uniform1i(y.occlusionMap,0),e.uniform1i(y.map,1),e.bindBuffer(e.ARRAY_BUFFER,n.vertexBuffer),e.vertexAttribPointer(v.vertex,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(v.uv,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n.elementBuffer),e.disable(e.CULL_FACE),e.depthMask(!1);var g,x,T,R,_;for(g=0;h>g;g++)if(d=16/a,p.set(d*c,d),R=s[g],l.set(R.matrixWorld.elements[12],R.matrixWorld.elements[13],R.matrixWorld.elements[14]),l.applyMatrix4(r.matrixWorldInverse),l.applyProjection(r.projectionMatrix),E.copy(l),m.x=E.x*u+u,m.y=E.y*f+f,n.hasVertexTexture||m.x>0&&m.x<o&&m.y>0&&m.y<a)for(e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,n.tempTexture),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGB,m.x-8,m.y-8,16,16,0),e.uniform1i(y.renderType,0),e.uniform2f(y.scale,p.x,p.y),e.uniform3f(y.screenPosition,E.x,E.y,E.z),e.disable(e.BLEND),e.enable(e.DEPTH_TEST),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,n.occlusionTexture),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGBA,m.x-8,m.y-8,16,16,0),e.uniform1i(y.renderType,1),e.disable(e.DEPTH_TEST),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,n.tempTexture),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),R.positionScreen.copy(E),R.customUpdateCallback?R.customUpdateCallback(R):R.updateLensFlares(),e.uniform1i(y.renderType,2),e.enable(e.BLEND),x=0,T=R.lensFlares.length;T>x;x++)_=R.lensFlares[x],_.opacity>.001&&_.scale>.001&&(E.x=_.x,E.y=_.y,E.z=_.z,d=_.size*_.scale/a,p.x=d*c,p.y=d,e.uniform3f(y.screenPosition,E.x,E.y,E.z),e.uniform2f(y.scale,p.x,p.y),e.uniform1f(y.rotation,_.rotation),e.uniform1f(y.opacity,_.opacity),e.uniform3f(y.color,_.color.r,_.color.g,_.color.b),i.setBlending(_.blending,_.blendEquation,_.blendSrc,_.blendDst),i.setTexture(_.texture,1),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0));e.enable(e.CULL_FACE),e.enable(e.DEPTH_TEST),e.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){function t(t,e){var i=new THREE.DirectionalLight;i.isVirtual=!0,i.onlyShadow=!0,i.castShadow=!0,i.shadowCameraNear=t.shadowCameraNear,i.shadowCameraFar=t.shadowCameraFar,i.shadowCameraLeft=t.shadowCameraLeft,i.shadowCameraRight=t.shadowCameraRight,i.shadowCameraBottom=t.shadowCameraBottom,i.shadowCameraTop=t.shadowCameraTop,i.shadowCameraVisible=t.shadowCameraVisible,i.shadowDarkness=t.shadowDarkness,i.shadowBias=t.shadowCascadeBias[e],i.shadowMapWidth=t.shadowCascadeWidth[e],i.shadowMapHeight=t.shadowCascadeHeight[e],i.pointsWorld=[],i.pointsFrustum=[];for(var r=i.pointsWorld,n=i.pointsFrustum,o=0;8>o;o++)r[o]=new THREE.Vector3,n[o]=new THREE.Vector3;var a=t.shadowCascadeNearZ[e],s=t.shadowCascadeFarZ[e];return n[0].set(-1,-1,a),n[1].set(1,-1,a),n[2].set(-1,1,a),n[3].set(1,1,a),n[4].set(-1,-1,s),n[5].set(1,-1,s),n[6].set(-1,1,s),n[7].set(1,1,s),i}function e(t,e){var i=t.shadowCascadeArray[e];i.position.copy(t.position),i.target.position.copy(t.target.position),i.lookAt(i.target),i.shadowCameraVisible=t.shadowCameraVisible,i.shadowDarkness=t.shadowDarkness,i.shadowBias=t.shadowCascadeBias[e];var r=t.shadowCascadeNearZ[e],n=t.shadowCascadeFarZ[e],o=i.pointsFrustum;o[0].z=r,o[1].z=r,o[2].z=r,o[3].z=r,o[4].z=n,o[5].z=n,o[6].z=n,o[7].z=n}function i(t,e){var i=e.shadowCamera,r=e.pointsFrustum,n=e.pointsWorld;f.set(1/0,1/0,1/0),d.set(-1/0,-1/0,-1/0);for(var o=0;8>o;o++){var a=n[o];a.copy(r[o]),THREE.ShadowMapPlugin.__projector.unprojectVector(a,t),a.applyMatrix4(i.matrixWorldInverse),a.x<f.x&&(f.x=a.x),a.x>d.x&&(d.x=a.x),a.y<f.y&&(f.y=a.y),a.y>d.y&&(d.y=a.y),a.z<f.z&&(f.z=a.z),a.z>d.z&&(d.z=a.z)}i.left=f.x,i.right=d.x,i.top=d.y,i.bottom=f.y,i.updateProjectionMatrix()}function r(t){return t.material instanceof THREE.MeshFaceMaterial?t.material.materials[0]:t.material}var n,o,a,s,h,l,c=new THREE.Frustum,u=new THREE.Matrix4,f=new THREE.Vector3,d=new THREE.Vector3,p=new THREE.Vector3;this.init=function(t){n=t.context,o=t;var e=THREE.ShaderLib.depthRGBA,i=THREE.UniformsUtils.clone(e.uniforms);a=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:i}),s=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:i,morphTargets:!0}),h=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:i,skinning:!0}),l=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:i,morphTargets:!0,skinning:!0}),a._shadowPass=!0,s._shadowPass=!0,h._shadowPass=!0,l._shadowPass=!0},this.render=function(t,e){o.shadowMapEnabled&&o.shadowMapAutoUpdate&&this.update(t,e)},this.update=function(f,d){var E,m,y,v,g,x,T,R,_,b,w,H,M,S,A=[],C=0,z=null;for(n.clearColor(1,1,1,1),n.disable(n.BLEND),n.enable(n.CULL_FACE),n.frontFace(n.CCW),n.cullFace(o.shadowMapCullFace===THREE.CullFaceFront?n.FRONT:n.BACK),o.setDepthTest(!0),E=0,m=f.__lights.length;m>E;E++)if(M=f.__lights[E],M.castShadow)if(M instanceof THREE.DirectionalLight&&M.shadowCascade)for(g=0;g<M.shadowCascadeCount;g++){var D;if(M.shadowCascadeArray[g])D=M.shadowCascadeArray[g];else{D=t(M,g),D.originalCamera=d;var F=new THREE.Gyroscope;F.position.copy(M.shadowCascadeOffset),F.add(D),F.add(D.target),d.add(F),M.shadowCascadeArray[g]=D,console.log("Created virtualLight",D)}e(M,g),A[C]=D,C++}else A[C]=M,C++;for(E=0,m=A.length;m>E;E++){if(M=A[E],!M.shadowMap){var P=THREE.LinearFilter;o.shadowMapType===THREE.PCFSoftShadowMap&&(P=THREE.NearestFilter);var L={minFilter:P,magFilter:P,format:THREE.RGBAFormat};M.shadowMap=new THREE.WebGLRenderTarget(M.shadowMapWidth,M.shadowMapHeight,L),M.shadowMapSize=new THREE.Vector2(M.shadowMapWidth,M.shadowMapHeight),M.shadowMatrix=new THREE.Matrix4}if(!M.shadowCamera){if(M instanceof THREE.SpotLight)M.shadowCamera=new THREE.PerspectiveCamera(M.shadowCameraFov,M.shadowMapWidth/M.shadowMapHeight,M.shadowCameraNear,M.shadowCameraFar);else{if(!(M instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}M.shadowCamera=new THREE.OrthographicCamera(M.shadowCameraLeft,M.shadowCameraRight,M.shadowCameraTop,M.shadowCameraBottom,M.shadowCameraNear,M.shadowCameraFar)}f.add(M.shadowCamera),f.autoUpdate===!0&&f.updateMatrixWorld()}for(M.shadowCameraVisible&&!M.cameraHelper&&(M.cameraHelper=new THREE.CameraHelper(M.shadowCamera),M.shadowCamera.add(M.cameraHelper)),M.isVirtual&&D.originalCamera==d&&i(d,M),x=M.shadowMap,T=M.shadowMatrix,R=M.shadowCamera,R.position.setFromMatrixPosition(M.matrixWorld),p.setFromMatrixPosition(M.target.matrixWorld),R.lookAt(p),R.updateMatrixWorld(),R.matrixWorldInverse.getInverse(R.matrixWorld),M.cameraHelper&&(M.cameraHelper.visible=M.shadowCameraVisible),M.shadowCameraVisible&&M.cameraHelper.update(),T.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),T.multiply(R.projectionMatrix),T.multiply(R.matrixWorldInverse),u.multiplyMatrices(R.projectionMatrix,R.matrixWorldInverse),c.setFromMatrix(u),o.setRenderTarget(x),o.clear(),S=f.__webglObjects,y=0,v=S.length;v>y;y++)w=S[y],H=w.object,w.render=!1,H.visible&&H.castShadow&&((H instanceof THREE.Mesh||H instanceof THREE.ParticleSystem)&&H.frustumCulled&&!c.intersectsObject(H)||(H._modelViewMatrix.multiplyMatrices(R.matrixWorldInverse,H.matrixWorld),w.render=!0));var V,U,O;for(y=0,v=S.length;v>y;y++)w=S[y],w.render&&(H=w.object,_=w.buffer,V=r(H),U=void 0!==H.geometry.morphTargets&&H.geometry.morphTargets.length>0&&V.morphTargets,O=H instanceof THREE.SkinnedMesh&&V.skinning,b=H.customDepthMaterial?H.customDepthMaterial:O?U?l:h:U?s:a,o.setMaterialFaces(V),_ instanceof THREE.BufferGeometry?o.renderBufferDirect(R,f.__lights,z,b,_,H):o.renderBuffer(R,f.__lights,z,b,_,H));for(S=f.__webglObjectsImmediate,y=0,v=S.length;v>y;y++)w=S[y],H=w.object,H.visible&&H.castShadow&&(H._modelViewMatrix.multiplyMatrices(R.matrixWorldInverse,H.matrixWorld),o.renderImmediateObject(R,f.__lights,z,a,H))}var B=o.getClearColor(),N=o.getClearAlpha();n.clearColor(B.r,B.g,B.b,N),n.enable(n.BLEND),o.shadowMapCullFace===THREE.CullFaceFront&&n.cullFace(n.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function t(){var t=i.createProgram(),e=i.createShader(i.VERTEX_SHADER),n=i.createShader(i.FRAGMENT_SHADER);return i.shaderSource(e,["precision "+r.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),i.shaderSource(n,["precision "+r.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),i.compileShader(e),i.compileShader(n),i.attachShader(t,e),i.attachShader(t,n),i.linkProgram(t),t}function e(t,e){return t.z!==e.z?e.z-t.z:e.id-t.id}var i,r,n,o,a,s,h,l,c,u;this.init=function(e){i=e.context,r=e,o=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),a=new Uint16Array([0,1,2,0,2,3]),s=i.createBuffer(),h=i.createBuffer(),i.bindBuffer(i.ARRAY_BUFFER,s),i.bufferData(i.ARRAY_BUFFER,o,i.STATIC_DRAW),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,h),i.bufferData(i.ELEMENT_ARRAY_BUFFER,a,i.STATIC_DRAW),l=t(),c={position:i.getAttribLocation(l,"position"),uv:i.getAttribLocation(l,"uv")},u={uvOffset:i.getUniformLocation(l,"uvOffset"),uvScale:i.getUniformLocation(l,"uvScale"),rotation:i.getUniformLocation(l,"rotation"),scale:i.getUniformLocation(l,"scale"),color:i.getUniformLocation(l,"color"),map:i.getUniformLocation(l,"map"),opacity:i.getUniformLocation(l,"opacity"),modelViewMatrix:i.getUniformLocation(l,"modelViewMatrix"),projectionMatrix:i.getUniformLocation(l,"projectionMatrix"),fogType:i.getUniformLocation(l,"fogType"),fogDensity:i.getUniformLocation(l,"fogDensity"),fogNear:i.getUniformLocation(l,"fogNear"),fogFar:i.getUniformLocation(l,"fogFar"),fogColor:i.getUniformLocation(l,"fogColor"),alphaTest:i.getUniformLocation(l,"alphaTest")};var f=document.createElement("canvas");f.width=8,f.height=8;var d=f.getContext("2d");d.fillStyle="#ffffff",d.fillRect(0,0,f.width,f.height),n=new THREE.Texture(f),n.needsUpdate=!0},this.render=function(t,o){var a=t.__webglSprites,f=a.length;if(f){i.useProgram(l),i.enableVertexAttribArray(c.position),i.enableVertexAttribArray(c.uv),i.disable(i.CULL_FACE),i.enable(i.BLEND),i.bindBuffer(i.ARRAY_BUFFER,s),i.vertexAttribPointer(c.position,2,i.FLOAT,!1,16,0),i.vertexAttribPointer(c.uv,2,i.FLOAT,!1,16,8),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,h),i.uniformMatrix4fv(u.projectionMatrix,!1,o.projectionMatrix.elements),i.activeTexture(i.TEXTURE0),i.uniform1i(u.map,0);var d=0,p=0,E=t.fog;E?(i.uniform3f(u.fogColor,E.color.r,E.color.g,E.color.b),E instanceof THREE.Fog?(i.uniform1f(u.fogNear,E.near),i.uniform1f(u.fogFar,E.far),i.uniform1i(u.fogType,1),d=1,p=1):E instanceof THREE.FogExp2&&(i.uniform1f(u.fogDensity,E.density),i.uniform1i(u.fogType,2),d=2,p=2)):(i.uniform1i(u.fogType,0),d=0,p=0);var m,y,v,g,x=[];for(m=0;f>m;m++)y=a[m],v=y.material,y.visible!==!1&&(y._modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,y.matrixWorld),y.z=-y._modelViewMatrix.elements[14]);for(a.sort(e),m=0;f>m;m++)y=a[m],y.visible!==!1&&(v=y.material,i.uniform1f(u.alphaTest,v.alphaTest),i.uniformMatrix4fv(u.modelViewMatrix,!1,y._modelViewMatrix.elements),x[0]=y.scale.x,x[1]=y.scale.y,g=t.fog&&v.fog?p:0,d!==g&&(i.uniform1i(u.fogType,g),d=g),null!==v.map?(i.uniform2f(u.uvOffset,v.map.offset.x,v.map.offset.y),i.uniform2f(u.uvScale,v.map.repeat.x,v.map.repeat.y)):(i.uniform2f(u.uvOffset,0,0),i.uniform2f(u.uvScale,1,1)),i.uniform1f(u.opacity,v.opacity),i.uniform3f(u.color,v.color.r,v.color.g,v.color.b),i.uniform1f(u.rotation,v.rotation),i.uniform2fv(u.scale,x),r.setBlending(v.blending,v.blendEquation,v.blendSrc,v.blendDst),r.setDepthTest(v.depthTest),r.setDepthWrite(v.depthWrite),v.map&&v.map.image&&v.map.image.width?r.setTexture(v.map,0):r.setTexture(n,0),i.drawElements(i.TRIANGLES,6,i.UNSIGNED_SHORT,0));i.enable(i.CULL_FACE)}}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}};
